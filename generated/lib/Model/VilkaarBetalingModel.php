<?php
/**
 * VilkaarBetalingModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Resights API
 *
 * <img src=\"static/resights/resights-logo.png\" alt=\"Resights Logo\" style=\"position: absolute; top: 52px; right: 36px\" align=\"right\" width=\"240\"> <a href=\"/docs\">Swagger</a> | <a href=\"/redoc\">Redoc</a> <br> <br> <div><b>Welcome API ðŸ‘‹</b></div> <br>  <br>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: mikkel@resights.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * VilkaarBetalingModel Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class VilkaarBetalingModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'VilkaarBetalingModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'betaling_termin_samling' => 'mixed',
        'foerste_betaling_dato' => 'mixed',
        'betaling_termin_foerste' => '\OpenAPI\Client\Model\BetalingTerminModel',
        'betaling_termin_sidste' => '\OpenAPI\Client\Model\BetalingTerminModel',
        'bidrag' => '\OpenAPI\Client\Model\HaeftelseBidragModel',
        'betalinger_aarligt_antal' => 'mixed',
        'morarente' => '\OpenAPI\Client\Model\MorarenteModel',
        'tilbagebetalingsmaade_kode' => '\OpenAPI\Client\Model\TilbagebetalingsmaadeKodeEnum',
        'ydelse_aarligt_samlet' => '\OpenAPI\Client\Model\BeloebModel',
        'ydelsestype' => '\OpenAPI\Client\Model\YdelsestypeModel',
        'afdragsfrihed' => '\OpenAPI\Client\Model\AfdragsfrihedModel',
        'vilkaar_samling' => 'mixed'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'betaling_termin_samling' => null,
        'foerste_betaling_dato' => 'date',
        'betaling_termin_foerste' => null,
        'betaling_termin_sidste' => null,
        'bidrag' => null,
        'betalinger_aarligt_antal' => null,
        'morarente' => null,
        'tilbagebetalingsmaade_kode' => null,
        'ydelse_aarligt_samlet' => null,
        'ydelsestype' => null,
        'afdragsfrihed' => null,
        'vilkaar_samling' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'betaling_termin_samling' => true,
		'foerste_betaling_dato' => true,
		'betaling_termin_foerste' => false,
		'betaling_termin_sidste' => false,
		'bidrag' => false,
		'betalinger_aarligt_antal' => true,
		'morarente' => false,
		'tilbagebetalingsmaade_kode' => false,
		'ydelse_aarligt_samlet' => false,
		'ydelsestype' => false,
		'afdragsfrihed' => false,
		'vilkaar_samling' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'betaling_termin_samling' => 'BetalingTerminSamling',
        'foerste_betaling_dato' => 'FoersteBetalingDato',
        'betaling_termin_foerste' => 'BetalingTerminFoerste',
        'betaling_termin_sidste' => 'BetalingTerminSidste',
        'bidrag' => 'Bidrag',
        'betalinger_aarligt_antal' => 'BetalingerAarligtAntal',
        'morarente' => 'Morarente',
        'tilbagebetalingsmaade_kode' => 'TilbagebetalingsmaadeKode',
        'ydelse_aarligt_samlet' => 'YdelseAarligtSamlet',
        'ydelsestype' => 'Ydelsestype',
        'afdragsfrihed' => 'Afdragsfrihed',
        'vilkaar_samling' => 'VilkaarSamling'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'betaling_termin_samling' => 'setBetalingTerminSamling',
        'foerste_betaling_dato' => 'setFoersteBetalingDato',
        'betaling_termin_foerste' => 'setBetalingTerminFoerste',
        'betaling_termin_sidste' => 'setBetalingTerminSidste',
        'bidrag' => 'setBidrag',
        'betalinger_aarligt_antal' => 'setBetalingerAarligtAntal',
        'morarente' => 'setMorarente',
        'tilbagebetalingsmaade_kode' => 'setTilbagebetalingsmaadeKode',
        'ydelse_aarligt_samlet' => 'setYdelseAarligtSamlet',
        'ydelsestype' => 'setYdelsestype',
        'afdragsfrihed' => 'setAfdragsfrihed',
        'vilkaar_samling' => 'setVilkaarSamling'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'betaling_termin_samling' => 'getBetalingTerminSamling',
        'foerste_betaling_dato' => 'getFoersteBetalingDato',
        'betaling_termin_foerste' => 'getBetalingTerminFoerste',
        'betaling_termin_sidste' => 'getBetalingTerminSidste',
        'bidrag' => 'getBidrag',
        'betalinger_aarligt_antal' => 'getBetalingerAarligtAntal',
        'morarente' => 'getMorarente',
        'tilbagebetalingsmaade_kode' => 'getTilbagebetalingsmaadeKode',
        'ydelse_aarligt_samlet' => 'getYdelseAarligtSamlet',
        'ydelsestype' => 'getYdelsestype',
        'afdragsfrihed' => 'getAfdragsfrihed',
        'vilkaar_samling' => 'getVilkaarSamling'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('betaling_termin_samling', $data ?? [], null);
        $this->setIfExists('foerste_betaling_dato', $data ?? [], null);
        $this->setIfExists('betaling_termin_foerste', $data ?? [], null);
        $this->setIfExists('betaling_termin_sidste', $data ?? [], null);
        $this->setIfExists('bidrag', $data ?? [], null);
        $this->setIfExists('betalinger_aarligt_antal', $data ?? [], null);
        $this->setIfExists('morarente', $data ?? [], null);
        $this->setIfExists('tilbagebetalingsmaade_kode', $data ?? [], null);
        $this->setIfExists('ydelse_aarligt_samlet', $data ?? [], null);
        $this->setIfExists('ydelsestype', $data ?? [], null);
        $this->setIfExists('afdragsfrihed', $data ?? [], null);
        $this->setIfExists('vilkaar_samling', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['tilbagebetalingsmaade_kode'] === null) {
            $invalidProperties[] = "'tilbagebetalingsmaade_kode' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets betaling_termin_samling
     *
     * @return mixed|null
     */
    public function getBetalingTerminSamling()
    {
        return $this->container['betaling_termin_samling'];
    }

    /**
     * Sets betaling_termin_samling
     *
     * @param mixed|null $betaling_termin_samling Angiver terminsperioder og tilhÃ¸rende forfaldstidspunkter. Skal altid anfÃ¸res nÃ¥r der er aftalt betalinger af ydelser eller rente pÃ¥ hÃ¦ftelsen. Er optional i forbindelse med stÃ¥ende lÃ¥n uden rente.
     *
     * @return self
     */
    public function setBetalingTerminSamling($betaling_termin_samling)
    {
        if (is_null($betaling_termin_samling)) {
            array_push($this->openAPINullablesSetToNull, 'betaling_termin_samling');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('betaling_termin_samling', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['betaling_termin_samling'] = $betaling_termin_samling;

        return $this;
    }

    /**
     * Gets foerste_betaling_dato
     *
     * @return mixed|null
     */
    public function getFoersteBetalingDato()
    {
        return $this->container['foerste_betaling_dato'];
    }

    /**
     * Sets foerste_betaling_dato
     *
     * @param mixed|null $foerste_betaling_dato Dato for betaling af fÃ¸rste ydelse. Ikke nÃ¸dvendig at opgive for realkreditpantebreve.
     *
     * @return self
     */
    public function setFoersteBetalingDato($foerste_betaling_dato)
    {
        if (is_null($foerste_betaling_dato)) {
            array_push($this->openAPINullablesSetToNull, 'foerste_betaling_dato');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('foerste_betaling_dato', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['foerste_betaling_dato'] = $foerste_betaling_dato;

        return $this;
    }

    /**
     * Gets betaling_termin_foerste
     *
     * @return \OpenAPI\Client\Model\BetalingTerminModel|null
     */
    public function getBetalingTerminFoerste()
    {
        return $this->container['betaling_termin_foerste'];
    }

    /**
     * Sets betaling_termin_foerste
     *
     * @param \OpenAPI\Client\Model\BetalingTerminModel|null $betaling_termin_foerste betaling_termin_foerste
     *
     * @return self
     */
    public function setBetalingTerminFoerste($betaling_termin_foerste)
    {
        if (is_null($betaling_termin_foerste)) {
            throw new \InvalidArgumentException('non-nullable betaling_termin_foerste cannot be null');
        }
        $this->container['betaling_termin_foerste'] = $betaling_termin_foerste;

        return $this;
    }

    /**
     * Gets betaling_termin_sidste
     *
     * @return \OpenAPI\Client\Model\BetalingTerminModel|null
     */
    public function getBetalingTerminSidste()
    {
        return $this->container['betaling_termin_sidste'];
    }

    /**
     * Sets betaling_termin_sidste
     *
     * @param \OpenAPI\Client\Model\BetalingTerminModel|null $betaling_termin_sidste betaling_termin_sidste
     *
     * @return self
     */
    public function setBetalingTerminSidste($betaling_termin_sidste)
    {
        if (is_null($betaling_termin_sidste)) {
            throw new \InvalidArgumentException('non-nullable betaling_termin_sidste cannot be null');
        }
        $this->container['betaling_termin_sidste'] = $betaling_termin_sidste;

        return $this;
    }

    /**
     * Gets bidrag
     *
     * @return \OpenAPI\Client\Model\HaeftelseBidragModel|null
     */
    public function getBidrag()
    {
        return $this->container['bidrag'];
    }

    /**
     * Sets bidrag
     *
     * @param \OpenAPI\Client\Model\HaeftelseBidragModel|null $bidrag bidrag
     *
     * @return self
     */
    public function setBidrag($bidrag)
    {
        if (is_null($bidrag)) {
            throw new \InvalidArgumentException('non-nullable bidrag cannot be null');
        }
        $this->container['bidrag'] = $bidrag;

        return $this;
    }

    /**
     * Gets betalinger_aarligt_antal
     *
     * @return mixed|null
     */
    public function getBetalingerAarligtAntal()
    {
        return $this->container['betalinger_aarligt_antal'];
    }

    /**
     * Sets betalinger_aarligt_antal
     *
     * @param mixed|null $betalinger_aarligt_antal HaeftelseBetalingerAarligtAntal
     *
     * @return self
     */
    public function setBetalingerAarligtAntal($betalinger_aarligt_antal)
    {
        if (is_null($betalinger_aarligt_antal)) {
            array_push($this->openAPINullablesSetToNull, 'betalinger_aarligt_antal');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('betalinger_aarligt_antal', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['betalinger_aarligt_antal'] = $betalinger_aarligt_antal;

        return $this;
    }

    /**
     * Gets morarente
     *
     * @return \OpenAPI\Client\Model\MorarenteModel|null
     */
    public function getMorarente()
    {
        return $this->container['morarente'];
    }

    /**
     * Sets morarente
     *
     * @param \OpenAPI\Client\Model\MorarenteModel|null $morarente morarente
     *
     * @return self
     */
    public function setMorarente($morarente)
    {
        if (is_null($morarente)) {
            throw new \InvalidArgumentException('non-nullable morarente cannot be null');
        }
        $this->container['morarente'] = $morarente;

        return $this;
    }

    /**
     * Gets tilbagebetalingsmaade_kode
     *
     * @return \OpenAPI\Client\Model\TilbagebetalingsmaadeKodeEnum
     */
    public function getTilbagebetalingsmaadeKode()
    {
        return $this->container['tilbagebetalingsmaade_kode'];
    }

    /**
     * Sets tilbagebetalingsmaade_kode
     *
     * @param \OpenAPI\Client\Model\TilbagebetalingsmaadeKodeEnum $tilbagebetalingsmaade_kode tilbagebetalingsmaade_kode
     *
     * @return self
     */
    public function setTilbagebetalingsmaadeKode($tilbagebetalingsmaade_kode)
    {
        if (is_null($tilbagebetalingsmaade_kode)) {
            throw new \InvalidArgumentException('non-nullable tilbagebetalingsmaade_kode cannot be null');
        }
        $this->container['tilbagebetalingsmaade_kode'] = $tilbagebetalingsmaade_kode;

        return $this;
    }

    /**
     * Gets ydelse_aarligt_samlet
     *
     * @return \OpenAPI\Client\Model\BeloebModel|null
     */
    public function getYdelseAarligtSamlet()
    {
        return $this->container['ydelse_aarligt_samlet'];
    }

    /**
     * Sets ydelse_aarligt_samlet
     *
     * @param \OpenAPI\Client\Model\BeloebModel|null $ydelse_aarligt_samlet ydelse_aarligt_samlet
     *
     * @return self
     */
    public function setYdelseAarligtSamlet($ydelse_aarligt_samlet)
    {
        if (is_null($ydelse_aarligt_samlet)) {
            throw new \InvalidArgumentException('non-nullable ydelse_aarligt_samlet cannot be null');
        }
        $this->container['ydelse_aarligt_samlet'] = $ydelse_aarligt_samlet;

        return $this;
    }

    /**
     * Gets ydelsestype
     *
     * @return \OpenAPI\Client\Model\YdelsestypeModel|null
     */
    public function getYdelsestype()
    {
        return $this->container['ydelsestype'];
    }

    /**
     * Sets ydelsestype
     *
     * @param \OpenAPI\Client\Model\YdelsestypeModel|null $ydelsestype ydelsestype
     *
     * @return self
     */
    public function setYdelsestype($ydelsestype)
    {
        if (is_null($ydelsestype)) {
            throw new \InvalidArgumentException('non-nullable ydelsestype cannot be null');
        }
        $this->container['ydelsestype'] = $ydelsestype;

        return $this;
    }

    /**
     * Gets afdragsfrihed
     *
     * @return \OpenAPI\Client\Model\AfdragsfrihedModel|null
     */
    public function getAfdragsfrihed()
    {
        return $this->container['afdragsfrihed'];
    }

    /**
     * Sets afdragsfrihed
     *
     * @param \OpenAPI\Client\Model\AfdragsfrihedModel|null $afdragsfrihed afdragsfrihed
     *
     * @return self
     */
    public function setAfdragsfrihed($afdragsfrihed)
    {
        if (is_null($afdragsfrihed)) {
            throw new \InvalidArgumentException('non-nullable afdragsfrihed cannot be null');
        }
        $this->container['afdragsfrihed'] = $afdragsfrihed;

        return $this;
    }

    /**
     * Gets vilkaar_samling
     *
     * @return mixed|null
     */
    public function getVilkaarSamling()
    {
        return $this->container['vilkaar_samling'];
    }

    /**
     * Sets vilkaar_samling
     *
     * @param mixed|null $vilkaar_samling HaeftelseVilkaarSamling
     *
     * @return self
     */
    public function setVilkaarSamling($vilkaar_samling)
    {
        if (is_null($vilkaar_samling)) {
            array_push($this->openAPINullablesSetToNull, 'vilkaar_samling');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('vilkaar_samling', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['vilkaar_samling'] = $vilkaar_samling;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


