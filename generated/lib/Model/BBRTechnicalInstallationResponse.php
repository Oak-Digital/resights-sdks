<?php
/**
 * BBRTechnicalInstallationResponse
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Resights API
 *
 * <img src=\"static/resights/resights-logo.png\" alt=\"Resights Logo\" style=\"position: absolute; top: 52px; right: 36px\" align=\"right\" width=\"240\"> <a href=\"/docs\">Swagger</a> | <a href=\"/redoc\">Redoc</a> <br> <br> <div><b>Welcome API üëã</b></div> <br>  <br>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: mikkel@resights.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * BBRTechnicalInstallationResponse Class Doc Comment
 *
 * @category Class
 * @description Definition: En stedfast, klart afgr√¶nset konstruktion, der er opf√∏rt til et bestemt form√•l, og som ikke karakteriseres som en Bygning.  Beskrivelse: Et Teknisk anl√¶g kan v√¶re fritst√•ende eller placeret inde i en Bygning eller en Enhed. Et Teknisk anl√¶g kan i nogle tilf√¶lde v√¶re en Bygning P√• Fremmed Grund (BPFG).
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class BBRTechnicalInstallationResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'BBRTechnicalInstallationResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'mixed',
        'namespace' => 'mixed',
        'status' => 'mixed',
        'business_process' => 'mixed',
        'business_area' => 'mixed',
        'business_event' => 'mixed',
        'registration_from' => 'mixed',
        'registration_to' => 'mixed',
        'registration_actor' => 'mixed',
        'effect_from' => 'mixed',
        'effect_to' => 'mixed',
        'effect_actor' => 'mixed',
        'municipality_code' => 'mixed',
        'tek007_facility_number' => 'mixed',
        'tek020_classification' => 'mixed',
        'tek021_production_type' => 'mixed',
        'tek022_external_database' => 'mixed',
        'tek023_external_key' => 'mixed',
        'tek024_year_of_establishment' => 'mixed',
        'tek025_year_of_renovation' => 'mixed',
        'tek026_oiltank_size' => 'mixed',
        'tek027_location' => 'mixed',
        'tek028_oiltank_removal' => 'mixed',
        'tek030_production_number' => 'mixed',
        'tek031_approval_number_type' => 'mixed',
        'tek032_size' => 'mixed',
        'tek033_type' => 'mixed',
        'tek034_oiltank_content' => 'mixed',
        'tek035_oiltank_removal_deadline' => 'mixed',
        'tek036_volume' => 'mixed',
        'tek037_area' => 'mixed',
        'tek038_height' => 'mixed',
        'tek039_effect' => 'mixed',
        'tek040_preservation' => 'mixed',
        'tek042_revision_date' => 'mixed',
        'tek045_coordinate_system' => 'mixed',
        'tek067_production_year' => 'mixed',
        'tek068_material' => 'mixed',
        'tek069_additional_internal_corrosion_protection' => 'mixed',
        'tek070_additional_internal_corrosion_protection_latest_date' => 'mixed',
        'tek072_removal_year' => 'mixed',
        'tek073_hub_height' => 'mixed',
        'tek074_windmill_number' => 'mixed',
        'tek075_rotor_diameter' => 'mixed',
        'tek076_coordinates_source' => 'mixed',
        'tek077_coordinates_quality' => 'mixed',
        'tek078_coordinates_supplementary_information' => 'mixed',
        'tek101_validation_date' => 'mixed',
        'tek102_windmill_brand' => 'mixed',
        'tek103_oil_fired_burner_brand' => 'mixed',
        'tek104_solarsystem_brand' => 'mixed',
        'tek105_tank_cover' => 'mixed',
        'tek106_tank_inspection_date' => 'mixed',
        'tek107_placement_maritime_territory' => 'mixed',
        'tek109_coordinate' => 'mixed',
        'tek110_operating_status' => 'mixed',
        'tek111_inspection_latest_date' => 'mixed',
        'tek112_inspection_company' => 'mixed',
        'tek500_note' => 'mixed',
        'access_address' => '\OpenAPI\Client\Model\DARAccessAddress'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'uuid',
        'namespace' => null,
        'status' => null,
        'business_process' => null,
        'business_area' => null,
        'business_event' => null,
        'registration_from' => 'date-time',
        'registration_to' => 'date-time',
        'registration_actor' => null,
        'effect_from' => 'date-time',
        'effect_to' => 'date-time',
        'effect_actor' => null,
        'municipality_code' => null,
        'tek007_facility_number' => null,
        'tek020_classification' => null,
        'tek021_production_type' => null,
        'tek022_external_database' => null,
        'tek023_external_key' => null,
        'tek024_year_of_establishment' => null,
        'tek025_year_of_renovation' => null,
        'tek026_oiltank_size' => null,
        'tek027_location' => null,
        'tek028_oiltank_removal' => null,
        'tek030_production_number' => null,
        'tek031_approval_number_type' => null,
        'tek032_size' => null,
        'tek033_type' => null,
        'tek034_oiltank_content' => null,
        'tek035_oiltank_removal_deadline' => 'date-time',
        'tek036_volume' => null,
        'tek037_area' => null,
        'tek038_height' => null,
        'tek039_effect' => null,
        'tek040_preservation' => null,
        'tek042_revision_date' => 'date-time',
        'tek045_coordinate_system' => null,
        'tek067_production_year' => null,
        'tek068_material' => null,
        'tek069_additional_internal_corrosion_protection' => null,
        'tek070_additional_internal_corrosion_protection_latest_date' => 'date-time',
        'tek072_removal_year' => null,
        'tek073_hub_height' => null,
        'tek074_windmill_number' => null,
        'tek075_rotor_diameter' => null,
        'tek076_coordinates_source' => null,
        'tek077_coordinates_quality' => null,
        'tek078_coordinates_supplementary_information' => null,
        'tek101_validation_date' => 'date-time',
        'tek102_windmill_brand' => null,
        'tek103_oil_fired_burner_brand' => null,
        'tek104_solarsystem_brand' => null,
        'tek105_tank_cover' => null,
        'tek106_tank_inspection_date' => 'date-time',
        'tek107_placement_maritime_territory' => null,
        'tek109_coordinate' => null,
        'tek110_operating_status' => null,
        'tek111_inspection_latest_date' => 'date-time',
        'tek112_inspection_company' => null,
        'tek500_note' => null,
        'access_address' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'id' => true,
		'namespace' => true,
		'status' => true,
		'business_process' => true,
		'business_area' => true,
		'business_event' => true,
		'registration_from' => true,
		'registration_to' => true,
		'registration_actor' => true,
		'effect_from' => true,
		'effect_to' => true,
		'effect_actor' => true,
		'municipality_code' => true,
		'tek007_facility_number' => true,
		'tek020_classification' => true,
		'tek021_production_type' => true,
		'tek022_external_database' => true,
		'tek023_external_key' => true,
		'tek024_year_of_establishment' => true,
		'tek025_year_of_renovation' => true,
		'tek026_oiltank_size' => true,
		'tek027_location' => true,
		'tek028_oiltank_removal' => true,
		'tek030_production_number' => true,
		'tek031_approval_number_type' => true,
		'tek032_size' => true,
		'tek033_type' => true,
		'tek034_oiltank_content' => true,
		'tek035_oiltank_removal_deadline' => true,
		'tek036_volume' => true,
		'tek037_area' => true,
		'tek038_height' => true,
		'tek039_effect' => true,
		'tek040_preservation' => true,
		'tek042_revision_date' => true,
		'tek045_coordinate_system' => true,
		'tek067_production_year' => true,
		'tek068_material' => true,
		'tek069_additional_internal_corrosion_protection' => true,
		'tek070_additional_internal_corrosion_protection_latest_date' => true,
		'tek072_removal_year' => true,
		'tek073_hub_height' => true,
		'tek074_windmill_number' => true,
		'tek075_rotor_diameter' => true,
		'tek076_coordinates_source' => true,
		'tek077_coordinates_quality' => true,
		'tek078_coordinates_supplementary_information' => true,
		'tek101_validation_date' => true,
		'tek102_windmill_brand' => true,
		'tek103_oil_fired_burner_brand' => true,
		'tek104_solarsystem_brand' => true,
		'tek105_tank_cover' => true,
		'tek106_tank_inspection_date' => true,
		'tek107_placement_maritime_territory' => true,
		'tek109_coordinate' => true,
		'tek110_operating_status' => true,
		'tek111_inspection_latest_date' => true,
		'tek112_inspection_company' => true,
		'tek500_note' => true,
		'access_address' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'namespace' => 'namespace',
        'status' => 'status',
        'business_process' => 'business_process',
        'business_area' => 'business_area',
        'business_event' => 'business_event',
        'registration_from' => 'registration_from',
        'registration_to' => 'registration_to',
        'registration_actor' => 'registration_actor',
        'effect_from' => 'effect_from',
        'effect_to' => 'effect_to',
        'effect_actor' => 'effect_actor',
        'municipality_code' => 'municipality_code',
        'tek007_facility_number' => 'tek007_facility_number',
        'tek020_classification' => 'tek020_classification',
        'tek021_production_type' => 'tek021_production_type',
        'tek022_external_database' => 'tek022_external_database',
        'tek023_external_key' => 'tek023_external_key',
        'tek024_year_of_establishment' => 'tek024_year_of_establishment',
        'tek025_year_of_renovation' => 'tek025_year_of_renovation',
        'tek026_oiltank_size' => 'tek026_oiltank_size',
        'tek027_location' => 'tek027_location',
        'tek028_oiltank_removal' => 'tek028_oiltank_removal',
        'tek030_production_number' => 'tek030_production_number',
        'tek031_approval_number_type' => 'tek031_approval_number_type',
        'tek032_size' => 'tek032_size',
        'tek033_type' => 'tek033_type',
        'tek034_oiltank_content' => 'tek034_oiltank_content',
        'tek035_oiltank_removal_deadline' => 'tek035_oiltank_removal_deadline',
        'tek036_volume' => 'tek036_volume',
        'tek037_area' => 'tek037_area',
        'tek038_height' => 'tek038_height',
        'tek039_effect' => 'tek039_effect',
        'tek040_preservation' => 'tek040_preservation',
        'tek042_revision_date' => 'tek042_revision_date',
        'tek045_coordinate_system' => 'tek045_coordinate_system',
        'tek067_production_year' => 'tek067_production_year',
        'tek068_material' => 'tek068_material',
        'tek069_additional_internal_corrosion_protection' => 'tek069_additional_internal_corrosion_protection',
        'tek070_additional_internal_corrosion_protection_latest_date' => 'tek070_additional_internal_corrosion_protection_latest_date',
        'tek072_removal_year' => 'tek072_removal_year',
        'tek073_hub_height' => 'tek073_hub_height',
        'tek074_windmill_number' => 'tek074_windmill_number',
        'tek075_rotor_diameter' => 'tek075_rotor_diameter',
        'tek076_coordinates_source' => 'tek076_coordinates_source',
        'tek077_coordinates_quality' => 'tek077_coordinates_quality',
        'tek078_coordinates_supplementary_information' => 'tek078_coordinates_supplementary_information',
        'tek101_validation_date' => 'tek101_validation_date',
        'tek102_windmill_brand' => 'tek102_windmill_brand',
        'tek103_oil_fired_burner_brand' => 'tek103_oil_fired_burner_brand',
        'tek104_solarsystem_brand' => 'tek104_solarsystem_brand',
        'tek105_tank_cover' => 'tek105_tank_cover',
        'tek106_tank_inspection_date' => 'tek106_tank_inspection_date',
        'tek107_placement_maritime_territory' => 'tek107_placement_maritime_territory',
        'tek109_coordinate' => 'tek109_coordinate',
        'tek110_operating_status' => 'tek110_operating_status',
        'tek111_inspection_latest_date' => 'tek111_inspection_latest_date',
        'tek112_inspection_company' => 'tek112_inspection_company',
        'tek500_note' => 'tek500_note',
        'access_address' => 'access_address'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'namespace' => 'setNamespace',
        'status' => 'setStatus',
        'business_process' => 'setBusinessProcess',
        'business_area' => 'setBusinessArea',
        'business_event' => 'setBusinessEvent',
        'registration_from' => 'setRegistrationFrom',
        'registration_to' => 'setRegistrationTo',
        'registration_actor' => 'setRegistrationActor',
        'effect_from' => 'setEffectFrom',
        'effect_to' => 'setEffectTo',
        'effect_actor' => 'setEffectActor',
        'municipality_code' => 'setMunicipalityCode',
        'tek007_facility_number' => 'setTek007FacilityNumber',
        'tek020_classification' => 'setTek020Classification',
        'tek021_production_type' => 'setTek021ProductionType',
        'tek022_external_database' => 'setTek022ExternalDatabase',
        'tek023_external_key' => 'setTek023ExternalKey',
        'tek024_year_of_establishment' => 'setTek024YearOfEstablishment',
        'tek025_year_of_renovation' => 'setTek025YearOfRenovation',
        'tek026_oiltank_size' => 'setTek026OiltankSize',
        'tek027_location' => 'setTek027Location',
        'tek028_oiltank_removal' => 'setTek028OiltankRemoval',
        'tek030_production_number' => 'setTek030ProductionNumber',
        'tek031_approval_number_type' => 'setTek031ApprovalNumberType',
        'tek032_size' => 'setTek032Size',
        'tek033_type' => 'setTek033Type',
        'tek034_oiltank_content' => 'setTek034OiltankContent',
        'tek035_oiltank_removal_deadline' => 'setTek035OiltankRemovalDeadline',
        'tek036_volume' => 'setTek036Volume',
        'tek037_area' => 'setTek037Area',
        'tek038_height' => 'setTek038Height',
        'tek039_effect' => 'setTek039Effect',
        'tek040_preservation' => 'setTek040Preservation',
        'tek042_revision_date' => 'setTek042RevisionDate',
        'tek045_coordinate_system' => 'setTek045CoordinateSystem',
        'tek067_production_year' => 'setTek067ProductionYear',
        'tek068_material' => 'setTek068Material',
        'tek069_additional_internal_corrosion_protection' => 'setTek069AdditionalInternalCorrosionProtection',
        'tek070_additional_internal_corrosion_protection_latest_date' => 'setTek070AdditionalInternalCorrosionProtectionLatestDate',
        'tek072_removal_year' => 'setTek072RemovalYear',
        'tek073_hub_height' => 'setTek073HubHeight',
        'tek074_windmill_number' => 'setTek074WindmillNumber',
        'tek075_rotor_diameter' => 'setTek075RotorDiameter',
        'tek076_coordinates_source' => 'setTek076CoordinatesSource',
        'tek077_coordinates_quality' => 'setTek077CoordinatesQuality',
        'tek078_coordinates_supplementary_information' => 'setTek078CoordinatesSupplementaryInformation',
        'tek101_validation_date' => 'setTek101ValidationDate',
        'tek102_windmill_brand' => 'setTek102WindmillBrand',
        'tek103_oil_fired_burner_brand' => 'setTek103OilFiredBurnerBrand',
        'tek104_solarsystem_brand' => 'setTek104SolarsystemBrand',
        'tek105_tank_cover' => 'setTek105TankCover',
        'tek106_tank_inspection_date' => 'setTek106TankInspectionDate',
        'tek107_placement_maritime_territory' => 'setTek107PlacementMaritimeTerritory',
        'tek109_coordinate' => 'setTek109Coordinate',
        'tek110_operating_status' => 'setTek110OperatingStatus',
        'tek111_inspection_latest_date' => 'setTek111InspectionLatestDate',
        'tek112_inspection_company' => 'setTek112InspectionCompany',
        'tek500_note' => 'setTek500Note',
        'access_address' => 'setAccessAddress'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'namespace' => 'getNamespace',
        'status' => 'getStatus',
        'business_process' => 'getBusinessProcess',
        'business_area' => 'getBusinessArea',
        'business_event' => 'getBusinessEvent',
        'registration_from' => 'getRegistrationFrom',
        'registration_to' => 'getRegistrationTo',
        'registration_actor' => 'getRegistrationActor',
        'effect_from' => 'getEffectFrom',
        'effect_to' => 'getEffectTo',
        'effect_actor' => 'getEffectActor',
        'municipality_code' => 'getMunicipalityCode',
        'tek007_facility_number' => 'getTek007FacilityNumber',
        'tek020_classification' => 'getTek020Classification',
        'tek021_production_type' => 'getTek021ProductionType',
        'tek022_external_database' => 'getTek022ExternalDatabase',
        'tek023_external_key' => 'getTek023ExternalKey',
        'tek024_year_of_establishment' => 'getTek024YearOfEstablishment',
        'tek025_year_of_renovation' => 'getTek025YearOfRenovation',
        'tek026_oiltank_size' => 'getTek026OiltankSize',
        'tek027_location' => 'getTek027Location',
        'tek028_oiltank_removal' => 'getTek028OiltankRemoval',
        'tek030_production_number' => 'getTek030ProductionNumber',
        'tek031_approval_number_type' => 'getTek031ApprovalNumberType',
        'tek032_size' => 'getTek032Size',
        'tek033_type' => 'getTek033Type',
        'tek034_oiltank_content' => 'getTek034OiltankContent',
        'tek035_oiltank_removal_deadline' => 'getTek035OiltankRemovalDeadline',
        'tek036_volume' => 'getTek036Volume',
        'tek037_area' => 'getTek037Area',
        'tek038_height' => 'getTek038Height',
        'tek039_effect' => 'getTek039Effect',
        'tek040_preservation' => 'getTek040Preservation',
        'tek042_revision_date' => 'getTek042RevisionDate',
        'tek045_coordinate_system' => 'getTek045CoordinateSystem',
        'tek067_production_year' => 'getTek067ProductionYear',
        'tek068_material' => 'getTek068Material',
        'tek069_additional_internal_corrosion_protection' => 'getTek069AdditionalInternalCorrosionProtection',
        'tek070_additional_internal_corrosion_protection_latest_date' => 'getTek070AdditionalInternalCorrosionProtectionLatestDate',
        'tek072_removal_year' => 'getTek072RemovalYear',
        'tek073_hub_height' => 'getTek073HubHeight',
        'tek074_windmill_number' => 'getTek074WindmillNumber',
        'tek075_rotor_diameter' => 'getTek075RotorDiameter',
        'tek076_coordinates_source' => 'getTek076CoordinatesSource',
        'tek077_coordinates_quality' => 'getTek077CoordinatesQuality',
        'tek078_coordinates_supplementary_information' => 'getTek078CoordinatesSupplementaryInformation',
        'tek101_validation_date' => 'getTek101ValidationDate',
        'tek102_windmill_brand' => 'getTek102WindmillBrand',
        'tek103_oil_fired_burner_brand' => 'getTek103OilFiredBurnerBrand',
        'tek104_solarsystem_brand' => 'getTek104SolarsystemBrand',
        'tek105_tank_cover' => 'getTek105TankCover',
        'tek106_tank_inspection_date' => 'getTek106TankInspectionDate',
        'tek107_placement_maritime_territory' => 'getTek107PlacementMaritimeTerritory',
        'tek109_coordinate' => 'getTek109Coordinate',
        'tek110_operating_status' => 'getTek110OperatingStatus',
        'tek111_inspection_latest_date' => 'getTek111InspectionLatestDate',
        'tek112_inspection_company' => 'getTek112InspectionCompany',
        'tek500_note' => 'getTek500Note',
        'access_address' => 'getAccessAddress'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('id', $data ?? [], null);
        $this->setIfExists('namespace', $data ?? [], null);
        $this->setIfExists('status', $data ?? [], null);
        $this->setIfExists('business_process', $data ?? [], null);
        $this->setIfExists('business_area', $data ?? [], null);
        $this->setIfExists('business_event', $data ?? [], null);
        $this->setIfExists('registration_from', $data ?? [], null);
        $this->setIfExists('registration_to', $data ?? [], null);
        $this->setIfExists('registration_actor', $data ?? [], null);
        $this->setIfExists('effect_from', $data ?? [], null);
        $this->setIfExists('effect_to', $data ?? [], null);
        $this->setIfExists('effect_actor', $data ?? [], null);
        $this->setIfExists('municipality_code', $data ?? [], null);
        $this->setIfExists('tek007_facility_number', $data ?? [], null);
        $this->setIfExists('tek020_classification', $data ?? [], null);
        $this->setIfExists('tek021_production_type', $data ?? [], null);
        $this->setIfExists('tek022_external_database', $data ?? [], null);
        $this->setIfExists('tek023_external_key', $data ?? [], null);
        $this->setIfExists('tek024_year_of_establishment', $data ?? [], null);
        $this->setIfExists('tek025_year_of_renovation', $data ?? [], null);
        $this->setIfExists('tek026_oiltank_size', $data ?? [], null);
        $this->setIfExists('tek027_location', $data ?? [], null);
        $this->setIfExists('tek028_oiltank_removal', $data ?? [], null);
        $this->setIfExists('tek030_production_number', $data ?? [], null);
        $this->setIfExists('tek031_approval_number_type', $data ?? [], null);
        $this->setIfExists('tek032_size', $data ?? [], null);
        $this->setIfExists('tek033_type', $data ?? [], null);
        $this->setIfExists('tek034_oiltank_content', $data ?? [], null);
        $this->setIfExists('tek035_oiltank_removal_deadline', $data ?? [], null);
        $this->setIfExists('tek036_volume', $data ?? [], null);
        $this->setIfExists('tek037_area', $data ?? [], null);
        $this->setIfExists('tek038_height', $data ?? [], null);
        $this->setIfExists('tek039_effect', $data ?? [], null);
        $this->setIfExists('tek040_preservation', $data ?? [], null);
        $this->setIfExists('tek042_revision_date', $data ?? [], null);
        $this->setIfExists('tek045_coordinate_system', $data ?? [], null);
        $this->setIfExists('tek067_production_year', $data ?? [], null);
        $this->setIfExists('tek068_material', $data ?? [], null);
        $this->setIfExists('tek069_additional_internal_corrosion_protection', $data ?? [], null);
        $this->setIfExists('tek070_additional_internal_corrosion_protection_latest_date', $data ?? [], null);
        $this->setIfExists('tek072_removal_year', $data ?? [], null);
        $this->setIfExists('tek073_hub_height', $data ?? [], null);
        $this->setIfExists('tek074_windmill_number', $data ?? [], null);
        $this->setIfExists('tek075_rotor_diameter', $data ?? [], null);
        $this->setIfExists('tek076_coordinates_source', $data ?? [], null);
        $this->setIfExists('tek077_coordinates_quality', $data ?? [], null);
        $this->setIfExists('tek078_coordinates_supplementary_information', $data ?? [], null);
        $this->setIfExists('tek101_validation_date', $data ?? [], null);
        $this->setIfExists('tek102_windmill_brand', $data ?? [], null);
        $this->setIfExists('tek103_oil_fired_burner_brand', $data ?? [], null);
        $this->setIfExists('tek104_solarsystem_brand', $data ?? [], null);
        $this->setIfExists('tek105_tank_cover', $data ?? [], null);
        $this->setIfExists('tek106_tank_inspection_date', $data ?? [], null);
        $this->setIfExists('tek107_placement_maritime_territory', $data ?? [], null);
        $this->setIfExists('tek109_coordinate', $data ?? [], null);
        $this->setIfExists('tek110_operating_status', $data ?? [], null);
        $this->setIfExists('tek111_inspection_latest_date', $data ?? [], null);
        $this->setIfExists('tek112_inspection_company', $data ?? [], null);
        $this->setIfExists('tek500_note', $data ?? [], null);
        $this->setIfExists('access_address', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['namespace'] === null) {
            $invalidProperties[] = "'namespace' can't be null";
        }
        if ($this->container['registration_from'] === null) {
            $invalidProperties[] = "'registration_from' can't be null";
        }
        if ($this->container['registration_actor'] === null) {
            $invalidProperties[] = "'registration_actor' can't be null";
        }
        if ($this->container['effect_from'] === null) {
            $invalidProperties[] = "'effect_from' can't be null";
        }
        if ($this->container['effect_actor'] === null) {
            $invalidProperties[] = "'effect_actor' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return mixed
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param mixed $id Persistent unik n√∏gle.
     *
     * @return self
     */
    public function setId($id)
    {
        if (is_null($id)) {
            array_push($this->openAPINullablesSetToNull, 'id');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('id', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets namespace
     *
     * @return mixed
     */
    public function getNamespace()
    {
        return $this->container['namespace'];
    }

    /**
     * Sets namespace
     *
     * @param mixed $namespace namespace
     *
     * @return self
     */
    public function setNamespace($namespace)
    {
        if (is_null($namespace)) {
            array_push($this->openAPINullablesSetToNull, 'namespace');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('namespace', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['namespace'] = $namespace;

        return $this;
    }

    /**
     * Gets status
     *
     * @return mixed|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param mixed|null $status Angivelse af hvor et forvaltningsobjekt er i sin livscyklus.
     *
     * @return self
     */
    public function setStatus($status)
    {
        if (is_null($status)) {
            array_push($this->openAPINullablesSetToNull, 'status');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('status', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets business_process
     *
     * @return mixed|null
     */
    public function getBusinessProcess()
    {
        return $this->container['business_process'];
    }

    /**
     * Sets business_process
     *
     * @param mixed|null $business_process Den manuelle eller IT-underst√∏ttede proces hvori forretningsomr√•det h√•ndterer h√¶ndelsen.
     *
     * @return self
     */
    public function setBusinessProcess($business_process)
    {
        if (is_null($business_process)) {
            array_push($this->openAPINullablesSetToNull, 'business_process');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_process', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['business_process'] = $business_process;

        return $this;
    }

    /**
     * Gets business_area
     *
     * @return mixed|null
     */
    public function getBusinessArea()
    {
        return $this->container['business_area'];
    }

    /**
     * Sets business_area
     *
     * @param mixed|null $business_area Den del af den offentlige forretning der h√•ndterer h√¶ndelsen og derved udvirker √¶ndringen i data.
     *
     * @return self
     */
    public function setBusinessArea($business_area)
    {
        if (is_null($business_area)) {
            array_push($this->openAPINullablesSetToNull, 'business_area');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_area', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['business_area'] = $business_area;

        return $this;
    }

    /**
     * Gets business_event
     *
     * @return mixed|null
     */
    public function getBusinessEvent()
    {
        return $this->container['business_event'];
    }

    /**
     * Sets business_event
     *
     * @param mixed|null $business_event Den begivenhed i virkeligheden som udl√∏ste √¶ndringen i data.
     *
     * @return self
     */
    public function setBusinessEvent($business_event)
    {
        if (is_null($business_event)) {
            array_push($this->openAPINullablesSetToNull, 'business_event');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_event', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['business_event'] = $business_event;

        return $this;
    }

    /**
     * Gets registration_from
     *
     * @return mixed
     */
    public function getRegistrationFrom()
    {
        return $this->container['registration_from'];
    }

    /**
     * Sets registration_from
     *
     * @param mixed $registration_from Tidspunktet hvor registreringen er foretaget.
     *
     * @return self
     */
    public function setRegistrationFrom($registration_from)
    {
        if (is_null($registration_from)) {
            array_push($this->openAPINullablesSetToNull, 'registration_from');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('registration_from', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['registration_from'] = $registration_from;

        return $this;
    }

    /**
     * Gets registration_to
     *
     * @return mixed|null
     */
    public function getRegistrationTo()
    {
        return $this->container['registration_to'];
    }

    /**
     * Sets registration_to
     *
     * @param mixed|null $registration_to Tidspunktet hvor en ny registrering er foretaget p√• objektet, og hvor denne version s√•ledes ikke l√¶ngere er den seneste.
     *
     * @return self
     */
    public function setRegistrationTo($registration_to)
    {
        if (is_null($registration_to)) {
            array_push($this->openAPINullablesSetToNull, 'registration_to');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('registration_to', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['registration_to'] = $registration_to;

        return $this;
    }

    /**
     * Gets registration_actor
     *
     * @return mixed
     */
    public function getRegistrationActor()
    {
        return $this->container['registration_actor'];
    }

    /**
     * Sets registration_actor
     *
     * @param mixed $registration_actor Den akt√∏r der har foretaget registreringen.
     *
     * @return self
     */
    public function setRegistrationActor($registration_actor)
    {
        if (is_null($registration_actor)) {
            array_push($this->openAPINullablesSetToNull, 'registration_actor');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('registration_actor', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['registration_actor'] = $registration_actor;

        return $this;
    }

    /**
     * Gets effect_from
     *
     * @return mixed
     */
    public function getEffectFrom()
    {
        return $this->container['effect_from'];
    }

    /**
     * Sets effect_from
     *
     * @param mixed $effect_from Tidspunktet hvorfra objektet har virkning.
     *
     * @return self
     */
    public function setEffectFrom($effect_from)
    {
        if (is_null($effect_from)) {
            array_push($this->openAPINullablesSetToNull, 'effect_from');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('effect_from', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['effect_from'] = $effect_from;

        return $this;
    }

    /**
     * Gets effect_to
     *
     * @return mixed|null
     */
    public function getEffectTo()
    {
        return $this->container['effect_to'];
    }

    /**
     * Sets effect_to
     *
     * @param mixed|null $effect_to Tidspunktet hvor objektets virkning oph√∏rer.
     *
     * @return self
     */
    public function setEffectTo($effect_to)
    {
        if (is_null($effect_to)) {
            array_push($this->openAPINullablesSetToNull, 'effect_to');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('effect_to', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['effect_to'] = $effect_to;

        return $this;
    }

    /**
     * Gets effect_actor
     *
     * @return mixed
     */
    public function getEffectActor()
    {
        return $this->container['effect_actor'];
    }

    /**
     * Sets effect_actor
     *
     * @param mixed $effect_actor Den akt√∏r der har afstedkommet objektets virkning.
     *
     * @return self
     */
    public function setEffectActor($effect_actor)
    {
        if (is_null($effect_actor)) {
            array_push($this->openAPINullablesSetToNull, 'effect_actor');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('effect_actor', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['effect_actor'] = $effect_actor;

        return $this;
    }

    /**
     * Gets municipality_code
     *
     * @return mixed|null
     */
    public function getMunicipalityCode()
    {
        return $this->container['municipality_code'];
    }

    /**
     * Sets municipality_code
     *
     * @param mixed|null $municipality_code municipality_code
     *
     * @return self
     */
    public function setMunicipalityCode($municipality_code)
    {
        if (is_null($municipality_code)) {
            array_push($this->openAPINullablesSetToNull, 'municipality_code');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('municipality_code', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['municipality_code'] = $municipality_code;

        return $this;
    }

    /**
     * Gets tek007_facility_number
     *
     * @return mixed|null
     */
    public function getTek007FacilityNumber()
    {
        return $this->container['tek007_facility_number'];
    }

    /**
     * Sets tek007_facility_number
     *
     * @param mixed|null $tek007_facility_number L√∏benummer under vurderingsejendommen (vurderingsejendomsnummeret vedligeholdes af SKAT).  V√¶rdierne 1-9999 er tilladte.
     *
     * @return self
     */
    public function setTek007FacilityNumber($tek007_facility_number)
    {
        if (is_null($tek007_facility_number)) {
            array_push($this->openAPINullablesSetToNull, 'tek007_facility_number');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek007_facility_number', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek007_facility_number'] = $tek007_facility_number;

        return $this;
    }

    /**
     * Gets tek020_classification
     *
     * @return mixed|null
     */
    public function getTek020Classification()
    {
        return $this->container['tek020_classification'];
    }

    /**
     * Sets tek020_classification
     *
     * @param mixed|null $tek020_classification Beskriver det tekniske anl√¶gs anvendelse.
     *
     * @return self
     */
    public function setTek020Classification($tek020_classification)
    {
        if (is_null($tek020_classification)) {
            array_push($this->openAPINullablesSetToNull, 'tek020_classification');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek020_classification', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek020_classification'] = $tek020_classification;

        return $this;
    }

    /**
     * Gets tek021_production_type
     *
     * @return mixed|null
     */
    public function getTek021ProductionType()
    {
        return $this->container['tek021_production_type'];
    }

    /**
     * Sets tek021_production_type
     *
     * @param mixed|null $tek021_production_type Angiver fabrikattype af det tekniske anl√¶g.
     *
     * @return self
     */
    public function setTek021ProductionType($tek021_production_type)
    {
        if (is_null($tek021_production_type)) {
            array_push($this->openAPINullablesSetToNull, 'tek021_production_type');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek021_production_type', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek021_production_type'] = $tek021_production_type;

        return $this;
    }

    /**
     * Gets tek022_external_database
     *
     * @return mixed|null
     */
    public function getTek022ExternalDatabase()
    {
        return $this->container['tek022_external_database'];
    }

    /**
     * Sets tek022_external_database
     *
     * @param mixed|null $tek022_external_database Reference til ekstern database.
     *
     * @return self
     */
    public function setTek022ExternalDatabase($tek022_external_database)
    {
        if (is_null($tek022_external_database)) {
            array_push($this->openAPINullablesSetToNull, 'tek022_external_database');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek022_external_database', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek022_external_database'] = $tek022_external_database;

        return $this;
    }

    /**
     * Gets tek023_external_key
     *
     * @return mixed|null
     */
    public function getTek023ExternalKey()
    {
        return $this->container['tek023_external_key'];
    }

    /**
     * Sets tek023_external_key
     *
     * @param mixed|null $tek023_external_key Unik teknisk n√∏gle til det tekniske anl√¶g.
     *
     * @return self
     */
    public function setTek023ExternalKey($tek023_external_key)
    {
        if (is_null($tek023_external_key)) {
            array_push($this->openAPINullablesSetToNull, 'tek023_external_key');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek023_external_key', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek023_external_key'] = $tek023_external_key;

        return $this;
    }

    /**
     * Gets tek024_year_of_establishment
     *
     * @return mixed|null
     */
    public function getTek024YearOfEstablishment()
    {
        return $this->container['tek024_year_of_establishment'];
    }

    /**
     * Sets tek024_year_of_establishment
     *
     * @param mixed|null $tek024_year_of_establishment √Örstallet hvor det tekniske anl√¶g er f√¶rdigt etableret.   Angives i formatet √•√•√•√•.
     *
     * @return self
     */
    public function setTek024YearOfEstablishment($tek024_year_of_establishment)
    {
        if (is_null($tek024_year_of_establishment)) {
            array_push($this->openAPINullablesSetToNull, 'tek024_year_of_establishment');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek024_year_of_establishment', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek024_year_of_establishment'] = $tek024_year_of_establishment;

        return $this;
    }

    /**
     * Gets tek025_year_of_renovation
     *
     * @return mixed|null
     */
    public function getTek025YearOfRenovation()
    {
        return $this->container['tek025_year_of_renovation'];
    }

    /**
     * Sets tek025_year_of_renovation
     *
     * @param mixed|null $tek025_year_of_renovation √Örstallet for seneste til-/ombygning.   Angives i formatet √•√•√•√•.
     *
     * @return self
     */
    public function setTek025YearOfRenovation($tek025_year_of_renovation)
    {
        if (is_null($tek025_year_of_renovation)) {
            array_push($this->openAPINullablesSetToNull, 'tek025_year_of_renovation');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek025_year_of_renovation', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek025_year_of_renovation'] = $tek025_year_of_renovation;

        return $this;
    }

    /**
     * Gets tek026_oiltank_size
     *
     * @return mixed|null
     */
    public function getTek026OiltankSize()
    {
        return $this->container['tek026_oiltank_size'];
    }

    /**
     * Sets tek026_oiltank_size
     *
     * @param mixed|null $tek026_oiltank_size Olietankens st√∏rrelsesklasse. Kun g√¶ldende for olietanke.
     *
     * @return self
     */
    public function setTek026OiltankSize($tek026_oiltank_size)
    {
        if (is_null($tek026_oiltank_size)) {
            array_push($this->openAPINullablesSetToNull, 'tek026_oiltank_size');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek026_oiltank_size', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek026_oiltank_size'] = $tek026_oiltank_size;

        return $this;
    }

    /**
     * Gets tek027_location
     *
     * @return mixed|null
     */
    public function getTek027Location()
    {
        return $this->container['tek027_location'];
    }

    /**
     * Sets tek027_location
     *
     * @param mixed|null $tek027_location Placering af tank, silo, gas- og affaldsbeholder.
     *
     * @return self
     */
    public function setTek027Location($tek027_location)
    {
        if (is_null($tek027_location)) {
            array_push($this->openAPINullablesSetToNull, 'tek027_location');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek027_location', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek027_location'] = $tek027_location;

        return $this;
    }

    /**
     * Gets tek028_oiltank_removal
     *
     * @return mixed|null
     */
    public function getTek028OiltankRemoval()
    {
        return $this->container['tek028_oiltank_removal'];
    }

    /**
     * Sets tek028_oiltank_removal
     *
     * @param mixed|null $tek028_oiltank_removal Forhold for sl√∏jfning af tank og slanger til jordvarme.
     *
     * @return self
     */
    public function setTek028OiltankRemoval($tek028_oiltank_removal)
    {
        if (is_null($tek028_oiltank_removal)) {
            array_push($this->openAPINullablesSetToNull, 'tek028_oiltank_removal');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek028_oiltank_removal', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek028_oiltank_removal'] = $tek028_oiltank_removal;

        return $this;
    }

    /**
     * Gets tek030_production_number
     *
     * @return mixed|null
     */
    public function getTek030ProductionNumber()
    {
        return $this->container['tek030_production_number'];
    }

    /**
     * Sets tek030_production_number
     *
     * @param mixed|null $tek030_production_number Fabrikationsnummeret p√• tank.
     *
     * @return self
     */
    public function setTek030ProductionNumber($tek030_production_number)
    {
        if (is_null($tek030_production_number)) {
            array_push($this->openAPINullablesSetToNull, 'tek030_production_number');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek030_production_number', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek030_production_number'] = $tek030_production_number;

        return $this;
    }

    /**
     * Gets tek031_approval_number_type
     *
     * @return mixed|null
     */
    public function getTek031ApprovalNumberType()
    {
        return $this->container['tek031_approval_number_type'];
    }

    /**
     * Sets tek031_approval_number_type
     *
     * @param mixed|null $tek031_approval_number_type Typegodkendelsesnummeret angives p√• en af to m√•der:  ENTEN: P√• formen xx xxx PUFO godkendelsesnummer f√∏r 1. januar 2000 (nb. Ikke krav om PUFO godkendelse af overjordiske tanke f√∏r 1. januar 2000). ELLER: P√• formen xx xxxx PUFO godkendelsesnummer efter 1. januar 2000.
     *
     * @return self
     */
    public function setTek031ApprovalNumberType($tek031_approval_number_type)
    {
        if (is_null($tek031_approval_number_type)) {
            array_push($this->openAPINullablesSetToNull, 'tek031_approval_number_type');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek031_approval_number_type', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek031_approval_number_type'] = $tek031_approval_number_type;

        return $this;
    }

    /**
     * Gets tek032_size
     *
     * @return mixed|null
     */
    public function getTek032Size()
    {
        return $this->container['tek032_size'];
    }

    /**
     * Sets tek032_size
     *
     * @param mixed|null $tek032_size Tankens st√∏rrelse.  Angives i liter.
     *
     * @return self
     */
    public function setTek032Size($tek032_size)
    {
        if (is_null($tek032_size)) {
            array_push($this->openAPINullablesSetToNull, 'tek032_size');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek032_size', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek032_size'] = $tek032_size;

        return $this;
    }

    /**
     * Gets tek033_type
     *
     * @return mixed|null
     */
    public function getTek033Type()
    {
        return $this->container['tek033_type'];
    }

    /**
     * Sets tek033_type
     *
     * @param mixed|null $tek033_type Beskriver olietankens konstruktion, ift. bekyttelse imod korrosion.
     *
     * @return self
     */
    public function setTek033Type($tek033_type)
    {
        if (is_null($tek033_type)) {
            array_push($this->openAPINullablesSetToNull, 'tek033_type');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek033_type', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek033_type'] = $tek033_type;

        return $this;
    }

    /**
     * Gets tek034_oiltank_content
     *
     * @return mixed|null
     */
    public function getTek034OiltankContent()
    {
        return $this->container['tek034_oiltank_content'];
    }

    /**
     * Sets tek034_oiltank_content
     *
     * @param mixed|null $tek034_oiltank_content Beskriver indhold af tank/olietank.
     *
     * @return self
     */
    public function setTek034OiltankContent($tek034_oiltank_content)
    {
        if (is_null($tek034_oiltank_content)) {
            array_push($this->openAPINullablesSetToNull, 'tek034_oiltank_content');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek034_oiltank_content', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek034_oiltank_content'] = $tek034_oiltank_content;

        return $this;
    }

    /**
     * Gets tek035_oiltank_removal_deadline
     *
     * @return mixed|null
     */
    public function getTek035OiltankRemovalDeadline()
    {
        return $this->container['tek035_oiltank_removal_deadline'];
    }

    /**
     * Sets tek035_oiltank_removal_deadline
     *
     * @param mixed|null $tek035_oiltank_removal_deadline Frist for sl√∏fning af tank.  Angives i √•√•√•√•mmdd
     *
     * @return self
     */
    public function setTek035OiltankRemovalDeadline($tek035_oiltank_removal_deadline)
    {
        if (is_null($tek035_oiltank_removal_deadline)) {
            array_push($this->openAPINullablesSetToNull, 'tek035_oiltank_removal_deadline');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek035_oiltank_removal_deadline', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek035_oiltank_removal_deadline'] = $tek035_oiltank_removal_deadline;

        return $this;
    }

    /**
     * Gets tek036_volume
     *
     * @return mixed|null
     */
    public function getTek036Volume()
    {
        return $this->container['tek036_volume'];
    }

    /**
     * Sets tek036_volume
     *
     * @param mixed|null $tek036_volume Rumfang af teknisk anl√¶g.   Angives i kubikmeter.
     *
     * @return self
     */
    public function setTek036Volume($tek036_volume)
    {
        if (is_null($tek036_volume)) {
            array_push($this->openAPINullablesSetToNull, 'tek036_volume');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek036_volume', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek036_volume'] = $tek036_volume;

        return $this;
    }

    /**
     * Gets tek037_area
     *
     * @return mixed|null
     */
    public function getTek037Area()
    {
        return $this->container['tek037_area'];
    }

    /**
     * Sets tek037_area
     *
     * @param mixed|null $tek037_area Bebygget areal af teknisk anl√¶g.   Angives i kvadratmeter.
     *
     * @return self
     */
    public function setTek037Area($tek037_area)
    {
        if (is_null($tek037_area)) {
            array_push($this->openAPINullablesSetToNull, 'tek037_area');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek037_area', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek037_area'] = $tek037_area;

        return $this;
    }

    /**
     * Gets tek038_height
     *
     * @return mixed|null
     */
    public function getTek038Height()
    {
        return $this->container['tek038_height'];
    }

    /**
     * Sets tek038_height
     *
     * @param mixed|null $tek038_height H√∏jde af det tekniske anl√¶g. For vindm√∏ller angives h√∏jden til vindm√∏llens vingespids.  Angives i meter.
     *
     * @return self
     */
    public function setTek038Height($tek038_height)
    {
        if (is_null($tek038_height)) {
            array_push($this->openAPINullablesSetToNull, 'tek038_height');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek038_height', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek038_height'] = $tek038_height;

        return $this;
    }

    /**
     * Gets tek039_effect
     *
     * @return mixed|null
     */
    public function getTek039Effect()
    {
        return $this->container['tek039_effect'];
    }

    /**
     * Sets tek039_effect
     *
     * @param mixed|null $tek039_effect Effekt for et energiproducerende teknisk anl√¶g.   Angives i kilowatt.
     *
     * @return self
     */
    public function setTek039Effect($tek039_effect)
    {
        if (is_null($tek039_effect)) {
            array_push($this->openAPINullablesSetToNull, 'tek039_effect');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek039_effect', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek039_effect'] = $tek039_effect;

        return $this;
    }

    /**
     * Gets tek040_preservation
     *
     * @return mixed|null
     */
    public function getTek040Preservation()
    {
        return $this->container['tek040_preservation'];
    }

    /**
     * Sets tek040_preservation
     *
     * @param mixed|null $tek040_preservation Angiver eventuel type af fredning der g√¶lder for det teknisk anl√¶g.Feltet ajourf√∏res af Kulturstyrelsen.
     *
     * @return self
     */
    public function setTek040Preservation($tek040_preservation)
    {
        if (is_null($tek040_preservation)) {
            array_push($this->openAPINullablesSetToNull, 'tek040_preservation');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek040_preservation', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek040_preservation'] = $tek040_preservation;

        return $this;
    }

    /**
     * Gets tek042_revision_date
     *
     * @return mixed|null
     */
    public function getTek042RevisionDate()
    {
        return $this->container['tek042_revision_date'];
    }

    /**
     * Sets tek042_revision_date
     *
     * @param mixed|null $tek042_revision_date Revisionsdato for seneste √¶ndring af geometri.  Angives i √•√•√•√•mmdd.
     *
     * @return self
     */
    public function setTek042RevisionDate($tek042_revision_date)
    {
        if (is_null($tek042_revision_date)) {
            array_push($this->openAPINullablesSetToNull, 'tek042_revision_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek042_revision_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek042_revision_date'] = $tek042_revision_date;

        return $this;
    }

    /**
     * Gets tek045_coordinate_system
     *
     * @return mixed|null
     */
    public function getTek045CoordinateSystem()
    {
        return $this->container['tek045_coordinate_system'];
    }

    /**
     * Sets tek045_coordinate_system
     *
     * @param mixed|null $tek045_coordinate_system Det geografiske koordinatsystem geometrioplysninger er angivet i.
     *
     * @return self
     */
    public function setTek045CoordinateSystem($tek045_coordinate_system)
    {
        if (is_null($tek045_coordinate_system)) {
            array_push($this->openAPINullablesSetToNull, 'tek045_coordinate_system');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek045_coordinate_system', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek045_coordinate_system'] = $tek045_coordinate_system;

        return $this;
    }

    /**
     * Gets tek067_production_year
     *
     * @return mixed|null
     */
    public function getTek067ProductionYear()
    {
        return $this->container['tek067_production_year'];
    }

    /**
     * Sets tek067_production_year
     *
     * @param mixed|null $tek067_production_year Dette felt g√¶lder for tanke. √Örstal for tankens fabrikation angives. For tanke omfattet af olietankbekendtg√∏relsen  beregnes sl√∏jfningsfristen ud fra tankens  fabrikations√•r.  Angives i formatet √•√•√•√•.
     *
     * @return self
     */
    public function setTek067ProductionYear($tek067_production_year)
    {
        if (is_null($tek067_production_year)) {
            array_push($this->openAPINullablesSetToNull, 'tek067_production_year');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek067_production_year', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek067_production_year'] = $tek067_production_year;

        return $this;
    }

    /**
     * Gets tek068_material
     *
     * @return mixed|null
     */
    public function getTek068Material()
    {
        return $this->container['tek068_material'];
    }

    /**
     * Sets tek068_material
     *
     * @param mixed|null $tek068_material Dette felt g√¶lder for tanke. Materiale tanken er lavet af.
     *
     * @return self
     */
    public function setTek068Material($tek068_material)
    {
        if (is_null($tek068_material)) {
            array_push($this->openAPINullablesSetToNull, 'tek068_material');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek068_material', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek068_material'] = $tek068_material;

        return $this;
    }

    /**
     * Gets tek069_additional_internal_corrosion_protection
     *
     * @return mixed|null
     */
    public function getTek069AdditionalInternalCorrosionProtection()
    {
        return $this->container['tek069_additional_internal_corrosion_protection'];
    }

    /**
     * Sets tek069_additional_internal_corrosion_protection
     *
     * @param mixed|null $tek069_additional_internal_corrosion_protection Dette felt g√¶lder for tanke. Angiver type af senest udf√∏rte supplerende indvendig korrosionsbeskyttelse (korrosionsbeskyttelse som tanken ikke er ‚Äùf√∏dt med‚Äù)
     *
     * @return self
     */
    public function setTek069AdditionalInternalCorrosionProtection($tek069_additional_internal_corrosion_protection)
    {
        if (is_null($tek069_additional_internal_corrosion_protection)) {
            array_push($this->openAPINullablesSetToNull, 'tek069_additional_internal_corrosion_protection');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek069_additional_internal_corrosion_protection', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek069_additional_internal_corrosion_protection'] = $tek069_additional_internal_corrosion_protection;

        return $this;
    }

    /**
     * Gets tek070_additional_internal_corrosion_protection_latest_date
     *
     * @return mixed|null
     */
    public function getTek070AdditionalInternalCorrosionProtectionLatestDate()
    {
        return $this->container['tek070_additional_internal_corrosion_protection_latest_date'];
    }

    /**
     * Sets tek070_additional_internal_corrosion_protection_latest_date
     *
     * @param mixed|null $tek070_additional_internal_corrosion_protection_latest_date Dato for den senest udf√∏rte indvendige korrosionsbeskyttelse.   Angives i formatet √•√•√•√•mmdd.
     *
     * @return self
     */
    public function setTek070AdditionalInternalCorrosionProtectionLatestDate($tek070_additional_internal_corrosion_protection_latest_date)
    {
        if (is_null($tek070_additional_internal_corrosion_protection_latest_date)) {
            array_push($this->openAPINullablesSetToNull, 'tek070_additional_internal_corrosion_protection_latest_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek070_additional_internal_corrosion_protection_latest_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek070_additional_internal_corrosion_protection_latest_date'] = $tek070_additional_internal_corrosion_protection_latest_date;

        return $this;
    }

    /**
     * Gets tek072_removal_year
     *
     * @return mixed|null
     */
    public function getTek072RemovalYear()
    {
        return $this->container['tek072_removal_year'];
    }

    /**
     * Sets tek072_removal_year
     *
     * @param mixed|null $tek072_removal_year Dette felt g√¶lder for tanke. Feltet angiver √•rstal for sl√∏jfning af tank.  Angives i formatet √•√•√•√•.
     *
     * @return self
     */
    public function setTek072RemovalYear($tek072_removal_year)
    {
        if (is_null($tek072_removal_year)) {
            array_push($this->openAPINullablesSetToNull, 'tek072_removal_year');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek072_removal_year', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek072_removal_year'] = $tek072_removal_year;

        return $this;
    }

    /**
     * Gets tek073_hub_height
     *
     * @return mixed|null
     */
    public function getTek073HubHeight()
    {
        return $this->container['tek073_hub_height'];
    }

    /**
     * Sets tek073_hub_height
     *
     * @param mixed|null $tek073_hub_height Dette felt g√¶lder for vindm√∏ller. Vindm√∏llens h√∏jde m√•lt til navet.  Angives i meter
     *
     * @return self
     */
    public function setTek073HubHeight($tek073_hub_height)
    {
        if (is_null($tek073_hub_height)) {
            array_push($this->openAPINullablesSetToNull, 'tek073_hub_height');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek073_hub_height', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek073_hub_height'] = $tek073_hub_height;

        return $this;
    }

    /**
     * Gets tek074_windmill_number
     *
     * @return mixed|null
     */
    public function getTek074WindmillNumber()
    {
        return $this->container['tek074_windmill_number'];
    }

    /**
     * Sets tek074_windmill_number
     *
     * @param mixed|null $tek074_windmill_number Vindm√∏llens unikke nummer i Energistyrelsens vindm√∏lleregister (GSRN).
     *
     * @return self
     */
    public function setTek074WindmillNumber($tek074_windmill_number)
    {
        if (is_null($tek074_windmill_number)) {
            array_push($this->openAPINullablesSetToNull, 'tek074_windmill_number');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek074_windmill_number', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek074_windmill_number'] = $tek074_windmill_number;

        return $this;
    }

    /**
     * Gets tek075_rotor_diameter
     *
     * @return mixed|null
     */
    public function getTek075RotorDiameter()
    {
        return $this->container['tek075_rotor_diameter'];
    }

    /**
     * Sets tek075_rotor_diameter
     *
     * @param mixed|null $tek075_rotor_diameter Diameteren for rotoren p√• vindm√∏llen.   Angives i meter.
     *
     * @return self
     */
    public function setTek075RotorDiameter($tek075_rotor_diameter)
    {
        if (is_null($tek075_rotor_diameter)) {
            array_push($this->openAPINullablesSetToNull, 'tek075_rotor_diameter');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek075_rotor_diameter', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek075_rotor_diameter'] = $tek075_rotor_diameter;

        return $this;
    }

    /**
     * Gets tek076_coordinates_source
     *
     * @return mixed|null
     */
    public function getTek076CoordinatesSource()
    {
        return $this->container['tek076_coordinates_source'];
    }

    /**
     * Sets tek076_coordinates_source
     *
     * @param mixed|null $tek076_coordinates_source Kilden til koordinats√¶ttets oplysninger.
     *
     * @return self
     */
    public function setTek076CoordinatesSource($tek076_coordinates_source)
    {
        if (is_null($tek076_coordinates_source)) {
            array_push($this->openAPINullablesSetToNull, 'tek076_coordinates_source');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek076_coordinates_source', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek076_coordinates_source'] = $tek076_coordinates_source;

        return $this;
    }

    /**
     * Gets tek077_coordinates_quality
     *
     * @return mixed|null
     */
    public function getTek077CoordinatesQuality()
    {
        return $this->container['tek077_coordinates_quality'];
    }

    /**
     * Sets tek077_coordinates_quality
     *
     * @param mixed|null $tek077_coordinates_quality Kvalitetet af koordinats√¶t.
     *
     * @return self
     */
    public function setTek077CoordinatesQuality($tek077_coordinates_quality)
    {
        if (is_null($tek077_coordinates_quality)) {
            array_push($this->openAPINullablesSetToNull, 'tek077_coordinates_quality');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek077_coordinates_quality', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek077_coordinates_quality'] = $tek077_coordinates_quality;

        return $this;
    }

    /**
     * Gets tek078_coordinates_supplementary_information
     *
     * @return mixed|null
     */
    public function getTek078CoordinatesSupplementaryInformation()
    {
        return $this->container['tek078_coordinates_supplementary_information'];
    }

    /**
     * Sets tek078_coordinates_supplementary_information
     *
     * @param mixed|null $tek078_coordinates_supplementary_information Her angives, om det fysiske objekt koordinats√¶ttet referer til, ligger under eller over jorden.
     *
     * @return self
     */
    public function setTek078CoordinatesSupplementaryInformation($tek078_coordinates_supplementary_information)
    {
        if (is_null($tek078_coordinates_supplementary_information)) {
            array_push($this->openAPINullablesSetToNull, 'tek078_coordinates_supplementary_information');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek078_coordinates_supplementary_information', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek078_coordinates_supplementary_information'] = $tek078_coordinates_supplementary_information;

        return $this;
    }

    /**
     * Gets tek101_validation_date
     *
     * @return mixed|null
     */
    public function getTek101ValidationDate()
    {
        return $this->container['tek101_validation_date'];
    }

    /**
     * Sets tek101_validation_date
     *
     * @param mixed|null $tek101_validation_date Gyldighedsdato i forbindelse med vurdering.
     *
     * @return self
     */
    public function setTek101ValidationDate($tek101_validation_date)
    {
        if (is_null($tek101_validation_date)) {
            array_push($this->openAPINullablesSetToNull, 'tek101_validation_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek101_validation_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek101_validation_date'] = $tek101_validation_date;

        return $this;
    }

    /**
     * Gets tek102_windmill_brand
     *
     * @return mixed|null
     */
    public function getTek102WindmillBrand()
    {
        return $this->container['tek102_windmill_brand'];
    }

    /**
     * Sets tek102_windmill_brand
     *
     * @param mixed|null $tek102_windmill_brand Her angives fabrikatet eller typen p√• vindm√∏llen.
     *
     * @return self
     */
    public function setTek102WindmillBrand($tek102_windmill_brand)
    {
        if (is_null($tek102_windmill_brand)) {
            array_push($this->openAPINullablesSetToNull, 'tek102_windmill_brand');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek102_windmill_brand', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek102_windmill_brand'] = $tek102_windmill_brand;

        return $this;
    }

    /**
     * Gets tek103_oil_fired_burner_brand
     *
     * @return mixed|null
     */
    public function getTek103OilFiredBurnerBrand()
    {
        return $this->container['tek103_oil_fired_burner_brand'];
    }

    /**
     * Sets tek103_oil_fired_burner_brand
     *
     * @param mixed|null $tek103_oil_fired_burner_brand Angiver fabrikatet eller typen p√• oliefyret.
     *
     * @return self
     */
    public function setTek103OilFiredBurnerBrand($tek103_oil_fired_burner_brand)
    {
        if (is_null($tek103_oil_fired_burner_brand)) {
            array_push($this->openAPINullablesSetToNull, 'tek103_oil_fired_burner_brand');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek103_oil_fired_burner_brand', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek103_oil_fired_burner_brand'] = $tek103_oil_fired_burner_brand;

        return $this;
    }

    /**
     * Gets tek104_solarsystem_brand
     *
     * @return mixed|null
     */
    public function getTek104SolarsystemBrand()
    {
        return $this->container['tek104_solarsystem_brand'];
    }

    /**
     * Sets tek104_solarsystem_brand
     *
     * @param mixed|null $tek104_solarsystem_brand Angiver fabrikatet eller typen p√• solcelleanl√¶gget eller solvarmenanl√¶gget.
     *
     * @return self
     */
    public function setTek104SolarsystemBrand($tek104_solarsystem_brand)
    {
        if (is_null($tek104_solarsystem_brand)) {
            array_push($this->openAPINullablesSetToNull, 'tek104_solarsystem_brand');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek104_solarsystem_brand', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek104_solarsystem_brand'] = $tek104_solarsystem_brand;

        return $this;
    }

    /**
     * Gets tek105_tank_cover
     *
     * @return mixed|null
     */
    public function getTek105TankCover()
    {
        return $this->container['tek105_tank_cover'];
    }

    /**
     * Sets tek105_tank_cover
     *
     * @param mixed|null $tek105_tank_cover Her angives om tanken er helt, delvis eller ikke overd√¶kket.
     *
     * @return self
     */
    public function setTek105TankCover($tek105_tank_cover)
    {
        if (is_null($tek105_tank_cover)) {
            array_push($this->openAPINullablesSetToNull, 'tek105_tank_cover');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek105_tank_cover', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek105_tank_cover'] = $tek105_tank_cover;

        return $this;
    }

    /**
     * Gets tek106_tank_inspection_date
     *
     * @return mixed|null
     */
    public function getTek106TankInspectionDate()
    {
        return $this->container['tek106_tank_inspection_date'];
    }

    /**
     * Sets tek106_tank_inspection_date
     *
     * @param mixed|null $tek106_tank_inspection_date Angiver dato for seneste inspektion af tank.
     *
     * @return self
     */
    public function setTek106TankInspectionDate($tek106_tank_inspection_date)
    {
        if (is_null($tek106_tank_inspection_date)) {
            array_push($this->openAPINullablesSetToNull, 'tek106_tank_inspection_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek106_tank_inspection_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek106_tank_inspection_date'] = $tek106_tank_inspection_date;

        return $this;
    }

    /**
     * Gets tek107_placement_maritime_territory
     *
     * @return mixed|null
     */
    public function getTek107PlacementMaritimeTerritory()
    {
        return $this->container['tek107_placement_maritime_territory'];
    }

    /**
     * Sets tek107_placement_maritime_territory
     *
     * @param mixed|null $tek107_placement_maritime_territory Angiver om objekt ligger p√• S√∏territorie.
     *
     * @return self
     */
    public function setTek107PlacementMaritimeTerritory($tek107_placement_maritime_territory)
    {
        if (is_null($tek107_placement_maritime_territory)) {
            array_push($this->openAPINullablesSetToNull, 'tek107_placement_maritime_territory');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek107_placement_maritime_territory', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek107_placement_maritime_territory'] = $tek107_placement_maritime_territory;

        return $this;
    }

    /**
     * Gets tek109_coordinate
     *
     * @return mixed|null
     */
    public function getTek109Coordinate()
    {
        return $this->container['tek109_coordinate'];
    }

    /**
     * Sets tek109_coordinate
     *
     * @param mixed|null $tek109_coordinate Det tekniske areals geografiske placering ved hj√¶lp af et punkt.
     *
     * @return self
     */
    public function setTek109Coordinate($tek109_coordinate)
    {
        if (is_null($tek109_coordinate)) {
            array_push($this->openAPINullablesSetToNull, 'tek109_coordinate');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek109_coordinate', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek109_coordinate'] = $tek109_coordinate;

        return $this;
    }

    /**
     * Gets tek110_operating_status
     *
     * @return mixed|null
     */
    public function getTek110OperatingStatus()
    {
        return $this->container['tek110_operating_status'];
    }

    /**
     * Sets tek110_operating_status
     *
     * @param mixed|null $tek110_operating_status Ukendt
     *
     * @return self
     */
    public function setTek110OperatingStatus($tek110_operating_status)
    {
        if (is_null($tek110_operating_status)) {
            array_push($this->openAPINullablesSetToNull, 'tek110_operating_status');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek110_operating_status', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek110_operating_status'] = $tek110_operating_status;

        return $this;
    }

    /**
     * Gets tek111_inspection_latest_date
     *
     * @return mixed|null
     */
    public function getTek111InspectionLatestDate()
    {
        return $this->container['tek111_inspection_latest_date'];
    }

    /**
     * Sets tek111_inspection_latest_date
     *
     * @param mixed|null $tek111_inspection_latest_date Ukendt
     *
     * @return self
     */
    public function setTek111InspectionLatestDate($tek111_inspection_latest_date)
    {
        if (is_null($tek111_inspection_latest_date)) {
            array_push($this->openAPINullablesSetToNull, 'tek111_inspection_latest_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek111_inspection_latest_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek111_inspection_latest_date'] = $tek111_inspection_latest_date;

        return $this;
    }

    /**
     * Gets tek112_inspection_company
     *
     * @return mixed|null
     */
    public function getTek112InspectionCompany()
    {
        return $this->container['tek112_inspection_company'];
    }

    /**
     * Sets tek112_inspection_company
     *
     * @param mixed|null $tek112_inspection_company Ukendt
     *
     * @return self
     */
    public function setTek112InspectionCompany($tek112_inspection_company)
    {
        if (is_null($tek112_inspection_company)) {
            array_push($this->openAPINullablesSetToNull, 'tek112_inspection_company');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek112_inspection_company', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek112_inspection_company'] = $tek112_inspection_company;

        return $this;
    }

    /**
     * Gets tek500_note
     *
     * @return mixed|null
     */
    public function getTek500Note()
    {
        return $this->container['tek500_note'];
    }

    /**
     * Sets tek500_note
     *
     * @param mixed|null $tek500_note Notatlinjer indeholder tekstuel information om et givet BBR objekt, som ikke naturligt omfattes af eksisterende attributter p√• BBR objektet. Det kan for eksempel v√¶re s√¶rlige forhold om adgang til eller anvendelsen af BBR objektet. Der kan, som navnet angiver, angives flere notatlinjer.
     *
     * @return self
     */
    public function setTek500Note($tek500_note)
    {
        if (is_null($tek500_note)) {
            array_push($this->openAPINullablesSetToNull, 'tek500_note');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tek500_note', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tek500_note'] = $tek500_note;

        return $this;
    }

    /**
     * Gets access_address
     *
     * @return \OpenAPI\Client\Model\DARAccessAddress|null
     */
    public function getAccessAddress()
    {
        return $this->container['access_address'];
    }

    /**
     * Sets access_address
     *
     * @param \OpenAPI\Client\Model\DARAccessAddress|null $access_address access_address
     *
     * @return self
     */
    public function setAccessAddress($access_address)
    {
        if (is_null($access_address)) {
            throw new \InvalidArgumentException('non-nullable access_address cannot be null');
        }
        $this->container['access_address'] = $access_address;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


