<?php
/**
 * AVMResponse
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Resights API
 *
 * <img src=\"static/resights/resights-logo.png\" alt=\"Resights Logo\" style=\"position: absolute; top: 52px; right: 36px\" align=\"right\" width=\"240\"> <a href=\"/docs\">Swagger</a> | <a href=\"/redoc\">Redoc</a> <br> <br> <div><b>Welcome API ðŸ‘‹</b></div> <br>  <br>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: mikkel@resights.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * AVMResponse Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class AVMResponse implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AVMResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'floor_area' => 'mixed',
        'sqm_price_building_area_pic' => 'mixed',
        'catboost_sqm_price_prediction' => 'mixed',
        'lgbm_sqm_price_prediction' => 'mixed',
        'knn_sqm_price_prediction' => 'mixed',
        'knn_lower_prediction_bound' => 'mixed',
        'knn_upper_prediction_bound' => 'mixed',
        'knn_variation_coefficient' => 'mixed',
        'sqm_price_building_area_prediction_unrounded' => 'mixed',
        'trade_price_prediction_unrounded' => 'mixed',
        'sqm_price_building_area_prediction' => 'mixed',
        'trade_price_prediction' => 'mixed',
        'variation_coefficient' => 'mixed',
        'neighbors' => 'mixed'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'floor_area' => null,
        'sqm_price_building_area_pic' => null,
        'catboost_sqm_price_prediction' => null,
        'lgbm_sqm_price_prediction' => null,
        'knn_sqm_price_prediction' => null,
        'knn_lower_prediction_bound' => null,
        'knn_upper_prediction_bound' => null,
        'knn_variation_coefficient' => null,
        'sqm_price_building_area_prediction_unrounded' => null,
        'trade_price_prediction_unrounded' => null,
        'sqm_price_building_area_prediction' => null,
        'trade_price_prediction' => null,
        'variation_coefficient' => null,
        'neighbors' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'floor_area' => true,
		'sqm_price_building_area_pic' => true,
		'catboost_sqm_price_prediction' => true,
		'lgbm_sqm_price_prediction' => true,
		'knn_sqm_price_prediction' => true,
		'knn_lower_prediction_bound' => true,
		'knn_upper_prediction_bound' => true,
		'knn_variation_coefficient' => true,
		'sqm_price_building_area_prediction_unrounded' => true,
		'trade_price_prediction_unrounded' => true,
		'sqm_price_building_area_prediction' => true,
		'trade_price_prediction' => true,
		'variation_coefficient' => true,
		'neighbors' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'floor_area' => 'floor_area',
        'sqm_price_building_area_pic' => 'sqm_price_building_area_pic',
        'catboost_sqm_price_prediction' => 'catboost_sqm_price_prediction',
        'lgbm_sqm_price_prediction' => 'lgbm_sqm_price_prediction',
        'knn_sqm_price_prediction' => 'knn_sqm_price_prediction',
        'knn_lower_prediction_bound' => 'knn_lower_prediction_bound',
        'knn_upper_prediction_bound' => 'knn_upper_prediction_bound',
        'knn_variation_coefficient' => 'knn_variation_coefficient',
        'sqm_price_building_area_prediction_unrounded' => 'sqm_price_building_area_prediction_unrounded',
        'trade_price_prediction_unrounded' => 'trade_price_prediction_unrounded',
        'sqm_price_building_area_prediction' => 'sqm_price_building_area_prediction',
        'trade_price_prediction' => 'trade_price_prediction',
        'variation_coefficient' => 'variation_coefficient',
        'neighbors' => 'neighbors'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'floor_area' => 'setFloorArea',
        'sqm_price_building_area_pic' => 'setSqmPriceBuildingAreaPic',
        'catboost_sqm_price_prediction' => 'setCatboostSqmPricePrediction',
        'lgbm_sqm_price_prediction' => 'setLgbmSqmPricePrediction',
        'knn_sqm_price_prediction' => 'setKnnSqmPricePrediction',
        'knn_lower_prediction_bound' => 'setKnnLowerPredictionBound',
        'knn_upper_prediction_bound' => 'setKnnUpperPredictionBound',
        'knn_variation_coefficient' => 'setKnnVariationCoefficient',
        'sqm_price_building_area_prediction_unrounded' => 'setSqmPriceBuildingAreaPredictionUnrounded',
        'trade_price_prediction_unrounded' => 'setTradePricePredictionUnrounded',
        'sqm_price_building_area_prediction' => 'setSqmPriceBuildingAreaPrediction',
        'trade_price_prediction' => 'setTradePricePrediction',
        'variation_coefficient' => 'setVariationCoefficient',
        'neighbors' => 'setNeighbors'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'floor_area' => 'getFloorArea',
        'sqm_price_building_area_pic' => 'getSqmPriceBuildingAreaPic',
        'catboost_sqm_price_prediction' => 'getCatboostSqmPricePrediction',
        'lgbm_sqm_price_prediction' => 'getLgbmSqmPricePrediction',
        'knn_sqm_price_prediction' => 'getKnnSqmPricePrediction',
        'knn_lower_prediction_bound' => 'getKnnLowerPredictionBound',
        'knn_upper_prediction_bound' => 'getKnnUpperPredictionBound',
        'knn_variation_coefficient' => 'getKnnVariationCoefficient',
        'sqm_price_building_area_prediction_unrounded' => 'getSqmPriceBuildingAreaPredictionUnrounded',
        'trade_price_prediction_unrounded' => 'getTradePricePredictionUnrounded',
        'sqm_price_building_area_prediction' => 'getSqmPriceBuildingAreaPrediction',
        'trade_price_prediction' => 'getTradePricePrediction',
        'variation_coefficient' => 'getVariationCoefficient',
        'neighbors' => 'getNeighbors'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('floor_area', $data ?? [], null);
        $this->setIfExists('sqm_price_building_area_pic', $data ?? [], null);
        $this->setIfExists('catboost_sqm_price_prediction', $data ?? [], null);
        $this->setIfExists('lgbm_sqm_price_prediction', $data ?? [], null);
        $this->setIfExists('knn_sqm_price_prediction', $data ?? [], null);
        $this->setIfExists('knn_lower_prediction_bound', $data ?? [], null);
        $this->setIfExists('knn_upper_prediction_bound', $data ?? [], null);
        $this->setIfExists('knn_variation_coefficient', $data ?? [], null);
        $this->setIfExists('sqm_price_building_area_prediction_unrounded', $data ?? [], null);
        $this->setIfExists('trade_price_prediction_unrounded', $data ?? [], null);
        $this->setIfExists('sqm_price_building_area_prediction', $data ?? [], null);
        $this->setIfExists('trade_price_prediction', $data ?? [], null);
        $this->setIfExists('variation_coefficient', $data ?? [], null);
        $this->setIfExists('neighbors', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['floor_area'] === null) {
            $invalidProperties[] = "'floor_area' can't be null";
        }
        if ($this->container['sqm_price_building_area_pic'] === null) {
            $invalidProperties[] = "'sqm_price_building_area_pic' can't be null";
        }
        if ($this->container['catboost_sqm_price_prediction'] === null) {
            $invalidProperties[] = "'catboost_sqm_price_prediction' can't be null";
        }
        if ($this->container['lgbm_sqm_price_prediction'] === null) {
            $invalidProperties[] = "'lgbm_sqm_price_prediction' can't be null";
        }
        if ($this->container['knn_sqm_price_prediction'] === null) {
            $invalidProperties[] = "'knn_sqm_price_prediction' can't be null";
        }
        if ($this->container['knn_lower_prediction_bound'] === null) {
            $invalidProperties[] = "'knn_lower_prediction_bound' can't be null";
        }
        if ($this->container['knn_upper_prediction_bound'] === null) {
            $invalidProperties[] = "'knn_upper_prediction_bound' can't be null";
        }
        if ($this->container['knn_variation_coefficient'] === null) {
            $invalidProperties[] = "'knn_variation_coefficient' can't be null";
        }
        if ($this->container['sqm_price_building_area_prediction_unrounded'] === null) {
            $invalidProperties[] = "'sqm_price_building_area_prediction_unrounded' can't be null";
        }
        if ($this->container['trade_price_prediction_unrounded'] === null) {
            $invalidProperties[] = "'trade_price_prediction_unrounded' can't be null";
        }
        if ($this->container['sqm_price_building_area_prediction'] === null) {
            $invalidProperties[] = "'sqm_price_building_area_prediction' can't be null";
        }
        if ($this->container['trade_price_prediction'] === null) {
            $invalidProperties[] = "'trade_price_prediction' can't be null";
        }
        if ($this->container['variation_coefficient'] === null) {
            $invalidProperties[] = "'variation_coefficient' can't be null";
        }
        if ($this->container['neighbors'] === null) {
            $invalidProperties[] = "'neighbors' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets floor_area
     *
     * @return mixed
     */
    public function getFloorArea()
    {
        return $this->container['floor_area'];
    }

    /**
     * Sets floor_area
     *
     * @param mixed $floor_area floor_area
     *
     * @return self
     */
    public function setFloorArea($floor_area)
    {
        if (is_null($floor_area)) {
            array_push($this->openAPINullablesSetToNull, 'floor_area');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('floor_area', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['floor_area'] = $floor_area;

        return $this;
    }

    /**
     * Gets sqm_price_building_area_pic
     *
     * @return mixed
     */
    public function getSqmPriceBuildingAreaPic()
    {
        return $this->container['sqm_price_building_area_pic'];
    }

    /**
     * Sets sqm_price_building_area_pic
     *
     * @param mixed $sqm_price_building_area_pic sqm_price_building_area_pic
     *
     * @return self
     */
    public function setSqmPriceBuildingAreaPic($sqm_price_building_area_pic)
    {
        if (is_null($sqm_price_building_area_pic)) {
            array_push($this->openAPINullablesSetToNull, 'sqm_price_building_area_pic');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sqm_price_building_area_pic', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sqm_price_building_area_pic'] = $sqm_price_building_area_pic;

        return $this;
    }

    /**
     * Gets catboost_sqm_price_prediction
     *
     * @return mixed
     */
    public function getCatboostSqmPricePrediction()
    {
        return $this->container['catboost_sqm_price_prediction'];
    }

    /**
     * Sets catboost_sqm_price_prediction
     *
     * @param mixed $catboost_sqm_price_prediction catboost_sqm_price_prediction
     *
     * @return self
     */
    public function setCatboostSqmPricePrediction($catboost_sqm_price_prediction)
    {
        if (is_null($catboost_sqm_price_prediction)) {
            array_push($this->openAPINullablesSetToNull, 'catboost_sqm_price_prediction');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('catboost_sqm_price_prediction', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['catboost_sqm_price_prediction'] = $catboost_sqm_price_prediction;

        return $this;
    }

    /**
     * Gets lgbm_sqm_price_prediction
     *
     * @return mixed
     */
    public function getLgbmSqmPricePrediction()
    {
        return $this->container['lgbm_sqm_price_prediction'];
    }

    /**
     * Sets lgbm_sqm_price_prediction
     *
     * @param mixed $lgbm_sqm_price_prediction lgbm_sqm_price_prediction
     *
     * @return self
     */
    public function setLgbmSqmPricePrediction($lgbm_sqm_price_prediction)
    {
        if (is_null($lgbm_sqm_price_prediction)) {
            array_push($this->openAPINullablesSetToNull, 'lgbm_sqm_price_prediction');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('lgbm_sqm_price_prediction', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['lgbm_sqm_price_prediction'] = $lgbm_sqm_price_prediction;

        return $this;
    }

    /**
     * Gets knn_sqm_price_prediction
     *
     * @return mixed
     */
    public function getKnnSqmPricePrediction()
    {
        return $this->container['knn_sqm_price_prediction'];
    }

    /**
     * Sets knn_sqm_price_prediction
     *
     * @param mixed $knn_sqm_price_prediction knn_sqm_price_prediction
     *
     * @return self
     */
    public function setKnnSqmPricePrediction($knn_sqm_price_prediction)
    {
        if (is_null($knn_sqm_price_prediction)) {
            array_push($this->openAPINullablesSetToNull, 'knn_sqm_price_prediction');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('knn_sqm_price_prediction', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['knn_sqm_price_prediction'] = $knn_sqm_price_prediction;

        return $this;
    }

    /**
     * Gets knn_lower_prediction_bound
     *
     * @return mixed
     */
    public function getKnnLowerPredictionBound()
    {
        return $this->container['knn_lower_prediction_bound'];
    }

    /**
     * Sets knn_lower_prediction_bound
     *
     * @param mixed $knn_lower_prediction_bound knn_lower_prediction_bound
     *
     * @return self
     */
    public function setKnnLowerPredictionBound($knn_lower_prediction_bound)
    {
        if (is_null($knn_lower_prediction_bound)) {
            array_push($this->openAPINullablesSetToNull, 'knn_lower_prediction_bound');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('knn_lower_prediction_bound', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['knn_lower_prediction_bound'] = $knn_lower_prediction_bound;

        return $this;
    }

    /**
     * Gets knn_upper_prediction_bound
     *
     * @return mixed
     */
    public function getKnnUpperPredictionBound()
    {
        return $this->container['knn_upper_prediction_bound'];
    }

    /**
     * Sets knn_upper_prediction_bound
     *
     * @param mixed $knn_upper_prediction_bound knn_upper_prediction_bound
     *
     * @return self
     */
    public function setKnnUpperPredictionBound($knn_upper_prediction_bound)
    {
        if (is_null($knn_upper_prediction_bound)) {
            array_push($this->openAPINullablesSetToNull, 'knn_upper_prediction_bound');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('knn_upper_prediction_bound', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['knn_upper_prediction_bound'] = $knn_upper_prediction_bound;

        return $this;
    }

    /**
     * Gets knn_variation_coefficient
     *
     * @return mixed
     */
    public function getKnnVariationCoefficient()
    {
        return $this->container['knn_variation_coefficient'];
    }

    /**
     * Sets knn_variation_coefficient
     *
     * @param mixed $knn_variation_coefficient knn_variation_coefficient
     *
     * @return self
     */
    public function setKnnVariationCoefficient($knn_variation_coefficient)
    {
        if (is_null($knn_variation_coefficient)) {
            array_push($this->openAPINullablesSetToNull, 'knn_variation_coefficient');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('knn_variation_coefficient', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['knn_variation_coefficient'] = $knn_variation_coefficient;

        return $this;
    }

    /**
     * Gets sqm_price_building_area_prediction_unrounded
     *
     * @return mixed
     */
    public function getSqmPriceBuildingAreaPredictionUnrounded()
    {
        return $this->container['sqm_price_building_area_prediction_unrounded'];
    }

    /**
     * Sets sqm_price_building_area_prediction_unrounded
     *
     * @param mixed $sqm_price_building_area_prediction_unrounded sqm_price_building_area_prediction_unrounded
     *
     * @return self
     */
    public function setSqmPriceBuildingAreaPredictionUnrounded($sqm_price_building_area_prediction_unrounded)
    {
        if (is_null($sqm_price_building_area_prediction_unrounded)) {
            array_push($this->openAPINullablesSetToNull, 'sqm_price_building_area_prediction_unrounded');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sqm_price_building_area_prediction_unrounded', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sqm_price_building_area_prediction_unrounded'] = $sqm_price_building_area_prediction_unrounded;

        return $this;
    }

    /**
     * Gets trade_price_prediction_unrounded
     *
     * @return mixed
     */
    public function getTradePricePredictionUnrounded()
    {
        return $this->container['trade_price_prediction_unrounded'];
    }

    /**
     * Sets trade_price_prediction_unrounded
     *
     * @param mixed $trade_price_prediction_unrounded trade_price_prediction_unrounded
     *
     * @return self
     */
    public function setTradePricePredictionUnrounded($trade_price_prediction_unrounded)
    {
        if (is_null($trade_price_prediction_unrounded)) {
            array_push($this->openAPINullablesSetToNull, 'trade_price_prediction_unrounded');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('trade_price_prediction_unrounded', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['trade_price_prediction_unrounded'] = $trade_price_prediction_unrounded;

        return $this;
    }

    /**
     * Gets sqm_price_building_area_prediction
     *
     * @return mixed
     */
    public function getSqmPriceBuildingAreaPrediction()
    {
        return $this->container['sqm_price_building_area_prediction'];
    }

    /**
     * Sets sqm_price_building_area_prediction
     *
     * @param mixed $sqm_price_building_area_prediction sqm_price_building_area_prediction
     *
     * @return self
     */
    public function setSqmPriceBuildingAreaPrediction($sqm_price_building_area_prediction)
    {
        if (is_null($sqm_price_building_area_prediction)) {
            array_push($this->openAPINullablesSetToNull, 'sqm_price_building_area_prediction');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sqm_price_building_area_prediction', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sqm_price_building_area_prediction'] = $sqm_price_building_area_prediction;

        return $this;
    }

    /**
     * Gets trade_price_prediction
     *
     * @return mixed
     */
    public function getTradePricePrediction()
    {
        return $this->container['trade_price_prediction'];
    }

    /**
     * Sets trade_price_prediction
     *
     * @param mixed $trade_price_prediction trade_price_prediction
     *
     * @return self
     */
    public function setTradePricePrediction($trade_price_prediction)
    {
        if (is_null($trade_price_prediction)) {
            array_push($this->openAPINullablesSetToNull, 'trade_price_prediction');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('trade_price_prediction', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['trade_price_prediction'] = $trade_price_prediction;

        return $this;
    }

    /**
     * Gets variation_coefficient
     *
     * @return mixed
     */
    public function getVariationCoefficient()
    {
        return $this->container['variation_coefficient'];
    }

    /**
     * Sets variation_coefficient
     *
     * @param mixed $variation_coefficient variation_coefficient
     *
     * @return self
     */
    public function setVariationCoefficient($variation_coefficient)
    {
        if (is_null($variation_coefficient)) {
            array_push($this->openAPINullablesSetToNull, 'variation_coefficient');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('variation_coefficient', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['variation_coefficient'] = $variation_coefficient;

        return $this;
    }

    /**
     * Gets neighbors
     *
     * @return mixed
     */
    public function getNeighbors()
    {
        return $this->container['neighbors'];
    }

    /**
     * Sets neighbors
     *
     * @param mixed $neighbors neighbors
     *
     * @return self
     */
    public function setNeighbors($neighbors)
    {
        if (is_null($neighbors)) {
            array_push($this->openAPINullablesSetToNull, 'neighbors');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('neighbors', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['neighbors'] = $neighbors;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


