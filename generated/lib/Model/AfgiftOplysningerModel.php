<?php
/**
 * AfgiftOplysningerModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Resights API
 *
 * <img src=\"static/resights/resights-logo.png\" alt=\"Resights Logo\" style=\"position: absolute; top: 52px; right: 36px\" align=\"right\" width=\"240\"> <a href=\"/docs\">Swagger</a> | <a href=\"/redoc\">Redoc</a> <br> <br> <div><b>Welcome API ðŸ‘‹</b></div> <br>  <br>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: mikkel@resights.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * AfgiftOplysningerModel Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class AfgiftOplysningerModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AfgiftOplysningerModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'afgiftspligtigt_beloeb' => 'mixed',
        'paalydende_nyt_laan' => 'mixed',
        'haeftelse_beloeb_opskrevet' => 'mixed',
        'valuta_kode' => 'mixed',
        'skoede_koebesum' => '\OpenAPI\Client\Model\SkoedeKoebesumModel',
        'kurs_oplysninger' => '\OpenAPI\Client\Model\KursOplysningerModel',
        'overfoert_hovedstol_samling' => 'mixed',
        'kursvaerdi_samling' => 'mixed',
        'nominel_samling' => 'mixed'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'afgiftspligtigt_beloeb' => null,
        'paalydende_nyt_laan' => null,
        'haeftelse_beloeb_opskrevet' => null,
        'valuta_kode' => null,
        'skoede_koebesum' => null,
        'kurs_oplysninger' => null,
        'overfoert_hovedstol_samling' => null,
        'kursvaerdi_samling' => null,
        'nominel_samling' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'afgiftspligtigt_beloeb' => true,
		'paalydende_nyt_laan' => true,
		'haeftelse_beloeb_opskrevet' => true,
		'valuta_kode' => true,
		'skoede_koebesum' => false,
		'kurs_oplysninger' => false,
		'overfoert_hovedstol_samling' => true,
		'kursvaerdi_samling' => true,
		'nominel_samling' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'afgiftspligtigt_beloeb' => 'AfgiftspligtigtBeloeb',
        'paalydende_nyt_laan' => 'PaalydendeNytLaan',
        'haeftelse_beloeb_opskrevet' => 'HaeftelseBeloebOpskrevet',
        'valuta_kode' => 'ValutaKode',
        'skoede_koebesum' => 'SkoedeKoebesum',
        'kurs_oplysninger' => 'KursOplysninger',
        'overfoert_hovedstol_samling' => 'OverfoertHovedstolSamling',
        'kursvaerdi_samling' => 'KursvaerdiSamling',
        'nominel_samling' => 'NominelSamling'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'afgiftspligtigt_beloeb' => 'setAfgiftspligtigtBeloeb',
        'paalydende_nyt_laan' => 'setPaalydendeNytLaan',
        'haeftelse_beloeb_opskrevet' => 'setHaeftelseBeloebOpskrevet',
        'valuta_kode' => 'setValutaKode',
        'skoede_koebesum' => 'setSkoedeKoebesum',
        'kurs_oplysninger' => 'setKursOplysninger',
        'overfoert_hovedstol_samling' => 'setOverfoertHovedstolSamling',
        'kursvaerdi_samling' => 'setKursvaerdiSamling',
        'nominel_samling' => 'setNominelSamling'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'afgiftspligtigt_beloeb' => 'getAfgiftspligtigtBeloeb',
        'paalydende_nyt_laan' => 'getPaalydendeNytLaan',
        'haeftelse_beloeb_opskrevet' => 'getHaeftelseBeloebOpskrevet',
        'valuta_kode' => 'getValutaKode',
        'skoede_koebesum' => 'getSkoedeKoebesum',
        'kurs_oplysninger' => 'getKursOplysninger',
        'overfoert_hovedstol_samling' => 'getOverfoertHovedstolSamling',
        'kursvaerdi_samling' => 'getKursvaerdiSamling',
        'nominel_samling' => 'getNominelSamling'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('afgiftspligtigt_beloeb', $data ?? [], null);
        $this->setIfExists('paalydende_nyt_laan', $data ?? [], null);
        $this->setIfExists('haeftelse_beloeb_opskrevet', $data ?? [], null);
        $this->setIfExists('valuta_kode', $data ?? [], null);
        $this->setIfExists('skoede_koebesum', $data ?? [], null);
        $this->setIfExists('kurs_oplysninger', $data ?? [], null);
        $this->setIfExists('overfoert_hovedstol_samling', $data ?? [], null);
        $this->setIfExists('kursvaerdi_samling', $data ?? [], null);
        $this->setIfExists('nominel_samling', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['afgiftspligtigt_beloeb'] === null) {
            $invalidProperties[] = "'afgiftspligtigt_beloeb' can't be null";
        }
        if ($this->container['skoede_koebesum'] === null) {
            $invalidProperties[] = "'skoede_koebesum' can't be null";
        }
        if ($this->container['kurs_oplysninger'] === null) {
            $invalidProperties[] = "'kurs_oplysninger' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets afgiftspligtigt_beloeb
     *
     * @return mixed
     */
    public function getAfgiftspligtigtBeloeb()
    {
        return $this->container['afgiftspligtigt_beloeb'];
    }

    /**
     * Sets afgiftspligtigt_beloeb
     *
     * @param mixed $afgiftspligtigt_beloeb Angiver beloebet som tinglysningsafgiften er beregnet ud fra.
     *
     * @return self
     */
    public function setAfgiftspligtigtBeloeb($afgiftspligtigt_beloeb)
    {
        if (is_null($afgiftspligtigt_beloeb)) {
            array_push($this->openAPINullablesSetToNull, 'afgiftspligtigt_beloeb');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('afgiftspligtigt_beloeb', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['afgiftspligtigt_beloeb'] = $afgiftspligtigt_beloeb;

        return $this;
    }

    /**
     * Gets paalydende_nyt_laan
     *
     * @return mixed|null
     */
    public function getPaalydendeNytLaan()
    {
        return $this->container['paalydende_nyt_laan'];
    }

    /**
     * Sets paalydende_nyt_laan
     *
     * @param mixed|null $paalydende_nyt_laan Angiver beloeb for nyt pantebrevs hovedstol. Angives kun ved nye pantebreve. Kan vaere sat til 0 i forbindelse af servitutter der tinglyses pantstiftende.
     *
     * @return self
     */
    public function setPaalydendeNytLaan($paalydende_nyt_laan)
    {
        if (is_null($paalydende_nyt_laan)) {
            array_push($this->openAPINullablesSetToNull, 'paalydende_nyt_laan');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('paalydende_nyt_laan', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['paalydende_nyt_laan'] = $paalydende_nyt_laan;

        return $this;
    }

    /**
     * Gets haeftelse_beloeb_opskrevet
     *
     * @return mixed|null
     */
    public function getHaeftelseBeloebOpskrevet()
    {
        return $this->container['haeftelse_beloeb_opskrevet'];
    }

    /**
     * Sets haeftelse_beloeb_opskrevet
     *
     * @param mixed|null $haeftelse_beloeb_opskrevet Anvendes i de tilfaelde hvor hovedstolen kan tillaegges rente og dermed opnÃ¥ en hÃ¸jere pantstiftende vÃ¦rdi end angivet i hovedstol.
     *
     * @return self
     */
    public function setHaeftelseBeloebOpskrevet($haeftelse_beloeb_opskrevet)
    {
        if (is_null($haeftelse_beloeb_opskrevet)) {
            array_push($this->openAPINullablesSetToNull, 'haeftelse_beloeb_opskrevet');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('haeftelse_beloeb_opskrevet', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['haeftelse_beloeb_opskrevet'] = $haeftelse_beloeb_opskrevet;

        return $this;
    }

    /**
     * Gets valuta_kode
     *
     * @return mixed|null
     */
    public function getValutaKode()
    {
        return $this->container['valuta_kode'];
    }

    /**
     * Sets valuta_kode
     *
     * @param mixed|null $valuta_kode ISO 4217 valutakode.
     *
     * @return self
     */
    public function setValutaKode($valuta_kode)
    {
        if (is_null($valuta_kode)) {
            array_push($this->openAPINullablesSetToNull, 'valuta_kode');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('valuta_kode', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['valuta_kode'] = $valuta_kode;

        return $this;
    }

    /**
     * Gets skoede_koebesum
     *
     * @return \OpenAPI\Client\Model\SkoedeKoebesumModel
     */
    public function getSkoedeKoebesum()
    {
        return $this->container['skoede_koebesum'];
    }

    /**
     * Sets skoede_koebesum
     *
     * @param \OpenAPI\Client\Model\SkoedeKoebesumModel $skoede_koebesum skoede_koebesum
     *
     * @return self
     */
    public function setSkoedeKoebesum($skoede_koebesum)
    {
        if (is_null($skoede_koebesum)) {
            throw new \InvalidArgumentException('non-nullable skoede_koebesum cannot be null');
        }
        $this->container['skoede_koebesum'] = $skoede_koebesum;

        return $this;
    }

    /**
     * Gets kurs_oplysninger
     *
     * @return \OpenAPI\Client\Model\KursOplysningerModel
     */
    public function getKursOplysninger()
    {
        return $this->container['kurs_oplysninger'];
    }

    /**
     * Sets kurs_oplysninger
     *
     * @param \OpenAPI\Client\Model\KursOplysningerModel $kurs_oplysninger kurs_oplysninger
     *
     * @return self
     */
    public function setKursOplysninger($kurs_oplysninger)
    {
        if (is_null($kurs_oplysninger)) {
            throw new \InvalidArgumentException('non-nullable kurs_oplysninger cannot be null');
        }
        $this->container['kurs_oplysninger'] = $kurs_oplysninger;

        return $this;
    }

    /**
     * Gets overfoert_hovedstol_samling
     *
     * @return mixed|null
     */
    public function getOverfoertHovedstolSamling()
    {
        return $this->container['overfoert_hovedstol_samling'];
    }

    /**
     * Sets overfoert_hovedstol_samling
     *
     * @param mixed|null $overfoert_hovedstol_samling Afgiftsoplysning om overfÃ¸rt hovedstol.
     *
     * @return self
     */
    public function setOverfoertHovedstolSamling($overfoert_hovedstol_samling)
    {
        if (is_null($overfoert_hovedstol_samling)) {
            array_push($this->openAPINullablesSetToNull, 'overfoert_hovedstol_samling');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('overfoert_hovedstol_samling', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['overfoert_hovedstol_samling'] = $overfoert_hovedstol_samling;

        return $this;
    }

    /**
     * Gets kursvaerdi_samling
     *
     * @return mixed|null
     */
    public function getKursvaerdiSamling()
    {
        return $this->container['kursvaerdi_samling'];
    }

    /**
     * Sets kursvaerdi_samling
     *
     * @param mixed|null $kursvaerdi_samling Samling af afgiftsoplysninger opgjort efter kursvaerdi.
     *
     * @return self
     */
    public function setKursvaerdiSamling($kursvaerdi_samling)
    {
        if (is_null($kursvaerdi_samling)) {
            array_push($this->openAPINullablesSetToNull, 'kursvaerdi_samling');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('kursvaerdi_samling', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['kursvaerdi_samling'] = $kursvaerdi_samling;

        return $this;
    }

    /**
     * Gets nominel_samling
     *
     * @return mixed|null
     */
    public function getNominelSamling()
    {
        return $this->container['nominel_samling'];
    }

    /**
     * Sets nominel_samling
     *
     * @param mixed|null $nominel_samling Afgiftsoplysning opgjort efter nominel vÃ¦rdi.
     *
     * @return self
     */
    public function setNominelSamling($nominel_samling)
    {
        if (is_null($nominel_samling)) {
            array_push($this->openAPINullablesSetToNull, 'nominel_samling');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('nominel_samling', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['nominel_samling'] = $nominel_samling;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


