<?php
/**
 * ServitutInformationModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Resights API
 *
 * <img src=\"static/resights/resights-logo.png\" alt=\"Resights Logo\" style=\"position: absolute; top: 52px; right: 36px\" align=\"right\" width=\"240\"> <a href=\"/docs\">Swagger</a> | <a href=\"/redoc\">Redoc</a> <br> <br> <div><b>Welcome API ðŸ‘‹</b></div> <br>  <br>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: mikkel@resights.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ServitutInformationModel Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ServitutInformationModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ServitutInformationModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'tidsbegraensning' => 'mixed',
        'koeb_salg' => '\OpenAPI\Client\Model\ServitutKoebSalgEnum',
        'anvendelse' => '\OpenAPI\Client\Model\ServitutAnvendelseEnum',
        'bebyggelse' => '\OpenAPI\Client\Model\ServitutBebyggelseEnum',
        'ejendomsforhold' => '\OpenAPI\Client\Model\ServitutEjendomsforholdEnum',
        'tekniske_anlaeg' => '\OpenAPI\Client\Model\ServitutTekniskeAnlaegEnum',
        'ledninger' => '\OpenAPI\Client\Model\ServitutLedningerEnum',
        'faerdsel' => '\OpenAPI\Client\Model\ServitutFaerdselEnum',
        'forsyning' => '\OpenAPI\Client\Model\ServitutForsyningEnum',
        'brugs_leje_forhold' => '\OpenAPI\Client\Model\ServitutBrugsLejeForholdEnum',
        'andet' => '\OpenAPI\Client\Model\ServitutAndetEnum',
        'fritekst' => 'mixed',
        'fortrinsret' => 'mixed',
        'fortrinsret_tekst' => 'mixed',
        'kan_tinglyses_uden_ejers_tiltraedelse' => 'mixed',
        'kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter' => 'mixed',
        'har_betydning_for_ejendommens_vaerdi' => 'mixed'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'tidsbegraensning' => null,
        'koeb_salg' => null,
        'anvendelse' => null,
        'bebyggelse' => null,
        'ejendomsforhold' => null,
        'tekniske_anlaeg' => null,
        'ledninger' => null,
        'faerdsel' => null,
        'forsyning' => null,
        'brugs_leje_forhold' => null,
        'andet' => null,
        'fritekst' => null,
        'fortrinsret' => null,
        'fortrinsret_tekst' => null,
        'kan_tinglyses_uden_ejers_tiltraedelse' => null,
        'kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter' => null,
        'har_betydning_for_ejendommens_vaerdi' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'tidsbegraensning' => true,
		'koeb_salg' => false,
		'anvendelse' => false,
		'bebyggelse' => false,
		'ejendomsforhold' => false,
		'tekniske_anlaeg' => false,
		'ledninger' => false,
		'faerdsel' => false,
		'forsyning' => false,
		'brugs_leje_forhold' => false,
		'andet' => false,
		'fritekst' => true,
		'fortrinsret' => true,
		'fortrinsret_tekst' => true,
		'kan_tinglyses_uden_ejers_tiltraedelse' => true,
		'kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter' => true,
		'har_betydning_for_ejendommens_vaerdi' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'tidsbegraensning' => 'Tidsbegraensning',
        'koeb_salg' => 'KoebSalg',
        'anvendelse' => 'Anvendelse',
        'bebyggelse' => 'Bebyggelse',
        'ejendomsforhold' => 'Ejendomsforhold',
        'tekniske_anlaeg' => 'TekniskeAnlaeg',
        'ledninger' => 'Ledninger',
        'faerdsel' => 'Faerdsel',
        'forsyning' => 'Forsyning',
        'brugs_leje_forhold' => 'BrugsLejeForhold',
        'andet' => 'Andet',
        'fritekst' => 'Fritekst',
        'fortrinsret' => 'Fortrinsret',
        'fortrinsret_tekst' => 'FortrinsretTekst',
        'kan_tinglyses_uden_ejers_tiltraedelse' => 'KanTinglysesUdenEjersTiltraedelse',
        'kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter' => 'KanTinglysesMedPrioritetForudForGaeldOgServitutter',
        'har_betydning_for_ejendommens_vaerdi' => 'HarBetydningForEjendommensVaerdi'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'tidsbegraensning' => 'setTidsbegraensning',
        'koeb_salg' => 'setKoebSalg',
        'anvendelse' => 'setAnvendelse',
        'bebyggelse' => 'setBebyggelse',
        'ejendomsforhold' => 'setEjendomsforhold',
        'tekniske_anlaeg' => 'setTekniskeAnlaeg',
        'ledninger' => 'setLedninger',
        'faerdsel' => 'setFaerdsel',
        'forsyning' => 'setForsyning',
        'brugs_leje_forhold' => 'setBrugsLejeForhold',
        'andet' => 'setAndet',
        'fritekst' => 'setFritekst',
        'fortrinsret' => 'setFortrinsret',
        'fortrinsret_tekst' => 'setFortrinsretTekst',
        'kan_tinglyses_uden_ejers_tiltraedelse' => 'setKanTinglysesUdenEjersTiltraedelse',
        'kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter' => 'setKanTinglysesMedPrioritetForudForGaeldOgServitutter',
        'har_betydning_for_ejendommens_vaerdi' => 'setHarBetydningForEjendommensVaerdi'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'tidsbegraensning' => 'getTidsbegraensning',
        'koeb_salg' => 'getKoebSalg',
        'anvendelse' => 'getAnvendelse',
        'bebyggelse' => 'getBebyggelse',
        'ejendomsforhold' => 'getEjendomsforhold',
        'tekniske_anlaeg' => 'getTekniskeAnlaeg',
        'ledninger' => 'getLedninger',
        'faerdsel' => 'getFaerdsel',
        'forsyning' => 'getForsyning',
        'brugs_leje_forhold' => 'getBrugsLejeForhold',
        'andet' => 'getAndet',
        'fritekst' => 'getFritekst',
        'fortrinsret' => 'getFortrinsret',
        'fortrinsret_tekst' => 'getFortrinsretTekst',
        'kan_tinglyses_uden_ejers_tiltraedelse' => 'getKanTinglysesUdenEjersTiltraedelse',
        'kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter' => 'getKanTinglysesMedPrioritetForudForGaeldOgServitutter',
        'har_betydning_for_ejendommens_vaerdi' => 'getHarBetydningForEjendommensVaerdi'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('tidsbegraensning', $data ?? [], null);
        $this->setIfExists('koeb_salg', $data ?? [], null);
        $this->setIfExists('anvendelse', $data ?? [], null);
        $this->setIfExists('bebyggelse', $data ?? [], null);
        $this->setIfExists('ejendomsforhold', $data ?? [], null);
        $this->setIfExists('tekniske_anlaeg', $data ?? [], null);
        $this->setIfExists('ledninger', $data ?? [], null);
        $this->setIfExists('faerdsel', $data ?? [], null);
        $this->setIfExists('forsyning', $data ?? [], null);
        $this->setIfExists('brugs_leje_forhold', $data ?? [], null);
        $this->setIfExists('andet', $data ?? [], null);
        $this->setIfExists('fritekst', $data ?? [], null);
        $this->setIfExists('fortrinsret', $data ?? [], null);
        $this->setIfExists('fortrinsret_tekst', $data ?? [], null);
        $this->setIfExists('kan_tinglyses_uden_ejers_tiltraedelse', $data ?? [], null);
        $this->setIfExists('kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter', $data ?? [], null);
        $this->setIfExists('har_betydning_for_ejendommens_vaerdi', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets tidsbegraensning
     *
     * @return mixed|null
     */
    public function getTidsbegraensning()
    {
        return $this->container['tidsbegraensning'];
    }

    /**
     * Sets tidsbegraensning
     *
     * @param mixed|null $tidsbegraensning Angiver sidste dato for en anmodet tidsbegrÃ¦nsning for et tinglysningsdokument.
     *
     * @return self
     */
    public function setTidsbegraensning($tidsbegraensning)
    {
        if (is_null($tidsbegraensning)) {
            array_push($this->openAPINullablesSetToNull, 'tidsbegraensning');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('tidsbegraensning', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['tidsbegraensning'] = $tidsbegraensning;

        return $this;
    }

    /**
     * Gets koeb_salg
     *
     * @return \OpenAPI\Client\Model\ServitutKoebSalgEnum|null
     */
    public function getKoebSalg()
    {
        return $this->container['koeb_salg'];
    }

    /**
     * Sets koeb_salg
     *
     * @param \OpenAPI\Client\Model\ServitutKoebSalgEnum|null $koeb_salg koeb_salg
     *
     * @return self
     */
    public function setKoebSalg($koeb_salg)
    {
        if (is_null($koeb_salg)) {
            throw new \InvalidArgumentException('non-nullable koeb_salg cannot be null');
        }
        $this->container['koeb_salg'] = $koeb_salg;

        return $this;
    }

    /**
     * Gets anvendelse
     *
     * @return \OpenAPI\Client\Model\ServitutAnvendelseEnum|null
     */
    public function getAnvendelse()
    {
        return $this->container['anvendelse'];
    }

    /**
     * Sets anvendelse
     *
     * @param \OpenAPI\Client\Model\ServitutAnvendelseEnum|null $anvendelse anvendelse
     *
     * @return self
     */
    public function setAnvendelse($anvendelse)
    {
        if (is_null($anvendelse)) {
            throw new \InvalidArgumentException('non-nullable anvendelse cannot be null');
        }
        $this->container['anvendelse'] = $anvendelse;

        return $this;
    }

    /**
     * Gets bebyggelse
     *
     * @return \OpenAPI\Client\Model\ServitutBebyggelseEnum|null
     */
    public function getBebyggelse()
    {
        return $this->container['bebyggelse'];
    }

    /**
     * Sets bebyggelse
     *
     * @param \OpenAPI\Client\Model\ServitutBebyggelseEnum|null $bebyggelse bebyggelse
     *
     * @return self
     */
    public function setBebyggelse($bebyggelse)
    {
        if (is_null($bebyggelse)) {
            throw new \InvalidArgumentException('non-nullable bebyggelse cannot be null');
        }
        $this->container['bebyggelse'] = $bebyggelse;

        return $this;
    }

    /**
     * Gets ejendomsforhold
     *
     * @return \OpenAPI\Client\Model\ServitutEjendomsforholdEnum|null
     */
    public function getEjendomsforhold()
    {
        return $this->container['ejendomsforhold'];
    }

    /**
     * Sets ejendomsforhold
     *
     * @param \OpenAPI\Client\Model\ServitutEjendomsforholdEnum|null $ejendomsforhold ejendomsforhold
     *
     * @return self
     */
    public function setEjendomsforhold($ejendomsforhold)
    {
        if (is_null($ejendomsforhold)) {
            throw new \InvalidArgumentException('non-nullable ejendomsforhold cannot be null');
        }
        $this->container['ejendomsforhold'] = $ejendomsforhold;

        return $this;
    }

    /**
     * Gets tekniske_anlaeg
     *
     * @return \OpenAPI\Client\Model\ServitutTekniskeAnlaegEnum|null
     */
    public function getTekniskeAnlaeg()
    {
        return $this->container['tekniske_anlaeg'];
    }

    /**
     * Sets tekniske_anlaeg
     *
     * @param \OpenAPI\Client\Model\ServitutTekniskeAnlaegEnum|null $tekniske_anlaeg tekniske_anlaeg
     *
     * @return self
     */
    public function setTekniskeAnlaeg($tekniske_anlaeg)
    {
        if (is_null($tekniske_anlaeg)) {
            throw new \InvalidArgumentException('non-nullable tekniske_anlaeg cannot be null');
        }
        $this->container['tekniske_anlaeg'] = $tekniske_anlaeg;

        return $this;
    }

    /**
     * Gets ledninger
     *
     * @return \OpenAPI\Client\Model\ServitutLedningerEnum|null
     */
    public function getLedninger()
    {
        return $this->container['ledninger'];
    }

    /**
     * Sets ledninger
     *
     * @param \OpenAPI\Client\Model\ServitutLedningerEnum|null $ledninger ledninger
     *
     * @return self
     */
    public function setLedninger($ledninger)
    {
        if (is_null($ledninger)) {
            throw new \InvalidArgumentException('non-nullable ledninger cannot be null');
        }
        $this->container['ledninger'] = $ledninger;

        return $this;
    }

    /**
     * Gets faerdsel
     *
     * @return \OpenAPI\Client\Model\ServitutFaerdselEnum|null
     */
    public function getFaerdsel()
    {
        return $this->container['faerdsel'];
    }

    /**
     * Sets faerdsel
     *
     * @param \OpenAPI\Client\Model\ServitutFaerdselEnum|null $faerdsel faerdsel
     *
     * @return self
     */
    public function setFaerdsel($faerdsel)
    {
        if (is_null($faerdsel)) {
            throw new \InvalidArgumentException('non-nullable faerdsel cannot be null');
        }
        $this->container['faerdsel'] = $faerdsel;

        return $this;
    }

    /**
     * Gets forsyning
     *
     * @return \OpenAPI\Client\Model\ServitutForsyningEnum|null
     */
    public function getForsyning()
    {
        return $this->container['forsyning'];
    }

    /**
     * Sets forsyning
     *
     * @param \OpenAPI\Client\Model\ServitutForsyningEnum|null $forsyning forsyning
     *
     * @return self
     */
    public function setForsyning($forsyning)
    {
        if (is_null($forsyning)) {
            throw new \InvalidArgumentException('non-nullable forsyning cannot be null');
        }
        $this->container['forsyning'] = $forsyning;

        return $this;
    }

    /**
     * Gets brugs_leje_forhold
     *
     * @return \OpenAPI\Client\Model\ServitutBrugsLejeForholdEnum|null
     */
    public function getBrugsLejeForhold()
    {
        return $this->container['brugs_leje_forhold'];
    }

    /**
     * Sets brugs_leje_forhold
     *
     * @param \OpenAPI\Client\Model\ServitutBrugsLejeForholdEnum|null $brugs_leje_forhold brugs_leje_forhold
     *
     * @return self
     */
    public function setBrugsLejeForhold($brugs_leje_forhold)
    {
        if (is_null($brugs_leje_forhold)) {
            throw new \InvalidArgumentException('non-nullable brugs_leje_forhold cannot be null');
        }
        $this->container['brugs_leje_forhold'] = $brugs_leje_forhold;

        return $this;
    }

    /**
     * Gets andet
     *
     * @return \OpenAPI\Client\Model\ServitutAndetEnum|null
     */
    public function getAndet()
    {
        return $this->container['andet'];
    }

    /**
     * Sets andet
     *
     * @param \OpenAPI\Client\Model\ServitutAndetEnum|null $andet andet
     *
     * @return self
     */
    public function setAndet($andet)
    {
        if (is_null($andet)) {
            throw new \InvalidArgumentException('non-nullable andet cannot be null');
        }
        $this->container['andet'] = $andet;

        return $this;
    }

    /**
     * Gets fritekst
     *
     * @return mixed|null
     */
    public function getFritekst()
    {
        return $this->container['fritekst'];
    }

    /**
     * Sets fritekst
     *
     * @param mixed|null $fritekst Her angives information i fri tekst. Der vil ikke optrÃ¦de koder i dette felt og man skal vise indholdet som fri tekst.
     *
     * @return self
     */
    public function setFritekst($fritekst)
    {
        if (is_null($fritekst)) {
            array_push($this->openAPINullablesSetToNull, 'fritekst');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('fritekst', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['fritekst'] = $fritekst;

        return $this;
    }

    /**
     * Gets fortrinsret
     *
     * @return mixed|null
     */
    public function getFortrinsret()
    {
        return $this->container['fortrinsret'];
    }

    /**
     * Sets fortrinsret
     *
     * @param mixed|null $fortrinsret Angiver om servitutten kan tinglyses med fortrinsret.
     *
     * @return self
     */
    public function setFortrinsret($fortrinsret)
    {
        if (is_null($fortrinsret)) {
            array_push($this->openAPINullablesSetToNull, 'fortrinsret');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('fortrinsret', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['fortrinsret'] = $fortrinsret;

        return $this;
    }

    /**
     * Gets fortrinsret_tekst
     *
     * @return mixed|null
     */
    public function getFortrinsretTekst()
    {
        return $this->container['fortrinsret_tekst'];
    }

    /**
     * Sets fortrinsret_tekst
     *
     * @param mixed|null $fortrinsret_tekst Tekst fir servitut som kan tinglyses med fortingsret.
     *
     * @return self
     */
    public function setFortrinsretTekst($fortrinsret_tekst)
    {
        if (is_null($fortrinsret_tekst)) {
            array_push($this->openAPINullablesSetToNull, 'fortrinsret_tekst');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('fortrinsret_tekst', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['fortrinsret_tekst'] = $fortrinsret_tekst;

        return $this;
    }

    /**
     * Gets kan_tinglyses_uden_ejers_tiltraedelse
     *
     * @return mixed|null
     */
    public function getKanTinglysesUdenEjersTiltraedelse()
    {
        return $this->container['kan_tinglyses_uden_ejers_tiltraedelse'];
    }

    /**
     * Sets kan_tinglyses_uden_ejers_tiltraedelse
     *
     * @param mixed|null $kan_tinglyses_uden_ejers_tiltraedelse True angiver at servitutten kan tinglyses uden ejers tiltrÃ¦delse.
     *
     * @return self
     */
    public function setKanTinglysesUdenEjersTiltraedelse($kan_tinglyses_uden_ejers_tiltraedelse)
    {
        if (is_null($kan_tinglyses_uden_ejers_tiltraedelse)) {
            array_push($this->openAPINullablesSetToNull, 'kan_tinglyses_uden_ejers_tiltraedelse');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('kan_tinglyses_uden_ejers_tiltraedelse', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['kan_tinglyses_uden_ejers_tiltraedelse'] = $kan_tinglyses_uden_ejers_tiltraedelse;

        return $this;
    }

    /**
     * Gets kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter
     *
     * @return mixed|null
     */
    public function getKanTinglysesMedPrioritetForudForGaeldOgServitutter()
    {
        return $this->container['kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter'];
    }

    /**
     * Sets kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter
     *
     * @param mixed|null $kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter True angiver at servitutten tinglyses med prioritet forud for gÃ¦ld og servitutter
     *
     * @return self
     */
    public function setKanTinglysesMedPrioritetForudForGaeldOgServitutter($kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter)
    {
        if (is_null($kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter)) {
            array_push($this->openAPINullablesSetToNull, 'kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter'] = $kan_tinglyses_med_prioritet_forud_for_gaeld_og_servitutter;

        return $this;
    }

    /**
     * Gets har_betydning_for_ejendommens_vaerdi
     *
     * @return mixed|null
     */
    public function getHarBetydningForEjendommensVaerdi()
    {
        return $this->container['har_betydning_for_ejendommens_vaerdi'];
    }

    /**
     * Sets har_betydning_for_ejendommens_vaerdi
     *
     * @param mixed|null $har_betydning_for_ejendommens_vaerdi True angiver at servitutten har betydning for ejendommens vÃ¦rdi
     *
     * @return self
     */
    public function setHarBetydningForEjendommensVaerdi($har_betydning_for_ejendommens_vaerdi)
    {
        if (is_null($har_betydning_for_ejendommens_vaerdi)) {
            array_push($this->openAPINullablesSetToNull, 'har_betydning_for_ejendommens_vaerdi');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('har_betydning_for_ejendommens_vaerdi', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['har_betydning_for_ejendommens_vaerdi'] = $har_betydning_for_ejendommens_vaerdi;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


