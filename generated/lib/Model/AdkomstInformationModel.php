<?php
/**
 * AdkomstInformationModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Resights API
 *
 * <img src=\"static/resights/resights-logo.png\" alt=\"Resights Logo\" style=\"position: absolute; top: 52px; right: 36px\" align=\"right\" width=\"240\"> <a href=\"/docs\">Swagger</a> | <a href=\"/redoc\">Redoc</a> <br> <br> <div><b>Welcome API ðŸ‘‹</b></div> <br>  <br>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: mikkel@resights.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * AdkomstInformationModel Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class AdkomstInformationModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AdkomstInformationModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'adkomst_handel_kode_sub' => '\OpenAPI\Client\Model\AdkomstHandelKodeSubEnum',
        'adkomst_handel_beskrivelse' => 'mixed',
        'adkomst_handel_beskrivelse_sub' => '\OpenAPI\Client\Model\AdkomstHandelBeskrivelseSubEnum',
        'delsalg_indikator' => 'mixed',
        'areal_der_afhaendes' => 'mixed',
        'ejendomstype_sub' => '\OpenAPI\Client\Model\EjendomstypeSubModel',
        'flere_ejendomme_indikator' => 'mixed',
        'medtagne_ejendomme' => '\OpenAPI\Client\Model\MedtagneEjendommeModel'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'adkomst_handel_kode_sub' => null,
        'adkomst_handel_beskrivelse' => null,
        'adkomst_handel_beskrivelse_sub' => null,
        'delsalg_indikator' => null,
        'areal_der_afhaendes' => null,
        'ejendomstype_sub' => null,
        'flere_ejendomme_indikator' => null,
        'medtagne_ejendomme' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'adkomst_handel_kode_sub' => false,
		'adkomst_handel_beskrivelse' => true,
		'adkomst_handel_beskrivelse_sub' => false,
		'delsalg_indikator' => true,
		'areal_der_afhaendes' => true,
		'ejendomstype_sub' => false,
		'flere_ejendomme_indikator' => true,
		'medtagne_ejendomme' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'adkomst_handel_kode_sub' => 'AdkomstHandelKodeSub',
        'adkomst_handel_beskrivelse' => 'AdkomstHandelBeskrivelse',
        'adkomst_handel_beskrivelse_sub' => 'AdkomstHandelBeskrivelseSub',
        'delsalg_indikator' => 'DelsalgIndikator',
        'areal_der_afhaendes' => 'ArealDerAfhaendes',
        'ejendomstype_sub' => 'EjendomstypeSub',
        'flere_ejendomme_indikator' => 'FlereEjendommeIndikator',
        'medtagne_ejendomme' => 'MedtagneEjendomme'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'adkomst_handel_kode_sub' => 'setAdkomstHandelKodeSub',
        'adkomst_handel_beskrivelse' => 'setAdkomstHandelBeskrivelse',
        'adkomst_handel_beskrivelse_sub' => 'setAdkomstHandelBeskrivelseSub',
        'delsalg_indikator' => 'setDelsalgIndikator',
        'areal_der_afhaendes' => 'setArealDerAfhaendes',
        'ejendomstype_sub' => 'setEjendomstypeSub',
        'flere_ejendomme_indikator' => 'setFlereEjendommeIndikator',
        'medtagne_ejendomme' => 'setMedtagneEjendomme'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'adkomst_handel_kode_sub' => 'getAdkomstHandelKodeSub',
        'adkomst_handel_beskrivelse' => 'getAdkomstHandelBeskrivelse',
        'adkomst_handel_beskrivelse_sub' => 'getAdkomstHandelBeskrivelseSub',
        'delsalg_indikator' => 'getDelsalgIndikator',
        'areal_der_afhaendes' => 'getArealDerAfhaendes',
        'ejendomstype_sub' => 'getEjendomstypeSub',
        'flere_ejendomme_indikator' => 'getFlereEjendommeIndikator',
        'medtagne_ejendomme' => 'getMedtagneEjendomme'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('adkomst_handel_kode_sub', $data ?? [], null);
        $this->setIfExists('adkomst_handel_beskrivelse', $data ?? [], null);
        $this->setIfExists('adkomst_handel_beskrivelse_sub', $data ?? [], null);
        $this->setIfExists('delsalg_indikator', $data ?? [], null);
        $this->setIfExists('areal_der_afhaendes', $data ?? [], null);
        $this->setIfExists('ejendomstype_sub', $data ?? [], null);
        $this->setIfExists('flere_ejendomme_indikator', $data ?? [], null);
        $this->setIfExists('medtagne_ejendomme', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets adkomst_handel_kode_sub
     *
     * @return \OpenAPI\Client\Model\AdkomstHandelKodeSubEnum|null
     */
    public function getAdkomstHandelKodeSub()
    {
        return $this->container['adkomst_handel_kode_sub'];
    }

    /**
     * Sets adkomst_handel_kode_sub
     *
     * @param \OpenAPI\Client\Model\AdkomstHandelKodeSubEnum|null $adkomst_handel_kode_sub adkomst_handel_kode_sub
     *
     * @return self
     */
    public function setAdkomstHandelKodeSub($adkomst_handel_kode_sub)
    {
        if (is_null($adkomst_handel_kode_sub)) {
            throw new \InvalidArgumentException('non-nullable adkomst_handel_kode_sub cannot be null');
        }
        $this->container['adkomst_handel_kode_sub'] = $adkomst_handel_kode_sub;

        return $this;
    }

    /**
     * Gets adkomst_handel_beskrivelse
     *
     * @return mixed|null
     */
    public function getAdkomstHandelBeskrivelse()
    {
        return $this->container['adkomst_handel_beskrivelse'];
    }

    /**
     * Sets adkomst_handel_beskrivelse
     *
     * @param mixed|null $adkomst_handel_beskrivelse AdkomstHandelBeskrivelse for valg andenOverdragelse i AdkomstHandelKode
     *
     * @return self
     */
    public function setAdkomstHandelBeskrivelse($adkomst_handel_beskrivelse)
    {
        if (is_null($adkomst_handel_beskrivelse)) {
            array_push($this->openAPINullablesSetToNull, 'adkomst_handel_beskrivelse');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('adkomst_handel_beskrivelse', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['adkomst_handel_beskrivelse'] = $adkomst_handel_beskrivelse;

        return $this;
    }

    /**
     * Gets adkomst_handel_beskrivelse_sub
     *
     * @return \OpenAPI\Client\Model\AdkomstHandelBeskrivelseSubEnum|null
     */
    public function getAdkomstHandelBeskrivelseSub()
    {
        return $this->container['adkomst_handel_beskrivelse_sub'];
    }

    /**
     * Sets adkomst_handel_beskrivelse_sub
     *
     * @param \OpenAPI\Client\Model\AdkomstHandelBeskrivelseSubEnum|null $adkomst_handel_beskrivelse_sub adkomst_handel_beskrivelse_sub
     *
     * @return self
     */
    public function setAdkomstHandelBeskrivelseSub($adkomst_handel_beskrivelse_sub)
    {
        if (is_null($adkomst_handel_beskrivelse_sub)) {
            throw new \InvalidArgumentException('non-nullable adkomst_handel_beskrivelse_sub cannot be null');
        }
        $this->container['adkomst_handel_beskrivelse_sub'] = $adkomst_handel_beskrivelse_sub;

        return $this;
    }

    /**
     * Gets delsalg_indikator
     *
     * @return mixed|null
     */
    public function getDelsalgIndikator()
    {
        return $this->container['delsalg_indikator'];
    }

    /**
     * Sets delsalg_indikator
     *
     * @param mixed|null $delsalg_indikator True angiver at anmeldelsen vedrÃ¸rer alene en del af ejendommen.
     *
     * @return self
     */
    public function setDelsalgIndikator($delsalg_indikator)
    {
        if (is_null($delsalg_indikator)) {
            array_push($this->openAPINullablesSetToNull, 'delsalg_indikator');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('delsalg_indikator', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['delsalg_indikator'] = $delsalg_indikator;

        return $this;
    }

    /**
     * Gets areal_der_afhaendes
     *
     * @return mixed|null
     */
    public function getArealDerAfhaendes()
    {
        return $this->container['areal_der_afhaendes'];
    }

    /**
     * Sets areal_der_afhaendes
     *
     * @param mixed|null $areal_der_afhaendes Her skal det areal, der overdrages, beskrives. Beskrivelsen skal indeholde oplysning om de(t) matr.nr(e). â€“ hvis et ud af flere â€“ og/eller delarealnr(e), samt mÂ² angivelse. Husk at vedhÃ¦fte rids.
     *
     * @return self
     */
    public function setArealDerAfhaendes($areal_der_afhaendes)
    {
        if (is_null($areal_der_afhaendes)) {
            array_push($this->openAPINullablesSetToNull, 'areal_der_afhaendes');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('areal_der_afhaendes', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['areal_der_afhaendes'] = $areal_der_afhaendes;

        return $this;
    }

    /**
     * Gets ejendomstype_sub
     *
     * @return \OpenAPI\Client\Model\EjendomstypeSubModel|null
     */
    public function getEjendomstypeSub()
    {
        return $this->container['ejendomstype_sub'];
    }

    /**
     * Sets ejendomstype_sub
     *
     * @param \OpenAPI\Client\Model\EjendomstypeSubModel|null $ejendomstype_sub ejendomstype_sub
     *
     * @return self
     */
    public function setEjendomstypeSub($ejendomstype_sub)
    {
        if (is_null($ejendomstype_sub)) {
            throw new \InvalidArgumentException('non-nullable ejendomstype_sub cannot be null');
        }
        $this->container['ejendomstype_sub'] = $ejendomstype_sub;

        return $this;
    }

    /**
     * Gets flere_ejendomme_indikator
     *
     * @return mixed|null
     */
    public function getFlereEjendommeIndikator()
    {
        return $this->container['flere_ejendomme_indikator'];
    }

    /**
     * Sets flere_ejendomme_indikator
     *
     * @param mixed|null $flere_ejendomme_indikator True angiver at anmeldelsen vedrÃ¸rer flere ejendomme.
     *
     * @return self
     */
    public function setFlereEjendommeIndikator($flere_ejendomme_indikator)
    {
        if (is_null($flere_ejendomme_indikator)) {
            array_push($this->openAPINullablesSetToNull, 'flere_ejendomme_indikator');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('flere_ejendomme_indikator', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['flere_ejendomme_indikator'] = $flere_ejendomme_indikator;

        return $this;
    }

    /**
     * Gets medtagne_ejendomme
     *
     * @return \OpenAPI\Client\Model\MedtagneEjendommeModel|null
     */
    public function getMedtagneEjendomme()
    {
        return $this->container['medtagne_ejendomme'];
    }

    /**
     * Sets medtagne_ejendomme
     *
     * @param \OpenAPI\Client\Model\MedtagneEjendommeModel|null $medtagne_ejendomme medtagne_ejendomme
     *
     * @return self
     */
    public function setMedtagneEjendomme($medtagne_ejendomme)
    {
        if (is_null($medtagne_ejendomme)) {
            throw new \InvalidArgumentException('non-nullable medtagne_ejendomme cannot be null');
        }
        $this->container['medtagne_ejendomme'] = $medtagne_ejendomme;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


