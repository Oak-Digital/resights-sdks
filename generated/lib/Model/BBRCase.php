<?php
/**
 * BBRCase
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Resights API
 *
 * <img src=\"static/resights/resights-logo.png\" alt=\"Resights Logo\" style=\"position: absolute; top: 52px; right: 36px\" align=\"right\" width=\"240\"> <a href=\"/docs\">Swagger</a> | <a href=\"/redoc\">Redoc</a> <br> <br> <div><b>Welcome API üëã</b></div> <br>  <br>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: mikkel@resights.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * BBRCase Class Doc Comment
 *
 * @category Class
 * @description Byggesag indeholder oplysninger om byggesager og fremdriften i disse samt andre sager, som kan medf√∏re en opdatering af BBR. Der findes to typer: anmeldelses- og tilladelsessager. I BBR 2.0 tilf√∏jes en ny type der anvendes til at gennemf√∏re forel√∏bige registreringer.  Beskrivelse: Byggesag  har til form√•l at modtage oplysninger om √¶ndringer i bygnings- og boligbestanden, som opst√•r gennem byggesagsbehandlingen, samt at vedligeholde en aktuel beskrivelse af de √¶ndringer, der er under udf√∏relse, men som ikke er fuldf√∏rt endnu (verserende byggesager).  En Byggesag skal normalt v√¶re relateret til en Bygning eller et Teknisk anl√¶g. Undtaget er sager som alene indeholder objekter, som ikke ligger under en Bygning eller et Teknisk anl√¶g, dvs. √¶ndringer til grunde eller √¶ndringer eller nyopf√∏relse af Teknisk anl√¶g som ikke ligger i en Bygning.  Bem√¶rkninger: N√•r en Byggesag oprettes oprettes data som forel√∏bige. N√•r en verserende Byggesag afsluttes, overf√∏res oplysningerne som g√¶ldende i stamdata. N√•r andre sager afsluttes med en afg√∏relse ‚ÄùGodkendt‚Äù, overf√∏res sagsdata automatisk til de tilh√∏rende objekter. Ved nedrivning g√∏res bygningen historisk.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class BBRCase implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'BBRCase';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'mixed',
        'namespace' => 'mixed',
        'status' => 'mixed',
        'business_process' => 'mixed',
        'business_area' => 'mixed',
        'business_event' => 'mixed',
        'registration_from' => 'mixed',
        'registration_to' => 'mixed',
        'registration_actor' => 'mixed',
        'effect_from' => 'mixed',
        'effect_to' => 'mixed',
        'effect_actor' => 'mixed',
        'municipality_code' => 'mixed',
        'sag001_building_project_number' => 'mixed',
        'sag002_building_project_date' => 'mixed',
        'sag003_building_permission_date' => 'mixed',
        'sag004_start_date_expected' => 'mixed',
        'sag005_start_date' => 'mixed',
        'sag006_commissioning_permit' => 'mixed',
        'sag007_closure' => 'mixed',
        'sag008_completed_building_area' => 'mixed',
        'sag009_expected_finish_date' => 'mixed',
        'sag010_completion_project' => 'mixed',
        'sag012_building_project_code' => 'mixed',
        'sag013_notification_construction_work_date' => 'mixed',
        'sag016_commissioning_permit_partial' => 'mixed',
        'sag017_provisionally_completed_building_area' => 'mixed',
        'sag018_provisionally_completed_apartments' => 'mixed',
        'sag019_developer_relationship' => 'mixed',
        'sag024_received_application_building_project_date' => 'mixed',
        'sag025_adequate_application_date' => 'mixed',
        'sag026_neighbor_orientation_date' => 'mixed',
        'sag027_neighbor_orientation_completion_date' => 'mixed',
        'sag032_letter' => 'mixed',
        'sag033_provisionally_completed_apartments_without_kitchen' => 'mixed'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'uuid',
        'namespace' => null,
        'status' => null,
        'business_process' => null,
        'business_area' => null,
        'business_event' => null,
        'registration_from' => 'date-time',
        'registration_to' => 'date-time',
        'registration_actor' => null,
        'effect_from' => 'date-time',
        'effect_to' => 'date-time',
        'effect_actor' => null,
        'municipality_code' => null,
        'sag001_building_project_number' => null,
        'sag002_building_project_date' => 'date-time',
        'sag003_building_permission_date' => 'date-time',
        'sag004_start_date_expected' => 'date-time',
        'sag005_start_date' => 'date-time',
        'sag006_commissioning_permit' => 'date-time',
        'sag007_closure' => 'date-time',
        'sag008_completed_building_area' => null,
        'sag009_expected_finish_date' => 'date-time',
        'sag010_completion_project' => 'date-time',
        'sag012_building_project_code' => null,
        'sag013_notification_construction_work_date' => 'date-time',
        'sag016_commissioning_permit_partial' => 'date-time',
        'sag017_provisionally_completed_building_area' => null,
        'sag018_provisionally_completed_apartments' => null,
        'sag019_developer_relationship' => null,
        'sag024_received_application_building_project_date' => 'date-time',
        'sag025_adequate_application_date' => 'date-time',
        'sag026_neighbor_orientation_date' => 'date-time',
        'sag027_neighbor_orientation_completion_date' => 'date-time',
        'sag032_letter' => null,
        'sag033_provisionally_completed_apartments_without_kitchen' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'id' => true,
		'namespace' => true,
		'status' => true,
		'business_process' => true,
		'business_area' => true,
		'business_event' => true,
		'registration_from' => true,
		'registration_to' => true,
		'registration_actor' => true,
		'effect_from' => true,
		'effect_to' => true,
		'effect_actor' => true,
		'municipality_code' => true,
		'sag001_building_project_number' => true,
		'sag002_building_project_date' => true,
		'sag003_building_permission_date' => true,
		'sag004_start_date_expected' => true,
		'sag005_start_date' => true,
		'sag006_commissioning_permit' => true,
		'sag007_closure' => true,
		'sag008_completed_building_area' => true,
		'sag009_expected_finish_date' => true,
		'sag010_completion_project' => true,
		'sag012_building_project_code' => true,
		'sag013_notification_construction_work_date' => true,
		'sag016_commissioning_permit_partial' => true,
		'sag017_provisionally_completed_building_area' => true,
		'sag018_provisionally_completed_apartments' => true,
		'sag019_developer_relationship' => true,
		'sag024_received_application_building_project_date' => true,
		'sag025_adequate_application_date' => true,
		'sag026_neighbor_orientation_date' => true,
		'sag027_neighbor_orientation_completion_date' => true,
		'sag032_letter' => true,
		'sag033_provisionally_completed_apartments_without_kitchen' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'namespace' => 'namespace',
        'status' => 'status',
        'business_process' => 'business_process',
        'business_area' => 'business_area',
        'business_event' => 'business_event',
        'registration_from' => 'registration_from',
        'registration_to' => 'registration_to',
        'registration_actor' => 'registration_actor',
        'effect_from' => 'effect_from',
        'effect_to' => 'effect_to',
        'effect_actor' => 'effect_actor',
        'municipality_code' => 'municipality_code',
        'sag001_building_project_number' => 'sag001_building_project_number',
        'sag002_building_project_date' => 'sag002_building_project_date',
        'sag003_building_permission_date' => 'sag003_building_permission_date',
        'sag004_start_date_expected' => 'sag004_start_date_expected',
        'sag005_start_date' => 'sag005_start_date',
        'sag006_commissioning_permit' => 'sag006_commissioning_permit',
        'sag007_closure' => 'sag007_closure',
        'sag008_completed_building_area' => 'sag008_completed_building_area',
        'sag009_expected_finish_date' => 'sag009_expected_finish_date',
        'sag010_completion_project' => 'sag010_completion_project',
        'sag012_building_project_code' => 'sag012_building_project_code',
        'sag013_notification_construction_work_date' => 'sag013_notification_construction_work_date',
        'sag016_commissioning_permit_partial' => 'sag016_commissioning_permit_partial',
        'sag017_provisionally_completed_building_area' => 'sag017_provisionally_completed_building_area',
        'sag018_provisionally_completed_apartments' => 'sag018_provisionally_completed_apartments',
        'sag019_developer_relationship' => 'sag019_developer_relationship',
        'sag024_received_application_building_project_date' => 'sag024_received_application_building_project_date',
        'sag025_adequate_application_date' => 'sag025_adequate_application_date',
        'sag026_neighbor_orientation_date' => 'sag026_neighbor_orientation_date',
        'sag027_neighbor_orientation_completion_date' => 'sag027_neighbor_orientation_completion_date',
        'sag032_letter' => 'sag032_letter',
        'sag033_provisionally_completed_apartments_without_kitchen' => 'sag033_provisionally_completed_apartments_without_kitchen'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'namespace' => 'setNamespace',
        'status' => 'setStatus',
        'business_process' => 'setBusinessProcess',
        'business_area' => 'setBusinessArea',
        'business_event' => 'setBusinessEvent',
        'registration_from' => 'setRegistrationFrom',
        'registration_to' => 'setRegistrationTo',
        'registration_actor' => 'setRegistrationActor',
        'effect_from' => 'setEffectFrom',
        'effect_to' => 'setEffectTo',
        'effect_actor' => 'setEffectActor',
        'municipality_code' => 'setMunicipalityCode',
        'sag001_building_project_number' => 'setSag001BuildingProjectNumber',
        'sag002_building_project_date' => 'setSag002BuildingProjectDate',
        'sag003_building_permission_date' => 'setSag003BuildingPermissionDate',
        'sag004_start_date_expected' => 'setSag004StartDateExpected',
        'sag005_start_date' => 'setSag005StartDate',
        'sag006_commissioning_permit' => 'setSag006CommissioningPermit',
        'sag007_closure' => 'setSag007Closure',
        'sag008_completed_building_area' => 'setSag008CompletedBuildingArea',
        'sag009_expected_finish_date' => 'setSag009ExpectedFinishDate',
        'sag010_completion_project' => 'setSag010CompletionProject',
        'sag012_building_project_code' => 'setSag012BuildingProjectCode',
        'sag013_notification_construction_work_date' => 'setSag013NotificationConstructionWorkDate',
        'sag016_commissioning_permit_partial' => 'setSag016CommissioningPermitPartial',
        'sag017_provisionally_completed_building_area' => 'setSag017ProvisionallyCompletedBuildingArea',
        'sag018_provisionally_completed_apartments' => 'setSag018ProvisionallyCompletedApartments',
        'sag019_developer_relationship' => 'setSag019DeveloperRelationship',
        'sag024_received_application_building_project_date' => 'setSag024ReceivedApplicationBuildingProjectDate',
        'sag025_adequate_application_date' => 'setSag025AdequateApplicationDate',
        'sag026_neighbor_orientation_date' => 'setSag026NeighborOrientationDate',
        'sag027_neighbor_orientation_completion_date' => 'setSag027NeighborOrientationCompletionDate',
        'sag032_letter' => 'setSag032Letter',
        'sag033_provisionally_completed_apartments_without_kitchen' => 'setSag033ProvisionallyCompletedApartmentsWithoutKitchen'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'namespace' => 'getNamespace',
        'status' => 'getStatus',
        'business_process' => 'getBusinessProcess',
        'business_area' => 'getBusinessArea',
        'business_event' => 'getBusinessEvent',
        'registration_from' => 'getRegistrationFrom',
        'registration_to' => 'getRegistrationTo',
        'registration_actor' => 'getRegistrationActor',
        'effect_from' => 'getEffectFrom',
        'effect_to' => 'getEffectTo',
        'effect_actor' => 'getEffectActor',
        'municipality_code' => 'getMunicipalityCode',
        'sag001_building_project_number' => 'getSag001BuildingProjectNumber',
        'sag002_building_project_date' => 'getSag002BuildingProjectDate',
        'sag003_building_permission_date' => 'getSag003BuildingPermissionDate',
        'sag004_start_date_expected' => 'getSag004StartDateExpected',
        'sag005_start_date' => 'getSag005StartDate',
        'sag006_commissioning_permit' => 'getSag006CommissioningPermit',
        'sag007_closure' => 'getSag007Closure',
        'sag008_completed_building_area' => 'getSag008CompletedBuildingArea',
        'sag009_expected_finish_date' => 'getSag009ExpectedFinishDate',
        'sag010_completion_project' => 'getSag010CompletionProject',
        'sag012_building_project_code' => 'getSag012BuildingProjectCode',
        'sag013_notification_construction_work_date' => 'getSag013NotificationConstructionWorkDate',
        'sag016_commissioning_permit_partial' => 'getSag016CommissioningPermitPartial',
        'sag017_provisionally_completed_building_area' => 'getSag017ProvisionallyCompletedBuildingArea',
        'sag018_provisionally_completed_apartments' => 'getSag018ProvisionallyCompletedApartments',
        'sag019_developer_relationship' => 'getSag019DeveloperRelationship',
        'sag024_received_application_building_project_date' => 'getSag024ReceivedApplicationBuildingProjectDate',
        'sag025_adequate_application_date' => 'getSag025AdequateApplicationDate',
        'sag026_neighbor_orientation_date' => 'getSag026NeighborOrientationDate',
        'sag027_neighbor_orientation_completion_date' => 'getSag027NeighborOrientationCompletionDate',
        'sag032_letter' => 'getSag032Letter',
        'sag033_provisionally_completed_apartments_without_kitchen' => 'getSag033ProvisionallyCompletedApartmentsWithoutKitchen'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('id', $data ?? [], null);
        $this->setIfExists('namespace', $data ?? [], null);
        $this->setIfExists('status', $data ?? [], null);
        $this->setIfExists('business_process', $data ?? [], null);
        $this->setIfExists('business_area', $data ?? [], null);
        $this->setIfExists('business_event', $data ?? [], null);
        $this->setIfExists('registration_from', $data ?? [], null);
        $this->setIfExists('registration_to', $data ?? [], null);
        $this->setIfExists('registration_actor', $data ?? [], null);
        $this->setIfExists('effect_from', $data ?? [], null);
        $this->setIfExists('effect_to', $data ?? [], null);
        $this->setIfExists('effect_actor', $data ?? [], null);
        $this->setIfExists('municipality_code', $data ?? [], null);
        $this->setIfExists('sag001_building_project_number', $data ?? [], null);
        $this->setIfExists('sag002_building_project_date', $data ?? [], null);
        $this->setIfExists('sag003_building_permission_date', $data ?? [], null);
        $this->setIfExists('sag004_start_date_expected', $data ?? [], null);
        $this->setIfExists('sag005_start_date', $data ?? [], null);
        $this->setIfExists('sag006_commissioning_permit', $data ?? [], null);
        $this->setIfExists('sag007_closure', $data ?? [], null);
        $this->setIfExists('sag008_completed_building_area', $data ?? [], null);
        $this->setIfExists('sag009_expected_finish_date', $data ?? [], null);
        $this->setIfExists('sag010_completion_project', $data ?? [], null);
        $this->setIfExists('sag012_building_project_code', $data ?? [], null);
        $this->setIfExists('sag013_notification_construction_work_date', $data ?? [], null);
        $this->setIfExists('sag016_commissioning_permit_partial', $data ?? [], null);
        $this->setIfExists('sag017_provisionally_completed_building_area', $data ?? [], null);
        $this->setIfExists('sag018_provisionally_completed_apartments', $data ?? [], null);
        $this->setIfExists('sag019_developer_relationship', $data ?? [], null);
        $this->setIfExists('sag024_received_application_building_project_date', $data ?? [], null);
        $this->setIfExists('sag025_adequate_application_date', $data ?? [], null);
        $this->setIfExists('sag026_neighbor_orientation_date', $data ?? [], null);
        $this->setIfExists('sag027_neighbor_orientation_completion_date', $data ?? [], null);
        $this->setIfExists('sag032_letter', $data ?? [], null);
        $this->setIfExists('sag033_provisionally_completed_apartments_without_kitchen', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['namespace'] === null) {
            $invalidProperties[] = "'namespace' can't be null";
        }
        if ($this->container['registration_from'] === null) {
            $invalidProperties[] = "'registration_from' can't be null";
        }
        if ($this->container['registration_actor'] === null) {
            $invalidProperties[] = "'registration_actor' can't be null";
        }
        if ($this->container['effect_from'] === null) {
            $invalidProperties[] = "'effect_from' can't be null";
        }
        if ($this->container['effect_actor'] === null) {
            $invalidProperties[] = "'effect_actor' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return mixed
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param mixed $id Persistent unik n√∏gle.
     *
     * @return self
     */
    public function setId($id)
    {
        if (is_null($id)) {
            array_push($this->openAPINullablesSetToNull, 'id');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('id', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets namespace
     *
     * @return mixed
     */
    public function getNamespace()
    {
        return $this->container['namespace'];
    }

    /**
     * Sets namespace
     *
     * @param mixed $namespace namespace
     *
     * @return self
     */
    public function setNamespace($namespace)
    {
        if (is_null($namespace)) {
            array_push($this->openAPINullablesSetToNull, 'namespace');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('namespace', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['namespace'] = $namespace;

        return $this;
    }

    /**
     * Gets status
     *
     * @return mixed|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param mixed|null $status Angivelse af hvor et forvaltningsobjekt er i sin livscyklus.
     *
     * @return self
     */
    public function setStatus($status)
    {
        if (is_null($status)) {
            array_push($this->openAPINullablesSetToNull, 'status');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('status', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets business_process
     *
     * @return mixed|null
     */
    public function getBusinessProcess()
    {
        return $this->container['business_process'];
    }

    /**
     * Sets business_process
     *
     * @param mixed|null $business_process Den manuelle eller IT-underst√∏ttede proces hvori forretningsomr√•det h√•ndterer h√¶ndelsen.
     *
     * @return self
     */
    public function setBusinessProcess($business_process)
    {
        if (is_null($business_process)) {
            array_push($this->openAPINullablesSetToNull, 'business_process');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_process', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['business_process'] = $business_process;

        return $this;
    }

    /**
     * Gets business_area
     *
     * @return mixed|null
     */
    public function getBusinessArea()
    {
        return $this->container['business_area'];
    }

    /**
     * Sets business_area
     *
     * @param mixed|null $business_area Den del af den offentlige forretning der h√•ndterer h√¶ndelsen og derved udvirker √¶ndringen i data.
     *
     * @return self
     */
    public function setBusinessArea($business_area)
    {
        if (is_null($business_area)) {
            array_push($this->openAPINullablesSetToNull, 'business_area');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_area', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['business_area'] = $business_area;

        return $this;
    }

    /**
     * Gets business_event
     *
     * @return mixed|null
     */
    public function getBusinessEvent()
    {
        return $this->container['business_event'];
    }

    /**
     * Sets business_event
     *
     * @param mixed|null $business_event Den begivenhed i virkeligheden som udl√∏ste √¶ndringen i data.
     *
     * @return self
     */
    public function setBusinessEvent($business_event)
    {
        if (is_null($business_event)) {
            array_push($this->openAPINullablesSetToNull, 'business_event');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('business_event', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['business_event'] = $business_event;

        return $this;
    }

    /**
     * Gets registration_from
     *
     * @return mixed
     */
    public function getRegistrationFrom()
    {
        return $this->container['registration_from'];
    }

    /**
     * Sets registration_from
     *
     * @param mixed $registration_from Tidspunktet hvor registreringen er foretaget.
     *
     * @return self
     */
    public function setRegistrationFrom($registration_from)
    {
        if (is_null($registration_from)) {
            array_push($this->openAPINullablesSetToNull, 'registration_from');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('registration_from', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['registration_from'] = $registration_from;

        return $this;
    }

    /**
     * Gets registration_to
     *
     * @return mixed|null
     */
    public function getRegistrationTo()
    {
        return $this->container['registration_to'];
    }

    /**
     * Sets registration_to
     *
     * @param mixed|null $registration_to Tidspunktet hvor en ny registrering er foretaget p√• objektet, og hvor denne version s√•ledes ikke l√¶ngere er den seneste.
     *
     * @return self
     */
    public function setRegistrationTo($registration_to)
    {
        if (is_null($registration_to)) {
            array_push($this->openAPINullablesSetToNull, 'registration_to');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('registration_to', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['registration_to'] = $registration_to;

        return $this;
    }

    /**
     * Gets registration_actor
     *
     * @return mixed
     */
    public function getRegistrationActor()
    {
        return $this->container['registration_actor'];
    }

    /**
     * Sets registration_actor
     *
     * @param mixed $registration_actor Den akt√∏r der har foretaget registreringen.
     *
     * @return self
     */
    public function setRegistrationActor($registration_actor)
    {
        if (is_null($registration_actor)) {
            array_push($this->openAPINullablesSetToNull, 'registration_actor');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('registration_actor', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['registration_actor'] = $registration_actor;

        return $this;
    }

    /**
     * Gets effect_from
     *
     * @return mixed
     */
    public function getEffectFrom()
    {
        return $this->container['effect_from'];
    }

    /**
     * Sets effect_from
     *
     * @param mixed $effect_from Tidspunktet hvorfra objektet har virkning.
     *
     * @return self
     */
    public function setEffectFrom($effect_from)
    {
        if (is_null($effect_from)) {
            array_push($this->openAPINullablesSetToNull, 'effect_from');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('effect_from', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['effect_from'] = $effect_from;

        return $this;
    }

    /**
     * Gets effect_to
     *
     * @return mixed|null
     */
    public function getEffectTo()
    {
        return $this->container['effect_to'];
    }

    /**
     * Sets effect_to
     *
     * @param mixed|null $effect_to Tidspunktet hvor objektets virkning oph√∏rer.
     *
     * @return self
     */
    public function setEffectTo($effect_to)
    {
        if (is_null($effect_to)) {
            array_push($this->openAPINullablesSetToNull, 'effect_to');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('effect_to', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['effect_to'] = $effect_to;

        return $this;
    }

    /**
     * Gets effect_actor
     *
     * @return mixed
     */
    public function getEffectActor()
    {
        return $this->container['effect_actor'];
    }

    /**
     * Sets effect_actor
     *
     * @param mixed $effect_actor Den akt√∏r der har afstedkommet objektets virkning.
     *
     * @return self
     */
    public function setEffectActor($effect_actor)
    {
        if (is_null($effect_actor)) {
            array_push($this->openAPINullablesSetToNull, 'effect_actor');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('effect_actor', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['effect_actor'] = $effect_actor;

        return $this;
    }

    /**
     * Gets municipality_code
     *
     * @return mixed|null
     */
    public function getMunicipalityCode()
    {
        return $this->container['municipality_code'];
    }

    /**
     * Sets municipality_code
     *
     * @param mixed|null $municipality_code municipality_code
     *
     * @return self
     */
    public function setMunicipalityCode($municipality_code)
    {
        if (is_null($municipality_code)) {
            array_push($this->openAPINullablesSetToNull, 'municipality_code');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('municipality_code', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['municipality_code'] = $municipality_code;

        return $this;
    }

    /**
     * Gets sag001_building_project_number
     *
     * @return mixed|null
     */
    public function getSag001BuildingProjectNumber()
    {
        return $this->container['sag001_building_project_number'];
    }

    /**
     * Sets sag001_building_project_number
     *
     * @param mixed|null $sag001_building_project_number Angiver byggesagens nummer
     *
     * @return self
     */
    public function setSag001BuildingProjectNumber($sag001_building_project_number)
    {
        if (is_null($sag001_building_project_number)) {
            array_push($this->openAPINullablesSetToNull, 'sag001_building_project_number');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag001_building_project_number', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag001_building_project_number'] = $sag001_building_project_number;

        return $this;
    }

    /**
     * Gets sag002_building_project_date
     *
     * @return mixed|null
     */
    public function getSag002BuildingProjectDate()
    {
        return $this->container['sag002_building_project_date'];
    }

    /**
     * Sets sag002_building_project_date
     *
     * @param mixed|null $sag002_building_project_date Angiver byggesagensdato
     *
     * @return self
     */
    public function setSag002BuildingProjectDate($sag002_building_project_date)
    {
        if (is_null($sag002_building_project_date)) {
            array_push($this->openAPINullablesSetToNull, 'sag002_building_project_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag002_building_project_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag002_building_project_date'] = $sag002_building_project_date;

        return $this;
    }

    /**
     * Gets sag003_building_permission_date
     *
     * @return mixed|null
     */
    public function getSag003BuildingPermissionDate()
    {
        return $this->container['sag003_building_permission_date'];
    }

    /**
     * Sets sag003_building_permission_date
     *
     * @param mixed|null $sag003_building_permission_date Dato for byggetilladelse
     *
     * @return self
     */
    public function setSag003BuildingPermissionDate($sag003_building_permission_date)
    {
        if (is_null($sag003_building_permission_date)) {
            array_push($this->openAPINullablesSetToNull, 'sag003_building_permission_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag003_building_permission_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag003_building_permission_date'] = $sag003_building_permission_date;

        return $this;
    }

    /**
     * Gets sag004_start_date_expected
     *
     * @return mixed|null
     */
    public function getSag004StartDateExpected()
    {
        return $this->container['sag004_start_date_expected'];
    }

    /**
     * Sets sag004_start_date_expected
     *
     * @param mixed|null $sag004_start_date_expected Dato for forventet p√•begyndelse af byggeri.
     *
     * @return self
     */
    public function setSag004StartDateExpected($sag004_start_date_expected)
    {
        if (is_null($sag004_start_date_expected)) {
            array_push($this->openAPINullablesSetToNull, 'sag004_start_date_expected');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag004_start_date_expected', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag004_start_date_expected'] = $sag004_start_date_expected;

        return $this;
    }

    /**
     * Gets sag005_start_date
     *
     * @return mixed|null
     */
    public function getSag005StartDate()
    {
        return $this->container['sag005_start_date'];
    }

    /**
     * Sets sag005_start_date
     *
     * @param mixed|null $sag005_start_date Dato for p√•begyndelse af byggeri
     *
     * @return self
     */
    public function setSag005StartDate($sag005_start_date)
    {
        if (is_null($sag005_start_date)) {
            array_push($this->openAPINullablesSetToNull, 'sag005_start_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag005_start_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag005_start_date'] = $sag005_start_date;

        return $this;
    }

    /**
     * Gets sag006_commissioning_permit
     *
     * @return mixed|null
     */
    public function getSag006CommissioningPermit()
    {
        return $this->container['sag006_commissioning_permit'];
    }

    /**
     * Sets sag006_commissioning_permit
     *
     * @param mixed|null $sag006_commissioning_permit Angiver dato for ibrugtagning
     *
     * @return self
     */
    public function setSag006CommissioningPermit($sag006_commissioning_permit)
    {
        if (is_null($sag006_commissioning_permit)) {
            array_push($this->openAPINullablesSetToNull, 'sag006_commissioning_permit');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag006_commissioning_permit', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag006_commissioning_permit'] = $sag006_commissioning_permit;

        return $this;
    }

    /**
     * Gets sag007_closure
     *
     * @return mixed|null
     */
    public function getSag007Closure()
    {
        return $this->container['sag007_closure'];
    }

    /**
     * Sets sag007_closure
     *
     * @param mixed|null $sag007_closure Angiver dato for henl√¶ggelse af sag
     *
     * @return self
     */
    public function setSag007Closure($sag007_closure)
    {
        if (is_null($sag007_closure)) {
            array_push($this->openAPINullablesSetToNull, 'sag007_closure');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag007_closure', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag007_closure'] = $sag007_closure;

        return $this;
    }

    /**
     * Gets sag008_completed_building_area
     *
     * @return mixed|null
     */
    public function getSag008CompletedBuildingArea()
    {
        return $this->container['sag008_completed_building_area'];
    }

    /**
     * Sets sag008_completed_building_area
     *
     * @param mixed|null $sag008_completed_building_area Angiver det f√¶rdiggjorte bygningsareal.
     *
     * @return self
     */
    public function setSag008CompletedBuildingArea($sag008_completed_building_area)
    {
        if (is_null($sag008_completed_building_area)) {
            array_push($this->openAPINullablesSetToNull, 'sag008_completed_building_area');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag008_completed_building_area', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag008_completed_building_area'] = $sag008_completed_building_area;

        return $this;
    }

    /**
     * Gets sag009_expected_finish_date
     *
     * @return mixed|null
     */
    public function getSag009ExpectedFinishDate()
    {
        return $this->container['sag009_expected_finish_date'];
    }

    /**
     * Sets sag009_expected_finish_date
     *
     * @param mixed|null $sag009_expected_finish_date Angiver dato for forventet fuldf√∏relse af byggeri.
     *
     * @return self
     */
    public function setSag009ExpectedFinishDate($sag009_expected_finish_date)
    {
        if (is_null($sag009_expected_finish_date)) {
            array_push($this->openAPINullablesSetToNull, 'sag009_expected_finish_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag009_expected_finish_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag009_expected_finish_date'] = $sag009_expected_finish_date;

        return $this;
    }

    /**
     * Gets sag010_completion_project
     *
     * @return mixed|null
     */
    public function getSag010CompletionProject()
    {
        return $this->container['sag010_completion_project'];
    }

    /**
     * Sets sag010_completion_project
     *
     * @param mixed|null $sag010_completion_project Dato for fuldf√∏relse af byggeri.
     *
     * @return self
     */
    public function setSag010CompletionProject($sag010_completion_project)
    {
        if (is_null($sag010_completion_project)) {
            array_push($this->openAPINullablesSetToNull, 'sag010_completion_project');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag010_completion_project', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag010_completion_project'] = $sag010_completion_project;

        return $this;
    }

    /**
     * Gets sag012_building_project_code
     *
     * @return mixed|null
     */
    public function getSag012BuildingProjectCode()
    {
        return $this->container['sag012_building_project_code'];
    }

    /**
     * Sets sag012_building_project_code
     *
     * @param mixed|null $sag012_building_project_code Angiver koden for sagen.
     *
     * @return self
     */
    public function setSag012BuildingProjectCode($sag012_building_project_code)
    {
        if (is_null($sag012_building_project_code)) {
            array_push($this->openAPINullablesSetToNull, 'sag012_building_project_code');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag012_building_project_code', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag012_building_project_code'] = $sag012_building_project_code;

        return $this;
    }

    /**
     * Gets sag013_notification_construction_work_date
     *
     * @return mixed|null
     */
    public function getSag013NotificationConstructionWorkDate()
    {
        return $this->container['sag013_notification_construction_work_date'];
    }

    /**
     * Sets sag013_notification_construction_work_date
     *
     * @param mixed|null $sag013_notification_construction_work_date ¬†Dato for anmeldelse af byggearbejde.
     *
     * @return self
     */
    public function setSag013NotificationConstructionWorkDate($sag013_notification_construction_work_date)
    {
        if (is_null($sag013_notification_construction_work_date)) {
            array_push($this->openAPINullablesSetToNull, 'sag013_notification_construction_work_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag013_notification_construction_work_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag013_notification_construction_work_date'] = $sag013_notification_construction_work_date;

        return $this;
    }

    /**
     * Gets sag016_commissioning_permit_partial
     *
     * @return mixed|null
     */
    public function getSag016CommissioningPermitPartial()
    {
        return $this->container['sag016_commissioning_permit_partial'];
    }

    /**
     * Sets sag016_commissioning_permit_partial
     *
     * @param mixed|null $sag016_commissioning_permit_partial Dato for delvis tilladelse ibrugtagningstilladelse.
     *
     * @return self
     */
    public function setSag016CommissioningPermitPartial($sag016_commissioning_permit_partial)
    {
        if (is_null($sag016_commissioning_permit_partial)) {
            array_push($this->openAPINullablesSetToNull, 'sag016_commissioning_permit_partial');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag016_commissioning_permit_partial', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag016_commissioning_permit_partial'] = $sag016_commissioning_permit_partial;

        return $this;
    }

    /**
     * Gets sag017_provisionally_completed_building_area
     *
     * @return mixed|null
     */
    public function getSag017ProvisionallyCompletedBuildingArea()
    {
        return $this->container['sag017_provisionally_completed_building_area'];
    }

    /**
     * Sets sag017_provisionally_completed_building_area
     *
     * @param mixed|null $sag017_provisionally_completed_building_area Forel√∏bigt f√¶rdiggjort bygningsareal.
     *
     * @return self
     */
    public function setSag017ProvisionallyCompletedBuildingArea($sag017_provisionally_completed_building_area)
    {
        if (is_null($sag017_provisionally_completed_building_area)) {
            array_push($this->openAPINullablesSetToNull, 'sag017_provisionally_completed_building_area');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag017_provisionally_completed_building_area', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag017_provisionally_completed_building_area'] = $sag017_provisionally_completed_building_area;

        return $this;
    }

    /**
     * Gets sag018_provisionally_completed_apartments
     *
     * @return mixed|null
     */
    public function getSag018ProvisionallyCompletedApartments()
    {
        return $this->container['sag018_provisionally_completed_apartments'];
    }

    /**
     * Sets sag018_provisionally_completed_apartments
     *
     * @param mixed|null $sag018_provisionally_completed_apartments Angiver forel√∏bigt f√¶rdiggjort antal lejligheder.
     *
     * @return self
     */
    public function setSag018ProvisionallyCompletedApartments($sag018_provisionally_completed_apartments)
    {
        if (is_null($sag018_provisionally_completed_apartments)) {
            array_push($this->openAPINullablesSetToNull, 'sag018_provisionally_completed_apartments');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag018_provisionally_completed_apartments', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag018_provisionally_completed_apartments'] = $sag018_provisionally_completed_apartments;

        return $this;
    }

    /**
     * Gets sag019_developer_relationship
     *
     * @return mixed|null
     */
    public function getSag019DeveloperRelationship()
    {
        return $this->container['sag019_developer_relationship'];
    }

    /**
     * Sets sag019_developer_relationship
     *
     * @param mixed|null $sag019_developer_relationship Angiver hvem der er bygherre.
     *
     * @return self
     */
    public function setSag019DeveloperRelationship($sag019_developer_relationship)
    {
        if (is_null($sag019_developer_relationship)) {
            array_push($this->openAPINullablesSetToNull, 'sag019_developer_relationship');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag019_developer_relationship', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag019_developer_relationship'] = $sag019_developer_relationship;

        return $this;
    }

    /**
     * Gets sag024_received_application_building_project_date
     *
     * @return mixed|null
     */
    public function getSag024ReceivedApplicationBuildingProjectDate()
    {
        return $this->container['sag024_received_application_building_project_date'];
    }

    /**
     * Sets sag024_received_application_building_project_date
     *
     * @param mixed|null $sag024_received_application_building_project_date Angiver dato for modtagelse af ans√∏gning om byggetilladelse.
     *
     * @return self
     */
    public function setSag024ReceivedApplicationBuildingProjectDate($sag024_received_application_building_project_date)
    {
        if (is_null($sag024_received_application_building_project_date)) {
            array_push($this->openAPINullablesSetToNull, 'sag024_received_application_building_project_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag024_received_application_building_project_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag024_received_application_building_project_date'] = $sag024_received_application_building_project_date;

        return $this;
    }

    /**
     * Gets sag025_adequate_application_date
     *
     * @return mixed|null
     */
    public function getSag025AdequateApplicationDate()
    {
        return $this->container['sag025_adequate_application_date'];
    }

    /**
     * Sets sag025_adequate_application_date
     *
     * @param mixed|null $sag025_adequate_application_date Angiver dato for fyldestg√∏rende ans√∏gning om byggetilladelse.
     *
     * @return self
     */
    public function setSag025AdequateApplicationDate($sag025_adequate_application_date)
    {
        if (is_null($sag025_adequate_application_date)) {
            array_push($this->openAPINullablesSetToNull, 'sag025_adequate_application_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag025_adequate_application_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag025_adequate_application_date'] = $sag025_adequate_application_date;

        return $this;
    }

    /**
     * Gets sag026_neighbor_orientation_date
     *
     * @return mixed|null
     */
    public function getSag026NeighborOrientationDate()
    {
        return $this->container['sag026_neighbor_orientation_date'];
    }

    /**
     * Sets sag026_neighbor_orientation_date
     *
     * @param mixed|null $sag026_neighbor_orientation_date Angiver dato for igangs√¶ttelse af naboorientering.
     *
     * @return self
     */
    public function setSag026NeighborOrientationDate($sag026_neighbor_orientation_date)
    {
        if (is_null($sag026_neighbor_orientation_date)) {
            array_push($this->openAPINullablesSetToNull, 'sag026_neighbor_orientation_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag026_neighbor_orientation_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag026_neighbor_orientation_date'] = $sag026_neighbor_orientation_date;

        return $this;
    }

    /**
     * Gets sag027_neighbor_orientation_completion_date
     *
     * @return mixed|null
     */
    public function getSag027NeighborOrientationCompletionDate()
    {
        return $this->container['sag027_neighbor_orientation_completion_date'];
    }

    /**
     * Sets sag027_neighbor_orientation_completion_date
     *
     * @param mixed|null $sag027_neighbor_orientation_completion_date Angiver dato for f√¶rdigbehandling af naboorientering.
     *
     * @return self
     */
    public function setSag027NeighborOrientationCompletionDate($sag027_neighbor_orientation_completion_date)
    {
        if (is_null($sag027_neighbor_orientation_completion_date)) {
            array_push($this->openAPINullablesSetToNull, 'sag027_neighbor_orientation_completion_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag027_neighbor_orientation_completion_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag027_neighbor_orientation_completion_date'] = $sag027_neighbor_orientation_completion_date;

        return $this;
    }

    /**
     * Gets sag032_letter
     *
     * @return mixed|null
     */
    public function getSag032Letter()
    {
        return $this->container['sag032_letter'];
    }

    /**
     * Sets sag032_letter
     *
     * @param mixed|null $sag032_letter Angiver litra under byggesagen.
     *
     * @return self
     */
    public function setSag032Letter($sag032_letter)
    {
        if (is_null($sag032_letter)) {
            array_push($this->openAPINullablesSetToNull, 'sag032_letter');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag032_letter', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag032_letter'] = $sag032_letter;

        return $this;
    }

    /**
     * Gets sag033_provisionally_completed_apartments_without_kitchen
     *
     * @return mixed|null
     */
    public function getSag033ProvisionallyCompletedApartmentsWithoutKitchen()
    {
        return $this->container['sag033_provisionally_completed_apartments_without_kitchen'];
    }

    /**
     * Sets sag033_provisionally_completed_apartments_without_kitchen
     *
     * @param mixed|null $sag033_provisionally_completed_apartments_without_kitchen Angiver antal f√¶rdiggjorte lejligheder.
     *
     * @return self
     */
    public function setSag033ProvisionallyCompletedApartmentsWithoutKitchen($sag033_provisionally_completed_apartments_without_kitchen)
    {
        if (is_null($sag033_provisionally_completed_apartments_without_kitchen)) {
            array_push($this->openAPINullablesSetToNull, 'sag033_provisionally_completed_apartments_without_kitchen');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sag033_provisionally_completed_apartments_without_kitchen', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sag033_provisionally_completed_apartments_without_kitchen'] = $sag033_provisionally_completed_apartments_without_kitchen;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


