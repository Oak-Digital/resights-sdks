<?php
/**
 * HaeftelseStrukturModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Resights API
 *
 * <img src=\"static/resights/resights-logo.png\" alt=\"Resights Logo\" style=\"position: absolute; top: 52px; right: 36px\" align=\"right\" width=\"240\"> <a href=\"/docs\">Swagger</a> | <a href=\"/redoc\">Redoc</a> <br> <br> <div><b>Welcome API ðŸ‘‹</b></div> <br>  <br>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: mikkel@resights.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * HaeftelseStrukturModel Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class HaeftelseStrukturModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'HaeftelseStrukturModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'type' => '\OpenAPI\Client\Model\HaeftelseTypeEnum',
        'anden_haeftelse_fast_ejendom' => '\OpenAPI\Client\Model\AndenHaeftelseFastEjendomModel',
        'arrest_fast_ejendom' => '\OpenAPI\Client\Model\ArrestFastEjendomModel',
        'ejerpantebrev_fast_ejendom' => '\OpenAPI\Client\Model\EjerpantebrevFastEjendomModel',
        'indekspantebrev_fast_ejendom' => '\OpenAPI\Client\Model\IndekspantebrevFastEjendomModel',
        'pantebrev_fast_ejendom' => '\OpenAPI\Client\Model\PantebrevFastEjendomModel',
        'realkreditpantebrev' => '\OpenAPI\Client\Model\RealkreditpantebrevModel',
        'skadesloesbrev_fast_ejendom' => '\OpenAPI\Client\Model\SkadesloesbrevFastEjendomModel',
        'udlaeg_fast_ejendom' => '\OpenAPI\Client\Model\UdlaegFastEjendomModel',
        'underpantrettighed_samling' => 'mixed'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'type' => null,
        'anden_haeftelse_fast_ejendom' => null,
        'arrest_fast_ejendom' => null,
        'ejerpantebrev_fast_ejendom' => null,
        'indekspantebrev_fast_ejendom' => null,
        'pantebrev_fast_ejendom' => null,
        'realkreditpantebrev' => null,
        'skadesloesbrev_fast_ejendom' => null,
        'udlaeg_fast_ejendom' => null,
        'underpantrettighed_samling' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'type' => false,
		'anden_haeftelse_fast_ejendom' => false,
		'arrest_fast_ejendom' => false,
		'ejerpantebrev_fast_ejendom' => false,
		'indekspantebrev_fast_ejendom' => false,
		'pantebrev_fast_ejendom' => false,
		'realkreditpantebrev' => false,
		'skadesloesbrev_fast_ejendom' => false,
		'udlaeg_fast_ejendom' => false,
		'underpantrettighed_samling' => true
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'type' => 'Type',
        'anden_haeftelse_fast_ejendom' => 'AndenHaeftelseFastEjendom',
        'arrest_fast_ejendom' => 'ArrestFastEjendom',
        'ejerpantebrev_fast_ejendom' => 'EjerpantebrevFastEjendom',
        'indekspantebrev_fast_ejendom' => 'IndekspantebrevFastEjendom',
        'pantebrev_fast_ejendom' => 'PantebrevFastEjendom',
        'realkreditpantebrev' => 'Realkreditpantebrev',
        'skadesloesbrev_fast_ejendom' => 'SkadesloesbrevFastEjendom',
        'udlaeg_fast_ejendom' => 'UdlaegFastEjendom',
        'underpantrettighed_samling' => 'UnderpantrettighedSamling'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'type' => 'setType',
        'anden_haeftelse_fast_ejendom' => 'setAndenHaeftelseFastEjendom',
        'arrest_fast_ejendom' => 'setArrestFastEjendom',
        'ejerpantebrev_fast_ejendom' => 'setEjerpantebrevFastEjendom',
        'indekspantebrev_fast_ejendom' => 'setIndekspantebrevFastEjendom',
        'pantebrev_fast_ejendom' => 'setPantebrevFastEjendom',
        'realkreditpantebrev' => 'setRealkreditpantebrev',
        'skadesloesbrev_fast_ejendom' => 'setSkadesloesbrevFastEjendom',
        'udlaeg_fast_ejendom' => 'setUdlaegFastEjendom',
        'underpantrettighed_samling' => 'setUnderpantrettighedSamling'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'type' => 'getType',
        'anden_haeftelse_fast_ejendom' => 'getAndenHaeftelseFastEjendom',
        'arrest_fast_ejendom' => 'getArrestFastEjendom',
        'ejerpantebrev_fast_ejendom' => 'getEjerpantebrevFastEjendom',
        'indekspantebrev_fast_ejendom' => 'getIndekspantebrevFastEjendom',
        'pantebrev_fast_ejendom' => 'getPantebrevFastEjendom',
        'realkreditpantebrev' => 'getRealkreditpantebrev',
        'skadesloesbrev_fast_ejendom' => 'getSkadesloesbrevFastEjendom',
        'udlaeg_fast_ejendom' => 'getUdlaegFastEjendom',
        'underpantrettighed_samling' => 'getUnderpantrettighedSamling'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('type', $data ?? [], null);
        $this->setIfExists('anden_haeftelse_fast_ejendom', $data ?? [], null);
        $this->setIfExists('arrest_fast_ejendom', $data ?? [], null);
        $this->setIfExists('ejerpantebrev_fast_ejendom', $data ?? [], null);
        $this->setIfExists('indekspantebrev_fast_ejendom', $data ?? [], null);
        $this->setIfExists('pantebrev_fast_ejendom', $data ?? [], null);
        $this->setIfExists('realkreditpantebrev', $data ?? [], null);
        $this->setIfExists('skadesloesbrev_fast_ejendom', $data ?? [], null);
        $this->setIfExists('udlaeg_fast_ejendom', $data ?? [], null);
        $this->setIfExists('underpantrettighed_samling', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets type
     *
     * @return \OpenAPI\Client\Model\HaeftelseTypeEnum
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param \OpenAPI\Client\Model\HaeftelseTypeEnum $type type
     *
     * @return self
     */
    public function setType($type)
    {
        if (is_null($type)) {
            throw new \InvalidArgumentException('non-nullable type cannot be null');
        }
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets anden_haeftelse_fast_ejendom
     *
     * @return \OpenAPI\Client\Model\AndenHaeftelseFastEjendomModel|null
     */
    public function getAndenHaeftelseFastEjendom()
    {
        return $this->container['anden_haeftelse_fast_ejendom'];
    }

    /**
     * Sets anden_haeftelse_fast_ejendom
     *
     * @param \OpenAPI\Client\Model\AndenHaeftelseFastEjendomModel|null $anden_haeftelse_fast_ejendom anden_haeftelse_fast_ejendom
     *
     * @return self
     */
    public function setAndenHaeftelseFastEjendom($anden_haeftelse_fast_ejendom)
    {
        if (is_null($anden_haeftelse_fast_ejendom)) {
            throw new \InvalidArgumentException('non-nullable anden_haeftelse_fast_ejendom cannot be null');
        }
        $this->container['anden_haeftelse_fast_ejendom'] = $anden_haeftelse_fast_ejendom;

        return $this;
    }

    /**
     * Gets arrest_fast_ejendom
     *
     * @return \OpenAPI\Client\Model\ArrestFastEjendomModel|null
     */
    public function getArrestFastEjendom()
    {
        return $this->container['arrest_fast_ejendom'];
    }

    /**
     * Sets arrest_fast_ejendom
     *
     * @param \OpenAPI\Client\Model\ArrestFastEjendomModel|null $arrest_fast_ejendom arrest_fast_ejendom
     *
     * @return self
     */
    public function setArrestFastEjendom($arrest_fast_ejendom)
    {
        if (is_null($arrest_fast_ejendom)) {
            throw new \InvalidArgumentException('non-nullable arrest_fast_ejendom cannot be null');
        }
        $this->container['arrest_fast_ejendom'] = $arrest_fast_ejendom;

        return $this;
    }

    /**
     * Gets ejerpantebrev_fast_ejendom
     *
     * @return \OpenAPI\Client\Model\EjerpantebrevFastEjendomModel|null
     */
    public function getEjerpantebrevFastEjendom()
    {
        return $this->container['ejerpantebrev_fast_ejendom'];
    }

    /**
     * Sets ejerpantebrev_fast_ejendom
     *
     * @param \OpenAPI\Client\Model\EjerpantebrevFastEjendomModel|null $ejerpantebrev_fast_ejendom ejerpantebrev_fast_ejendom
     *
     * @return self
     */
    public function setEjerpantebrevFastEjendom($ejerpantebrev_fast_ejendom)
    {
        if (is_null($ejerpantebrev_fast_ejendom)) {
            throw new \InvalidArgumentException('non-nullable ejerpantebrev_fast_ejendom cannot be null');
        }
        $this->container['ejerpantebrev_fast_ejendom'] = $ejerpantebrev_fast_ejendom;

        return $this;
    }

    /**
     * Gets indekspantebrev_fast_ejendom
     *
     * @return \OpenAPI\Client\Model\IndekspantebrevFastEjendomModel|null
     */
    public function getIndekspantebrevFastEjendom()
    {
        return $this->container['indekspantebrev_fast_ejendom'];
    }

    /**
     * Sets indekspantebrev_fast_ejendom
     *
     * @param \OpenAPI\Client\Model\IndekspantebrevFastEjendomModel|null $indekspantebrev_fast_ejendom indekspantebrev_fast_ejendom
     *
     * @return self
     */
    public function setIndekspantebrevFastEjendom($indekspantebrev_fast_ejendom)
    {
        if (is_null($indekspantebrev_fast_ejendom)) {
            throw new \InvalidArgumentException('non-nullable indekspantebrev_fast_ejendom cannot be null');
        }
        $this->container['indekspantebrev_fast_ejendom'] = $indekspantebrev_fast_ejendom;

        return $this;
    }

    /**
     * Gets pantebrev_fast_ejendom
     *
     * @return \OpenAPI\Client\Model\PantebrevFastEjendomModel|null
     */
    public function getPantebrevFastEjendom()
    {
        return $this->container['pantebrev_fast_ejendom'];
    }

    /**
     * Sets pantebrev_fast_ejendom
     *
     * @param \OpenAPI\Client\Model\PantebrevFastEjendomModel|null $pantebrev_fast_ejendom pantebrev_fast_ejendom
     *
     * @return self
     */
    public function setPantebrevFastEjendom($pantebrev_fast_ejendom)
    {
        if (is_null($pantebrev_fast_ejendom)) {
            throw new \InvalidArgumentException('non-nullable pantebrev_fast_ejendom cannot be null');
        }
        $this->container['pantebrev_fast_ejendom'] = $pantebrev_fast_ejendom;

        return $this;
    }

    /**
     * Gets realkreditpantebrev
     *
     * @return \OpenAPI\Client\Model\RealkreditpantebrevModel|null
     */
    public function getRealkreditpantebrev()
    {
        return $this->container['realkreditpantebrev'];
    }

    /**
     * Sets realkreditpantebrev
     *
     * @param \OpenAPI\Client\Model\RealkreditpantebrevModel|null $realkreditpantebrev realkreditpantebrev
     *
     * @return self
     */
    public function setRealkreditpantebrev($realkreditpantebrev)
    {
        if (is_null($realkreditpantebrev)) {
            throw new \InvalidArgumentException('non-nullable realkreditpantebrev cannot be null');
        }
        $this->container['realkreditpantebrev'] = $realkreditpantebrev;

        return $this;
    }

    /**
     * Gets skadesloesbrev_fast_ejendom
     *
     * @return \OpenAPI\Client\Model\SkadesloesbrevFastEjendomModel|null
     */
    public function getSkadesloesbrevFastEjendom()
    {
        return $this->container['skadesloesbrev_fast_ejendom'];
    }

    /**
     * Sets skadesloesbrev_fast_ejendom
     *
     * @param \OpenAPI\Client\Model\SkadesloesbrevFastEjendomModel|null $skadesloesbrev_fast_ejendom skadesloesbrev_fast_ejendom
     *
     * @return self
     */
    public function setSkadesloesbrevFastEjendom($skadesloesbrev_fast_ejendom)
    {
        if (is_null($skadesloesbrev_fast_ejendom)) {
            throw new \InvalidArgumentException('non-nullable skadesloesbrev_fast_ejendom cannot be null');
        }
        $this->container['skadesloesbrev_fast_ejendom'] = $skadesloesbrev_fast_ejendom;

        return $this;
    }

    /**
     * Gets udlaeg_fast_ejendom
     *
     * @return \OpenAPI\Client\Model\UdlaegFastEjendomModel|null
     */
    public function getUdlaegFastEjendom()
    {
        return $this->container['udlaeg_fast_ejendom'];
    }

    /**
     * Sets udlaeg_fast_ejendom
     *
     * @param \OpenAPI\Client\Model\UdlaegFastEjendomModel|null $udlaeg_fast_ejendom udlaeg_fast_ejendom
     *
     * @return self
     */
    public function setUdlaegFastEjendom($udlaeg_fast_ejendom)
    {
        if (is_null($udlaeg_fast_ejendom)) {
            throw new \InvalidArgumentException('non-nullable udlaeg_fast_ejendom cannot be null');
        }
        $this->container['udlaeg_fast_ejendom'] = $udlaeg_fast_ejendom;

        return $this;
    }

    /**
     * Gets underpantrettighed_samling
     *
     * @return mixed|null
     */
    public function getUnderpantrettighedSamling()
    {
        return $this->container['underpantrettighed_samling'];
    }

    /**
     * Sets underpantrettighed_samling
     *
     * @param mixed|null $underpantrettighed_samling Angiver et underpant i en pantrettighed. Underpant har deres egen underordnede prioritetsstilling og sin egen unikke rettighedsidentifkator. Der returneres identifikation af underpantets dokument i form af DokumenRevisionIdentifikator og underpantets belÃ¸b.
     *
     * @return self
     */
    public function setUnderpantrettighedSamling($underpantrettighed_samling)
    {
        if (is_null($underpantrettighed_samling)) {
            array_push($this->openAPINullablesSetToNull, 'underpantrettighed_samling');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('underpantrettighed_samling', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['underpantrettighed_samling'] = $underpantrettighed_samling;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


