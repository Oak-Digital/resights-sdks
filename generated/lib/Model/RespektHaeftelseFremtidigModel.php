<?php
/**
 * RespektHaeftelseFremtidigModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Resights API
 *
 * <img src=\"static/resights/resights-logo.png\" alt=\"Resights Logo\" style=\"position: absolute; top: 52px; right: 36px\" align=\"right\" width=\"240\"> <a href=\"/docs\">Swagger</a> | <a href=\"/redoc\">Redoc</a> <br> <br> <div><b>Welcome API ðŸ‘‹</b></div> <br>  <br>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: mikkel@resights.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * RespektHaeftelseFremtidigModel Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class RespektHaeftelseFremtidigModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'RespektHaeftelseFremtidigModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'beloeb' => 'mixed',
        'valuta' => 'mixed',
        'rente_sats' => 'mixed',
        'kreditor_samling' => 'mixed',
        'ekspedition_type' => '\OpenAPI\Client\Model\EkspeditionTypeEnum',
        'ekspedition_subtype' => '\OpenAPI\Client\Model\EkspeditionSubtypeEnum',
        'ekspedition_vaerdi' => 'mixed',
        'saerlige_laanevilkaar' => 'mixed',
        'laantype_kode' => '\OpenAPI\Client\Model\HaeftelseLaantypeKodeEnum'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'beloeb' => null,
        'valuta' => null,
        'rente_sats' => null,
        'kreditor_samling' => null,
        'ekspedition_type' => null,
        'ekspedition_subtype' => null,
        'ekspedition_vaerdi' => null,
        'saerlige_laanevilkaar' => null,
        'laantype_kode' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'beloeb' => true,
		'valuta' => true,
		'rente_sats' => true,
		'kreditor_samling' => true,
		'ekspedition_type' => false,
		'ekspedition_subtype' => false,
		'ekspedition_vaerdi' => true,
		'saerlige_laanevilkaar' => true,
		'laantype_kode' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'beloeb' => 'Beloeb',
        'valuta' => 'Valuta',
        'rente_sats' => 'RenteSats',
        'kreditor_samling' => 'KreditorSamling',
        'ekspedition_type' => 'EkspeditionType',
        'ekspedition_subtype' => 'EkspeditionSubtype',
        'ekspedition_vaerdi' => 'EkspeditionVaerdi',
        'saerlige_laanevilkaar' => 'SaerligeLaanevilkaar',
        'laantype_kode' => 'LaantypeKode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'beloeb' => 'setBeloeb',
        'valuta' => 'setValuta',
        'rente_sats' => 'setRenteSats',
        'kreditor_samling' => 'setKreditorSamling',
        'ekspedition_type' => 'setEkspeditionType',
        'ekspedition_subtype' => 'setEkspeditionSubtype',
        'ekspedition_vaerdi' => 'setEkspeditionVaerdi',
        'saerlige_laanevilkaar' => 'setSaerligeLaanevilkaar',
        'laantype_kode' => 'setLaantypeKode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'beloeb' => 'getBeloeb',
        'valuta' => 'getValuta',
        'rente_sats' => 'getRenteSats',
        'kreditor_samling' => 'getKreditorSamling',
        'ekspedition_type' => 'getEkspeditionType',
        'ekspedition_subtype' => 'getEkspeditionSubtype',
        'ekspedition_vaerdi' => 'getEkspeditionVaerdi',
        'saerlige_laanevilkaar' => 'getSaerligeLaanevilkaar',
        'laantype_kode' => 'getLaantypeKode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('beloeb', $data ?? [], null);
        $this->setIfExists('valuta', $data ?? [], null);
        $this->setIfExists('rente_sats', $data ?? [], null);
        $this->setIfExists('kreditor_samling', $data ?? [], null);
        $this->setIfExists('ekspedition_type', $data ?? [], null);
        $this->setIfExists('ekspedition_subtype', $data ?? [], null);
        $this->setIfExists('ekspedition_vaerdi', $data ?? [], null);
        $this->setIfExists('saerlige_laanevilkaar', $data ?? [], null);
        $this->setIfExists('laantype_kode', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['beloeb'] === null) {
            $invalidProperties[] = "'beloeb' can't be null";
        }
        if ($this->container['valuta'] === null) {
            $invalidProperties[] = "'valuta' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets beloeb
     *
     * @return mixed
     */
    public function getBeloeb()
    {
        return $this->container['beloeb'];
    }

    /**
     * Sets beloeb
     *
     * @param mixed $beloeb BelÃ¸b pÃ¥ hÃ¦ftelse.
     *
     * @return self
     */
    public function setBeloeb($beloeb)
    {
        if (is_null($beloeb)) {
            array_push($this->openAPINullablesSetToNull, 'beloeb');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('beloeb', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['beloeb'] = $beloeb;

        return $this;
    }

    /**
     * Gets valuta
     *
     * @return mixed
     */
    public function getValuta()
    {
        return $this->container['valuta'];
    }

    /**
     * Sets valuta
     *
     * @param mixed $valuta ISO 4217 valutakode
     *
     * @return self
     */
    public function setValuta($valuta)
    {
        if (is_null($valuta)) {
            array_push($this->openAPINullablesSetToNull, 'valuta');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('valuta', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['valuta'] = $valuta;

        return $this;
    }

    /**
     * Gets rente_sats
     *
     * @return mixed|null
     */
    public function getRenteSats()
    {
        return $this->container['rente_sats'];
    }

    /**
     * Sets rente_sats
     *
     * @param mixed|null $rente_sats Angivelse af rentesats. Angives ikke ved feks kontantlÃ¥n.
     *
     * @return self
     */
    public function setRenteSats($rente_sats)
    {
        if (is_null($rente_sats)) {
            array_push($this->openAPINullablesSetToNull, 'rente_sats');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('rente_sats', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['rente_sats'] = $rente_sats;

        return $this;
    }

    /**
     * Gets kreditor_samling
     *
     * @return mixed|null
     */
    public function getKreditorSamling()
    {
        return $this->container['kreditor_samling'];
    }

    /**
     * Sets kreditor_samling
     *
     * @param mixed|null $kreditor_samling Samling af kreditorer.
     *
     * @return self
     */
    public function setKreditorSamling($kreditor_samling)
    {
        if (is_null($kreditor_samling)) {
            array_push($this->openAPINullablesSetToNull, 'kreditor_samling');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('kreditor_samling', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['kreditor_samling'] = $kreditor_samling;

        return $this;
    }

    /**
     * Gets ekspedition_type
     *
     * @return \OpenAPI\Client\Model\EkspeditionTypeEnum|null
     */
    public function getEkspeditionType()
    {
        return $this->container['ekspedition_type'];
    }

    /**
     * Sets ekspedition_type
     *
     * @param \OpenAPI\Client\Model\EkspeditionTypeEnum|null $ekspedition_type ekspedition_type
     *
     * @return self
     */
    public function setEkspeditionType($ekspedition_type)
    {
        if (is_null($ekspedition_type)) {
            throw new \InvalidArgumentException('non-nullable ekspedition_type cannot be null');
        }
        $this->container['ekspedition_type'] = $ekspedition_type;

        return $this;
    }

    /**
     * Gets ekspedition_subtype
     *
     * @return \OpenAPI\Client\Model\EkspeditionSubtypeEnum|null
     */
    public function getEkspeditionSubtype()
    {
        return $this->container['ekspedition_subtype'];
    }

    /**
     * Sets ekspedition_subtype
     *
     * @param \OpenAPI\Client\Model\EkspeditionSubtypeEnum|null $ekspedition_subtype ekspedition_subtype
     *
     * @return self
     */
    public function setEkspeditionSubtype($ekspedition_subtype)
    {
        if (is_null($ekspedition_subtype)) {
            throw new \InvalidArgumentException('non-nullable ekspedition_subtype cannot be null');
        }
        $this->container['ekspedition_subtype'] = $ekspedition_subtype;

        return $this;
    }

    /**
     * Gets ekspedition_vaerdi
     *
     * @return mixed|null
     */
    public function getEkspeditionVaerdi()
    {
        return $this->container['ekspedition_vaerdi'];
    }

    /**
     * Sets ekspedition_vaerdi
     *
     * @param mixed|null $ekspedition_vaerdi Angiver ekspeditionsvÃ¦rdien.
     *
     * @return self
     */
    public function setEkspeditionVaerdi($ekspedition_vaerdi)
    {
        if (is_null($ekspedition_vaerdi)) {
            array_push($this->openAPINullablesSetToNull, 'ekspedition_vaerdi');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('ekspedition_vaerdi', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['ekspedition_vaerdi'] = $ekspedition_vaerdi;

        return $this;
    }

    /**
     * Gets saerlige_laanevilkaar
     *
     * @return mixed|null
     */
    public function getSaerligeLaanevilkaar()
    {
        return $this->container['saerlige_laanevilkaar'];
    }

    /**
     * Sets saerlige_laanevilkaar
     *
     * @param mixed|null $saerlige_laanevilkaar SÃ¦rlige lÃ¥nevilkÃ¥r for en fremtidig hÃ¦ftelse.
     *
     * @return self
     */
    public function setSaerligeLaanevilkaar($saerlige_laanevilkaar)
    {
        if (is_null($saerlige_laanevilkaar)) {
            array_push($this->openAPINullablesSetToNull, 'saerlige_laanevilkaar');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('saerlige_laanevilkaar', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['saerlige_laanevilkaar'] = $saerlige_laanevilkaar;

        return $this;
    }

    /**
     * Gets laantype_kode
     *
     * @return \OpenAPI\Client\Model\HaeftelseLaantypeKodeEnum|null
     */
    public function getLaantypeKode()
    {
        return $this->container['laantype_kode'];
    }

    /**
     * Sets laantype_kode
     *
     * @param \OpenAPI\Client\Model\HaeftelseLaantypeKodeEnum|null $laantype_kode laantype_kode
     *
     * @return self
     */
    public function setLaantypeKode($laantype_kode)
    {
        if (is_null($laantype_kode)) {
            throw new \InvalidArgumentException('non-nullable laantype_kode cannot be null');
        }
        $this->container['laantype_kode'] = $laantype_kode;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


