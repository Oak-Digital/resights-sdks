<?php
/**
 * BBRPlotResponseTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Resights API
 *
 * <img src=\"static/resights/resights-logo.png\" alt=\"Resights Logo\" style=\"position: absolute; top: 52px; right: 36px\" align=\"right\" width=\"240\"> <a href=\"/docs\">Swagger</a> | <a href=\"/redoc\">Redoc</a> <br> <br> <div><b>Welcome API ðŸ‘‹</b></div> <br>  <br>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: mikkel@resights.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * BBRPlotResponseTest Class Doc Comment
 *
 * @category    Class
 * @description Definition: Ved en Grund forstÃ¥s enten arealer, som i Matriklen er opfÃ¸rt som Ã©t Jordstykke, eller fysisk sammenhÃ¦ngende arealer, som i Matriklen er opfÃ¸rt som flere Jordstykker, nÃ¥r de ifÃ¸lge noteringen i Matriklen skal holdes forenede som en Samlet fast ejendom og ligger i samme kommune.  Beskrivelse: PÃ¥ grundniveau i BBR findes de oplysninger, der er fÃ¦lles for alle Bygninger og Enheder inden for den pÃ¥gÃ¦ldende ejendom (eksempelvis kloakforhold og vandforsyning)  BemÃ¦rkning: Fysisk sammenhÃ¦ngende Jordstykker for en Samlet Fast Ejendom, som tilhÃ¸rer forskellige ejerlav, udgÃ¸r ligeledes Ã©n Grund.
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class BBRPlotResponseTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "BBRPlotResponse"
     */
    public function testBBRPlotResponse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "namespace"
     */
    public function testPropertyNamespace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_process"
     */
    public function testPropertyBusinessProcess()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_area"
     */
    public function testPropertyBusinessArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_event"
     */
    public function testPropertyBusinessEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "registration_from"
     */
    public function testPropertyRegistrationFrom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "registration_to"
     */
    public function testPropertyRegistrationTo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "registration_actor"
     */
    public function testPropertyRegistrationActor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "effect_from"
     */
    public function testPropertyEffectFrom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "effect_to"
     */
    public function testPropertyEffectTo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "effect_actor"
     */
    public function testPropertyEffectActor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "municipality_code"
     */
    public function testPropertyMunicipalityCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gru009_water_supply"
     */
    public function testPropertyGru009WaterSupply()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gru010_drainage"
     */
    public function testPropertyGru010Drainage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gru021_discharge_permit"
     */
    public function testPropertyGru021DischargePermit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gru022_wastewater_supply_membership"
     */
    public function testPropertyGru022WastewaterSupplyMembership()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gru023_wastewater_drainage_order"
     */
    public function testPropertyGru023WastewaterDrainageOrder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gru024_wastewater_drainage_deadline"
     */
    public function testPropertyGru024WastewaterDrainageDeadline()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gru025_permission_to_exit"
     */
    public function testPropertyGru025PermissionToExit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gru026_permission_to_exit_date"
     */
    public function testPropertyGru026PermissionToExitDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gru027_permission_to_alternative_disposal_diversion"
     */
    public function testPropertyGru027PermissionToAlternativeDisposalDiversion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gru028_permission_to_alternative_disposal_diversion_date"
     */
    public function testPropertyGru028PermissionToAlternativeDisposalDiversionDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gru029_exemption_collective_heating_supply"
     */
    public function testPropertyGru029ExemptionCollectiveHeatingSupply()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gru030_exemption_collective_heating_supply_date"
     */
    public function testPropertyGru030ExemptionCollectiveHeatingSupplyDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gru500_note"
     */
    public function testPropertyGru500Note()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "access_address"
     */
    public function testPropertyAccessAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "property_relation_id"
     */
    public function testPropertyPropertyRelationId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "land_ids"
     */
    public function testPropertyLandIds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
