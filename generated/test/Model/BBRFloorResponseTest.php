<?php
/**
 * BBRFloorResponseTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Resights API
 *
 * <img src=\"static/resights/resights-logo.png\" alt=\"Resights Logo\" style=\"position: absolute; top: 52px; right: 36px\" align=\"right\" width=\"240\"> <a href=\"/docs\">Swagger</a> | <a href=\"/redoc\">Redoc</a> <br> <br> <div><b>Welcome API ðŸ‘‹</b></div> <br>  <br>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: mikkel@resights.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * BBRFloorResponseTest Class Doc Comment
 *
 * @category    Class
 * @description Definition: Et sammenhÃ¦ngende vandret bÃ¦rende etageplan i en Bygning.  Beskrivelse: Etager, der opdeles af et niveauspring pÃ¥ mere end en halv etage hÃ¸jde, regnes ikke som en samlet Etage. Trappeskakter, udvendige trapper og adgangsarealer indregnes i Etagen.  BemÃ¦rkninger: Definition af de enkelte Etager tilfÃ¸rer ikke forretningsmÃ¦ssigvÃ¦rdi til beskrivelsen af alle typer Bygninger. En Etage kan have flere Enheder, og en Enhed kan have flere Etager. Derfor er relationerne mellem Etage og Enhed 0..*_/0..*. Der kan vÃ¦re flere Enheder og Etager i en bygning, men Enheder og Etager kan ikke deles mellem Bygninger. Derfor er kardinaliteterne her henholdsvis 0..1 og 1.
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class BBRFloorResponseTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "BBRFloorResponse"
     */
    public function testBBRFloorResponse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "namespace"
     */
    public function testPropertyNamespace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_process"
     */
    public function testPropertyBusinessProcess()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_area"
     */
    public function testPropertyBusinessArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_event"
     */
    public function testPropertyBusinessEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "registration_from"
     */
    public function testPropertyRegistrationFrom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "registration_to"
     */
    public function testPropertyRegistrationTo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "registration_actor"
     */
    public function testPropertyRegistrationActor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "effect_from"
     */
    public function testPropertyEffectFrom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "effect_to"
     */
    public function testPropertyEffectTo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "effect_actor"
     */
    public function testPropertyEffectActor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "municipality_code"
     */
    public function testPropertyMunicipalityCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eta006_floor_name_building"
     */
    public function testPropertyEta006FloorNameBuilding()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eta020_area_total_floor"
     */
    public function testPropertyEta020AreaTotalFloor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eta021_area_utilized_attic"
     */
    public function testPropertyEta021AreaUtilizedAttic()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eta022_area_basement"
     */
    public function testPropertyEta022AreaBasement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eta023_area_legal_residential_basement"
     */
    public function testPropertyEta023AreaLegalResidentialBasement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eta024_area_access"
     */
    public function testPropertyEta024AreaAccess()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eta025_floor_type"
     */
    public function testPropertyEta025FloorType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eta026_basement_commercial"
     */
    public function testPropertyEta026BasementCommercial()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eta500_note"
     */
    public function testPropertyEta500Note()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "building_id"
     */
    public function testPropertyBuildingId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
