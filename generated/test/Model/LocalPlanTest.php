<?php
/**
 * LocalPlanTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Resights API
 *
 * <img src=\"static/resights/resights-logo.png\" alt=\"Resights Logo\" style=\"position: absolute; top: 52px; right: 36px\" align=\"right\" width=\"240\"> <a href=\"/docs\">Swagger</a> | <a href=\"/redoc\">Redoc</a> <br> <br> <div><b>Welcome API ðŸ‘‹</b></div> <br>  <br>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: mikkel@resights.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * LocalPlanTest Class Doc Comment
 *
 * @category    Class
 * @description LocalPlan
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class LocalPlanTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "LocalPlan"
     */
    public function testLocalPlan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "oid"
     */
    public function testPropertyOid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "plan_id"
     */
    public function testPropertyPlanId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "municipality_code"
     */
    public function testPropertyMunicipalityCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "municipality_name"
     */
    public function testPropertyMunicipalityName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "object_code"
     */
    public function testPropertyObjectCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "plan_type"
     */
    public function testPropertyPlanType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "plan_number"
     */
    public function testPropertyPlanNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "plan_name"
     */
    public function testPropertyPlanName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "plan_status"
     */
    public function testPropertyPlanStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage"
     */
    public function testPropertyUsage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage_general"
     */
    public function testPropertyUsageGeneral()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "date_proposal"
     */
    public function testPropertyDateProposal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "date_adopted"
     */
    public function testPropertyDateAdopted()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "date_cancelled"
     */
    public function testPropertyDateCancelled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "date_in_force"
     */
    public function testPropertyDateInForce()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "date_start"
     */
    public function testPropertyDateStart()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "date_end"
     */
    public function testPropertyDateEnd()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "date_attributes"
     */
    public function testPropertyDateAttributes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "date_geometry"
     */
    public function testPropertyDateGeometry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "date_created"
     */
    public function testPropertyDateCreated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "date_updated"
     */
    public function testPropertyDateUpdated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "link"
     */
    public function testPropertyLink()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "district"
     */
    public function testPropertyDistrict()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "zone"
     */
    public function testPropertyZone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "zone_status"
     */
    public function testPropertyZoneStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "constructed_percentage_valid_for"
     */
    public function testPropertyConstructedPercentageValidFor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_environment_class_allowed"
     */
    public function testPropertyMinEnvironmentClassAllowed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_environment_class_allowed"
     */
    public function testPropertyMaxEnvironmentClassAllowed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "conservation_description"
     */
    public function testPropertyConservationDescription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "construction_share"
     */
    public function testPropertyConstructionShare()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_land"
     */
    public function testPropertyMinLand()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mega_watt"
     */
    public function testPropertyMegaWatt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "contains_vvm"
     */
    public function testPropertyContainsVvm()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplementary_conditions"
     */
    public function testPropertySupplementaryConditions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "zone_status_regulated"
     */
    public function testPropertyZoneStatusRegulated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage_regulated"
     */
    public function testPropertyUsageRegulated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "scope_regulated"
     */
    public function testPropertyScopeRegulated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parcel_size_regulated"
     */
    public function testPropertyParcelSizeRegulated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "complex"
     */
    public function testPropertyComplex()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "complex_description"
     */
    public function testPropertyComplexDescription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "wind_description"
     */
    public function testPropertyWindDescription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "state_plan"
     */
    public function testPropertyStatePlan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "signs_facade_regulated_1"
     */
    public function testPropertySignsFacadeRegulated1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "signs_facade_regulated_2"
     */
    public function testPropertySignsFacadeRegulated2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "signs_facade_regulated_3"
     */
    public function testPropertySignsFacadeRegulated3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage_specific_1"
     */
    public function testPropertyUsageSpecific1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage_specific_2"
     */
    public function testPropertyUsageSpecific2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage_specific_3"
     */
    public function testPropertyUsageSpecific3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage_specific_4"
     */
    public function testPropertyUsageSpecific4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage_specific_5"
     */
    public function testPropertyUsageSpecific5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage_specific_6"
     */
    public function testPropertyUsageSpecific6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage_specific_7"
     */
    public function testPropertyUsageSpecific7()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage_specific_8"
     */
    public function testPropertyUsageSpecific8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage_specific_9"
     */
    public function testPropertyUsageSpecific9()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usage_specific_10"
     */
    public function testPropertyUsageSpecific10()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_percentage_area"
     */
    public function testPropertyMaxConstructedPercentageArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_percentage_area_1"
     */
    public function testPropertyMaxConstructedPercentageArea1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_percentage_area_2"
     */
    public function testPropertyMaxConstructedPercentageArea2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_percentage_area_3"
     */
    public function testPropertyMaxConstructedPercentageArea3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_percentage_area_4"
     */
    public function testPropertyMaxConstructedPercentageArea4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_percentage_area_5"
     */
    public function testPropertyMaxConstructedPercentageArea5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_percentage_area_6"
     */
    public function testPropertyMaxConstructedPercentageArea6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_percentage_area_7"
     */
    public function testPropertyMaxConstructedPercentageArea7()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_percentage_area_8"
     */
    public function testPropertyMaxConstructedPercentageArea8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_percentage_area_9"
     */
    public function testPropertyMaxConstructedPercentageArea9()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_percentage_area_10"
     */
    public function testPropertyMaxConstructedPercentageArea10()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_share_calculated_from_1"
     */
    public function testPropertyMaxConstructedShareCalculatedFrom1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_share_calculated_from_2"
     */
    public function testPropertyMaxConstructedShareCalculatedFrom2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_share_calculated_from_3"
     */
    public function testPropertyMaxConstructedShareCalculatedFrom3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_share_calculated_from_4"
     */
    public function testPropertyMaxConstructedShareCalculatedFrom4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_share_calculated_from_5"
     */
    public function testPropertyMaxConstructedShareCalculatedFrom5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_share_calculated_from_6"
     */
    public function testPropertyMaxConstructedShareCalculatedFrom6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_share_calculated_from_7"
     */
    public function testPropertyMaxConstructedShareCalculatedFrom7()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_share_calculated_from_8"
     */
    public function testPropertyMaxConstructedShareCalculatedFrom8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_share_calculated_from_9"
     */
    public function testPropertyMaxConstructedShareCalculatedFrom9()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_constructed_share_calculated_from_10"
     */
    public function testPropertyMaxConstructedShareCalculatedFrom10()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_share_land_construction"
     */
    public function testPropertyMaxShareLandConstruction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_share_land_construction_1"
     */
    public function testPropertyMaxShareLandConstruction1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_share_land_construction_2"
     */
    public function testPropertyMaxShareLandConstruction2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_share_land_construction_3"
     */
    public function testPropertyMaxShareLandConstruction3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_share_land_construction_4"
     */
    public function testPropertyMaxShareLandConstruction4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_share_land_construction_5"
     */
    public function testPropertyMaxShareLandConstruction5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_share_land_construction_6"
     */
    public function testPropertyMaxShareLandConstruction6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_share_land_construction_7"
     */
    public function testPropertyMaxShareLandConstruction7()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_share_land_construction_8"
     */
    public function testPropertyMaxShareLandConstruction8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_share_land_construction_9"
     */
    public function testPropertyMaxShareLandConstruction9()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_share_land_construction_10"
     */
    public function testPropertyMaxShareLandConstruction10()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floors"
     */
    public function testPropertyMaxFloors()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floors_1"
     */
    public function testPropertyMaxFloors1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floors_2"
     */
    public function testPropertyMaxFloors2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floors_3"
     */
    public function testPropertyMaxFloors3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floors_4"
     */
    public function testPropertyMaxFloors4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floors_5"
     */
    public function testPropertyMaxFloors5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floors_6"
     */
    public function testPropertyMaxFloors6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floors_7"
     */
    public function testPropertyMaxFloors7()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floors_8"
     */
    public function testPropertyMaxFloors8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floors_9"
     */
    public function testPropertyMaxFloors9()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floors_10"
     */
    public function testPropertyMaxFloors10()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area"
     */
    public function testPropertyMaxFloorArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_1"
     */
    public function testPropertyMaxFloorArea1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_2"
     */
    public function testPropertyMaxFloorArea2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_3"
     */
    public function testPropertyMaxFloorArea3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_4"
     */
    public function testPropertyMaxFloorArea4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_5"
     */
    public function testPropertyMaxFloorArea5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_6"
     */
    public function testPropertyMaxFloorArea6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_7"
     */
    public function testPropertyMaxFloorArea7()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_8"
     */
    public function testPropertyMaxFloorArea8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_9"
     */
    public function testPropertyMaxFloorArea9()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_10"
     */
    public function testPropertyMaxFloorArea10()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_valid_for"
     */
    public function testPropertyMaxFloorAreaValidFor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_valid_for_1"
     */
    public function testPropertyMaxFloorAreaValidFor1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_valid_for_2"
     */
    public function testPropertyMaxFloorAreaValidFor2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_valid_for_3"
     */
    public function testPropertyMaxFloorAreaValidFor3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_valid_for_4"
     */
    public function testPropertyMaxFloorAreaValidFor4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_valid_for_5"
     */
    public function testPropertyMaxFloorAreaValidFor5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_valid_for_6"
     */
    public function testPropertyMaxFloorAreaValidFor6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_valid_for_7"
     */
    public function testPropertyMaxFloorAreaValidFor7()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_valid_for_8"
     */
    public function testPropertyMaxFloorAreaValidFor8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_valid_for_9"
     */
    public function testPropertyMaxFloorAreaValidFor9()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_floor_area_valid_for_10"
     */
    public function testPropertyMaxFloorAreaValidFor10()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2"
     */
    public function testPropertyMaxSqm3PerSqm2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_1"
     */
    public function testPropertyMaxSqm3PerSqm21()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_2"
     */
    public function testPropertyMaxSqm3PerSqm22()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_3"
     */
    public function testPropertyMaxSqm3PerSqm23()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_4"
     */
    public function testPropertyMaxSqm3PerSqm24()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_5"
     */
    public function testPropertyMaxSqm3PerSqm25()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_6"
     */
    public function testPropertyMaxSqm3PerSqm26()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_7"
     */
    public function testPropertyMaxSqm3PerSqm27()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_8"
     */
    public function testPropertyMaxSqm3PerSqm28()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_9"
     */
    public function testPropertyMaxSqm3PerSqm29()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_10"
     */
    public function testPropertyMaxSqm3PerSqm210()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_valid_for"
     */
    public function testPropertyMaxSqm3PerSqm2ValidFor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_valid_for_1"
     */
    public function testPropertyMaxSqm3PerSqm2ValidFor1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_valid_for_2"
     */
    public function testPropertyMaxSqm3PerSqm2ValidFor2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_valid_for_3"
     */
    public function testPropertyMaxSqm3PerSqm2ValidFor3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_valid_for_4"
     */
    public function testPropertyMaxSqm3PerSqm2ValidFor4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_valid_for_5"
     */
    public function testPropertyMaxSqm3PerSqm2ValidFor5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_valid_for_6"
     */
    public function testPropertyMaxSqm3PerSqm2ValidFor6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_valid_for_7"
     */
    public function testPropertyMaxSqm3PerSqm2ValidFor7()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_valid_for_8"
     */
    public function testPropertyMaxSqm3PerSqm2ValidFor8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_valid_for_9"
     */
    public function testPropertyMaxSqm3PerSqm2ValidFor9()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_sqm3_per_sqm2_valid_for_10"
     */
    public function testPropertyMaxSqm3PerSqm2ValidFor10()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_building_height"
     */
    public function testPropertyMaxBuildingHeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_building_height_1"
     */
    public function testPropertyMaxBuildingHeight1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_building_height_2"
     */
    public function testPropertyMaxBuildingHeight2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_building_height_3"
     */
    public function testPropertyMaxBuildingHeight3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_building_height_4"
     */
    public function testPropertyMaxBuildingHeight4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_building_height_5"
     */
    public function testPropertyMaxBuildingHeight5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_building_height_6"
     */
    public function testPropertyMaxBuildingHeight6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_building_height_7"
     */
    public function testPropertyMaxBuildingHeight7()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_building_height_8"
     */
    public function testPropertyMaxBuildingHeight8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_building_height_9"
     */
    public function testPropertyMaxBuildingHeight9()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_building_height_10"
     */
    public function testPropertyMaxBuildingHeight10()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_parcel_size"
     */
    public function testPropertyMinParcelSize()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_parcel_size_1"
     */
    public function testPropertyMinParcelSize1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_parcel_size_2"
     */
    public function testPropertyMinParcelSize2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_parcel_size_3"
     */
    public function testPropertyMinParcelSize3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_parcel_size_4"
     */
    public function testPropertyMinParcelSize4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_parcel_size_5"
     */
    public function testPropertyMinParcelSize5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_parcel_size_6"
     */
    public function testPropertyMinParcelSize6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_parcel_size_7"
     */
    public function testPropertyMinParcelSize7()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_parcel_size_8"
     */
    public function testPropertyMinParcelSize8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_parcel_size_9"
     */
    public function testPropertyMinParcelSize9()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_parcel_size_10"
     */
    public function testPropertyMinParcelSize10()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parcel_subdivision_regulated"
     */
    public function testPropertyParcelSubdivisionRegulated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parcel_subdivision_regulated_1"
     */
    public function testPropertyParcelSubdivisionRegulated1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parcel_subdivision_regulated_2"
     */
    public function testPropertyParcelSubdivisionRegulated2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parcel_subdivision_regulated_3"
     */
    public function testPropertyParcelSubdivisionRegulated3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parcel_subdivision_regulated_4"
     */
    public function testPropertyParcelSubdivisionRegulated4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parcel_subdivision_regulated_5"
     */
    public function testPropertyParcelSubdivisionRegulated5()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parcel_subdivision_regulated_6"
     */
    public function testPropertyParcelSubdivisionRegulated6()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parcel_subdivision_regulated_7"
     */
    public function testPropertyParcelSubdivisionRegulated7()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parcel_subdivision_regulated_8"
     */
    public function testPropertyParcelSubdivisionRegulated8()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parcel_subdivision_regulated_9"
     */
    public function testPropertyParcelSubdivisionRegulated9()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parcel_subdivision_regulated_10"
     */
    public function testPropertyParcelSubdivisionRegulated10()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "geom"
     */
    public function testPropertyGeom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
