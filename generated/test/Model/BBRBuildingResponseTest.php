<?php
/**
 * BBRBuildingResponseTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Resights API
 *
 * <img src=\"static/resights/resights-logo.png\" alt=\"Resights Logo\" style=\"position: absolute; top: 52px; right: 36px\" align=\"right\" width=\"240\"> <a href=\"/docs\">Swagger</a> | <a href=\"/redoc\">Redoc</a> <br> <br> <div><b>Welcome API 游녦</b></div> <br>  <br>
 *
 * The version of the OpenAPI document: 2.0
 * Contact: mikkel@resights.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * BBRBuildingResponseTest Class Doc Comment
 *
 * @category    Class
 * @description En Bygning best친r af en eller flere konstruktioner, der udg칮r en rumlig helhed, og som sk칝rmer mod vejrliget og skal som minimum best친 af en overd칝kning.  Beskrivelse: P친 bygningsniveau i BBR findes de oplysninger, der er f칝lles for Bygningen, det vil sige for alle de Enheder, Bygningen indeholder (f.eks. tagbekl칝dning  og materiale af ydre v칝gge). Ved en bygning forst친s i BBR en sammenh칝ngende bebyggelse, der er opf칮rt p친 en selvst칝ndig Bestemt fast ejendom, og som i det v칝sentlige er opf칮rt af ensartede materialer og med omtrent samme antal etager. Bebyggelsen skal ogs친 have ensartede adgangsforhold (f.eks. direkte adgang til vej eller indirekte adgang gennem port eller lignende).  Bem칝rkninger: En Bygning registreres i BBR uanset om den er opf칮rt p친 et matrikuleret eller umatrikuleret areal - herunder ogs친 bygninger opf칮rt p친 forstand eller s칮territoriet.
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class BBRBuildingResponseTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "BBRBuildingResponse"
     */
    public function testBBRBuildingResponse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "namespace"
     */
    public function testPropertyNamespace()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_process"
     */
    public function testPropertyBusinessProcess()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_area"
     */
    public function testPropertyBusinessArea()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "business_event"
     */
    public function testPropertyBusinessEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "registration_from"
     */
    public function testPropertyRegistrationFrom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "registration_to"
     */
    public function testPropertyRegistrationTo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "registration_actor"
     */
    public function testPropertyRegistrationActor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "effect_from"
     */
    public function testPropertyEffectFrom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "effect_to"
     */
    public function testPropertyEffectTo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "effect_actor"
     */
    public function testPropertyEffectActor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "municipality_code"
     */
    public function testPropertyMunicipalityCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg007_building_number"
     */
    public function testPropertyByg007BuildingNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg021_building_usage"
     */
    public function testPropertyByg021BuildingUsage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg024_number_apartments_with_kitchen"
     */
    public function testPropertyByg024NumberApartmentsWithKitchen()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg025_number_apartments_without_kitchen"
     */
    public function testPropertyByg025NumberApartmentsWithoutKitchen()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg026_construction_year"
     */
    public function testPropertyByg026ConstructionYear()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg027_rebuilding_year"
     */
    public function testPropertyByg027RebuildingYear()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg029_temporary_building_date"
     */
    public function testPropertyByg029TemporaryBuildingDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg030_water_supply"
     */
    public function testPropertyByg030WaterSupply()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg031_drainage"
     */
    public function testPropertyByg031Drainage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg032_material_exterior_wall"
     */
    public function testPropertyByg032MaterialExteriorWall()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg033_material_roofing"
     */
    public function testPropertyByg033MaterialRoofing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg034_material_supplementary_exterior_wall"
     */
    public function testPropertyByg034MaterialSupplementaryExteriorWall()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg035_material_supplementary_roofing"
     */
    public function testPropertyByg035MaterialSupplementaryRoofing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg036_material_contains_asbestos"
     */
    public function testPropertyByg036MaterialContainsAsbestos()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg037_material_source"
     */
    public function testPropertyByg037MaterialSource()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg038_area_building_total"
     */
    public function testPropertyByg038AreaBuildingTotal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg039_area_building_residential"
     */
    public function testPropertyByg039AreaBuildingResidential()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg040_area_building_commercial"
     */
    public function testPropertyByg040AreaBuildingCommercial()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg041_area_constructed"
     */
    public function testPropertyByg041AreaConstructed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg042_area_built_in_garage"
     */
    public function testPropertyByg042AreaBuiltInGarage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg043_area_built_in_carport"
     */
    public function testPropertyByg043AreaBuiltInCarport()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg044_area_built_in_outhouse"
     */
    public function testPropertyByg044AreaBuiltInOuthouse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg045_area_built_in_patio"
     */
    public function testPropertyByg045AreaBuiltInPatio()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg046_area_closed_building_areas_total"
     */
    public function testPropertyByg046AreaClosedBuildingAreasTotal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg047_area_waste_rooms_terrain_level"
     */
    public function testPropertyByg047AreaWasteRoomsTerrainLevel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg048_area_other"
     */
    public function testPropertyByg048AreaOther()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg049_area_covered"
     */
    public function testPropertyByg049AreaCovered()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg050_area_open_roofs_total"
     */
    public function testPropertyByg050AreaOpenRoofsTotal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg051_area_access"
     */
    public function testPropertyByg051AreaAccess()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg052_area_carport_calculation_principle"
     */
    public function testPropertyByg052AreaCarportCalculationPrinciple()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg053_area_building_source"
     */
    public function testPropertyByg053AreaBuildingSource()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg054_number_floors"
     */
    public function testPropertyByg054NumberFloors()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg055_deviating_floors"
     */
    public function testPropertyByg055DeviatingFloors()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg056_heating_installation"
     */
    public function testPropertyByg056HeatingInstallation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg057_heating_medium"
     */
    public function testPropertyByg057HeatingMedium()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg058_heating_supplementary"
     */
    public function testPropertyByg058HeatingSupplementary()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg069_number_seats_emergency_room"
     */
    public function testPropertyByg069NumberSeatsEmergencyRoom()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg070_preservation"
     */
    public function testPropertyByg070Preservation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg071_preservation_reference"
     */
    public function testPropertyByg071PreservationReference()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg094_revision_date"
     */
    public function testPropertyByg094RevisionDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg111_storm_council_flooding_risk"
     */
    public function testPropertyByg111StormCouncilFloodingRisk()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg112_storm_council_flooding_risk_date"
     */
    public function testPropertyByg112StormCouncilFloodingRiskDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg113_building_damage_insurance"
     */
    public function testPropertyByg113BuildingDamageInsurance()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg114_building_damage_insurance_date"
     */
    public function testPropertyByg114BuildingDamageInsuranceDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg119_discharge_permit"
     */
    public function testPropertyByg119DischargePermit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg121_building_damage_insurance_covered"
     */
    public function testPropertyByg121BuildingDamageInsuranceCovered()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg122_validation_date"
     */
    public function testPropertyByg122ValidationDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg123_wastewater_supply_membership"
     */
    public function testPropertyByg123WastewaterSupplyMembership()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg124_wastewater_drainage_order"
     */
    public function testPropertyByg124WastewaterDrainageOrder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg125_wastewater_drainage_deadline"
     */
    public function testPropertyByg125WastewaterDrainageDeadline()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg126_permission_exit"
     */
    public function testPropertyByg126PermissionExit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg127_permission_exit_date"
     */
    public function testPropertyByg127PermissionExitDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg128_permission_alternative_disposal_diversion"
     */
    public function testPropertyByg128PermissionAlternativeDisposalDiversion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg129_permission_alternative_disposal_diversion_date"
     */
    public function testPropertyByg129PermissionAlternativeDisposalDiversionDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg130_area_exterior_insulation"
     */
    public function testPropertyByg130AreaExteriorInsulation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg131_exemption_collective_heating_supply"
     */
    public function testPropertyByg131ExemptionCollectiveHeatingSupply()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg132_exemption_collective_heating_supply_date"
     */
    public function testPropertyByg132ExemptionCollectiveHeatingSupplyDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg133_coordinate_source"
     */
    public function testPropertyByg133CoordinateSource()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg134_coordinate_quality"
     */
    public function testPropertyByg134CoordinateQuality()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg135_coordinate_supplementary_information"
     */
    public function testPropertyByg135CoordinateSupplementaryInformation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg136_placement_maritime_territory"
     */
    public function testPropertyByg136PlacementMaritimeTerritory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg137_banedanmark_building_number"
     */
    public function testPropertyByg137BanedanmarkBuildingNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg140_easement_rental_property_date"
     */
    public function testPropertyByg140EasementRentalPropertyDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg150_material_floor"
     */
    public function testPropertyByg150MaterialFloor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg151_clearance_height"
     */
    public function testPropertyByg151ClearanceHeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg152_construction_open_closed"
     */
    public function testPropertyByg152ConstructionOpenClosed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg153_construction_conditions"
     */
    public function testPropertyByg153ConstructionConditions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg301_relocation_type"
     */
    public function testPropertyByg301RelocationType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg302_municipality_newcomers"
     */
    public function testPropertyByg302MunicipalityNewcomers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg403_storm_council_supplementary_comments"
     */
    public function testPropertyByg403StormCouncilSupplementaryComments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg404_coordinate"
     */
    public function testPropertyByg404Coordinate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg406_coordinate_system"
     */
    public function testPropertyByg406CoordinateSystem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "byg500_note"
     */
    public function testPropertyByg500Note()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "slks"
     */
    public function testPropertySlks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "energy_label"
     */
    public function testPropertyEnergyLabel()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "access_address"
     */
    public function testPropertyAccessAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "floor"
     */
    public function testPropertyFloor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "opg020_elevator"
     */
    public function testPropertyOpg020Elevator()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "number_units"
     */
    public function testPropertyNumberUnits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "number_floors"
     */
    public function testPropertyNumberFloors()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "number_staircases"
     */
    public function testPropertyNumberStaircases()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "plot_id"
     */
    public function testPropertyPlotId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
